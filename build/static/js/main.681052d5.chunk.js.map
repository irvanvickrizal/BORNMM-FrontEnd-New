{"version":3,"sources":["components/page-loading/PageLoading.module.scss","store/reducers/auth.js","utils/helpers.js","store/reducers/ui.js","components/small-box/SmallBox.js","store/reducers/pagetext.js","components/cardheader/HeaderChanger.js","pages/Dashboard.js","components/button/Button.js","components/content-header/ContentHeader.js","components/page-loading/PageLoading.js","components/dropdown/dropdown-menu/DropdownMenu.js","components/dropdown/Dropdown.js","components/menu-item/MenuItem.js","components/checkbox/Checkbox.js","components/input/Input.js","pages/Blank.js","pages/SubMenu.js","pages/profile/Post.js","pages/profile/ActivityTab.js","pages/profile/TimelineTab.js","pages/profile/SettingsTab.js","pages/profile/Profile.js","Variables.js","utils/apiServices.js","pages/mMaterialCategory/mMaterialCategory.jsx","pages/mSubMaterialCategory/mSubMaterialCategoryPanel.jsx","store/reducers/scope.js","pages/mSubMaterialCategory/mSubMaterialCategoryList.jsx","pages/mSubMaterialCategory/mSubMaterialCategory.jsx","pages/mMaterial/mMaterialPanel.jsx","pages/mMaterial/mMaterialList.jsx","pages/mMaterial/mMaterial.jsx","pages/mDeliveryType/MDeliveryType.jsx","pages/mOrderType/MOrderType.jsx","store/reducers/dop.js","pages/mDOP/mDOPPanel.jsx","store/action/dopAction.js","pages/mDOP/mDOPList.jsx","pages/mDOP/mDOP.jsx","pages/mScope/mScopePanel.jsx","pages/mScope/mScopeList.jsx","pages/mScope/mScope.jsx","store/action/scopeAction.js","pages/dop2/index.js","components/mScope/table/tableScope.jsx","pages/scope2/scope2.js","pages/POCreation/POCreationPanel.jsx","pages/POCreation/POCreationList.jsx","pages/POCreation/POCreation.jsx","pages/POScope/POScopePanel.jsx","pages/POScope/DataGenerator.jsx","pages/POScope/POScopeList.jsx","pages/POScope/ModalUpload.jsx","pages/POScope/ModalUploadRevise.jsx","components/searchcolumn/SearchColumn.js","pages/POScope/POScopeListAnt.jsx","pages/POScope/POScope.jsx","store/action/siteConditionAction.js","components/mSiteCondition/tableSiteCondition/index.jsx","pages/mSiteCondition/mSiteCondition.jsx","store/action/scopeOrderAction.js","pages/mScopeOrderType/table.jsx","pages/mScopeOrderType/index.jsx","modules/main/header/languages-dropdown/LanguagesDropdown.js","modules/main/header/user-dropdown/UserDropdown.js","modules/main/header/Header.js","modules/main/footer/Footer.js","modules/main/menu-sidebar/MenuSidebar.js","components/cardheader/cardheader.jsx","store/action/workFlowAction.js","pages/mWorkFlow/table.jsx","pages/mWorkFlow/index.jsx","pages/siteListDeliveryRequestType/table.jsx","store/action/siteListDeliveryRequestAction.js","pages/siteListDeliveryRequestType/index.jsx","pages/siteListDeliveryRequestType/DataGenerator.jsx","pages/siteListDeliveryRequestType/DismantleForm.jsx","pages/siteListDeliveryRequestType/DismantleFormEdit.jsx","pages/siteListDeliveryRequestType/MaterialOrder.jsx","store/action/logistikFormAction.js","pages/siteListDeliveryRequestType/LogistikForm.jsx","pages/siteListDeliveryRequestType/Logistic.jsx","store/action/aprovalTaskPendingAction.js","pages/approvel/tableAproval.jsx","pages/approvel/aprovalTaskPendingForm.jsx","pages/orderRequestDraft/table.jsx","pages/orderRequestDraft/orderRequestDraft.jsx","pages/siteListDeliveryRequestType/OrderRejectionPending.jsx","store/action/taskAssignmentPendingAction.js","pages/SconTaskSummary/table.jsx","pages/SconTaskSummary/sconTaskSummary.jsx","pages/SconTaskPending/ModalAssignTask.jsx","pages/SconTaskPending/ModalRequestReschedule.jsx","pages/SconTaskPending/Table.jsx","pages/SconTaskPending/SconTaskPending.jsx","pages/InventoryReport/Table.jsx","pages/InventoryReport/InventoryReport.jsx","pages/InboundUpload/Table.jsx","pages/InboundUpload/InboundUpload.jsx","pages/OutboundUpload/Table.jsx","pages/OutboundUpload/OutboundUpload.jsx","pages/siteListDeliveryRequestType/SdrForm.jsx","modules/main/Main.js","services/auth.js","modules/login/Login.js","modules/register/Register.js","modules/forgot-password/ForgotPassword.js","modules/recover-password/RecoverPassword.js","modules/privacy-policy/PrivacyPolicy.js","routes/PublicRoute.js","routes/PrivateRoute.js","App.js","hooks/useWindowSize.js","store/reducers/dopReducer.js","store/reducers/scopeReducer.js","store/reducers/poScopeReducer.js","store/reducers/siteConditionReducer.js","store/reducers/scopeOrderReducer.js","store/reducers/workFlowReducer.js","store/reducers/siteListDeliveryRequestReducer.js","store/reducers/logistikFormReducer.js","store/reducers/aprovalTaskPendingReducer.js","store/reducers/taskAssignmentSummaryReducer.js","store/reducers/allReducer.js","store/saga/auth.js","store/saga/dopSaga.js","store/saga/scopeSaga.js","store/saga/siteConditionSaga.js","store/saga/scopeOrderSaga.js","store/saga/workFLowSaga.js","store/saga/siteListDeliveryRequestSaga.js","store/saga/logistikFormSaga.js","store/saga/aprovalTaskPendingSaga.js","store/saga/taskAssignmentSummarySaga.js","store/saga/allSaga.js","store/store.js","i18n.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","isLoggedIn","localStorage","getItem","token","currentUser","email","picture","user","authSlice","createSlice","name","reducers","loginUser","state","payload","console","log","setItem","logoutUser","removeItem","loadUser","actions","calculateWindowSize","windowWidth","isSidebarMenuCollapsed","screenSize","window","innerWidth","isLoading","uiSlice","toggleSidebarMenu","setWindowSize","setIsLoading","SmallBox","type","icon","count","title","navigateTo","useTranslation","t","className","to","pagetextSlice","cardHeader","setCardTitle","HeaderChanger","useDispatch","dispatch","Dashboard","useEffect","data","labels","datasets","backgroundColor","display","datalabels","color","options","responsive","plugins","legend","position","text","align","animation","animateScale","animateRotate","footer","bordered","dataSource","renderItem","item","Item","ghost","FormOutlined","icons","facebook","google","googlePlus","AppButton","spinnerTemplate","iconTemplate","children","theme","disabled","otherProps","Spinner","as","size","role","Button","variant","ContentHeader","href","PageLoading","classes","loading","CircularProgress","DropdownMenu","containerTag","dropdownMenuRef","useRef","useState","left","right","styles","setStyles","setClasses","dropdownMenuElement","current","document","getElementById","offsetWidth","offsetLeft","getBoundingClientRect","visiblePart","ref","style","padding","Dropdown","isOpen","buttonTemplate","menuTemplate","menuContainerTag","onChange","dropdownRef","dropdownOpen","setDropdownOpen","handleClickOutside","event","contains","target","addEventListener","removeEventListener","onClick","MenuItem","menuItem","isMenuExtended","setIsMenuExtended","isExpandable","setIsExpandable","isMainActive","setIsMainActive","isOneOfChildrenActive","setIsOneOfChildrenActive","history","useHistory","calculateIsActive","url","forEach","path","length","location","pathname","listen","push","cursor","map","exact","Checkbox","checked","label","uuidv4","ID","value","setValue","id","htmlFor","Input","placeholder","autoComplete","formik","formikFieldProps","props","localValue","setLocalValue","formStatus","setFormStatus","setFieldValue","touched","errors","preventDefault","Blank","SubMenu","Post","isClearfix","src","alt","ActivityTab","isActive","TimelineTab","SettingsTab","defaultValue","Profile","activeTab","setActiveTab","toggle","tab","block","variables","baseURL","config","headers","Authorization","GET","Promise","resolve","reject","axios","get","then","result","err","GETParam","GETParam2","param1","param2","POST","body","post","toast","error","POSTParam","param","POSTFile","file","formdata","FormData","append","POSTFiled","PUT","put","PUTParam","DELETE","delete","API","getOutboundUploadFile","getOutboundErrorList","postReviseOutboundFile","postOutboundFile","deleteOutboundFile","postInboundFile","deleteInboundFile","postReviseInboundFile","getInboundErrorList","getInboundUploadFile","getInventoryReport","postCancelTask","putRequestReschedule","postAssignEngineer","getSconEngineer","sconid","wpid","getSconTaskPending","getPOScopeListFile","getOrderDetailEdit","odi","putMaterialOrderDraft","getOrderRequestDraft","deleteMaterialOrderRequest","putEditQtyMaterial","postAddMaterial","postMaterialOrderBookSubmit","postMaterialOrderDirectSubmit","getMaterialListExcludeOrdered","getBOQRefGetList","getOrderDetailMaterial","getOrderDetailForm","getSubcon","getSiteCondition","getPacketType","ordertypeid","getSiteLocation","getRequestBase","getCTName","invcodeid","getOrigin","getDestination","getDismantledBy","getmDOPList","postDOPData","putDOPData","getmSubcon","getmMaterialList","getmOrderType","Login","auth","username","password","putActiveStatus","getmDeliveryType","getUomList","putmScopeActivation","putmScope","postmScope","getmScope","getPOList","postPOData","putPOActivation","getMaterialCategory","postMaterialCategory","deleteMaterialCategory","getPOScopeList","putmMaterialActiveStatus","getSubMaterialCategory","postSubMaterialCategory","putSubMaterialCategory","putSubCategoryStatus","getUOM","getItemLevel","putMaterial","postPOScope","putMaterialActivation","postPOFile","getMenu","getErrorList","deleteFileUpload","PUTFile","postRevisePOFile","getSiteInfo","getInventoryActiveList","postDismantleForm","getSconTaskOnProgress","postReAssignmentEngineer","getTeamCoordinator","subconid","workpackageid","getHasExpressDelivery","MMaterialCategory","changeCategoryName","e","setState","CategoryName","categories","cols","norows","CategoryId","LMBY","this","refreshList","setTimeout","$","DataTable","orderCellsTop","autoWidth","search","on","column","order","nodes","each","cell","i","innerHTML","draw","res","rows","modalTitle","cat","categoryId","categoryName","confirm","status","success","message","fetch","method","JSON","stringify","json","alert","reload","addClick","matGroupCount","Form","Check","handleIsActiveClick","editClick","xmlns","width","height","fill","viewBox","d","tabIndex","createClick","updateClick","Component","mSubMaterialCategoryPanel","ddlCategory","setDdlCategory","selectedCategory","setSelectedCategory","subCategoryName","setSubCategoryName","fieldConfirm","setFieldConfirm","snRequired","setSnRequired","qtyRequired","setqtyRequired","filtered","filter","auto","class","um","Modal","Footer","scopeSlice","isNew","isEdit","setIsNew","setIsEdit","mScopeList","show","setShow","subCategoryData","setsubCategoryData","refreshData","targets","sct","isEditRow","subCategoryId","categoryDetail","handleShowEdit","saveClick","faSave","handleCancelEdit","onHide","backdrop","keyboard","Header","closeButton","Title","Body","mScope","useSelector","dop","mScopePanel","scopeName","setScopeName","scopeDesc","setScopeDesc","mMaterialList","ddlUoM","setDdlUoM","ddlItemLevel","setDdlItemLevel","ddlSubCategory","setDdlSubCategory","selectedUoM","setSelectedUoM","selectedLevel","setSelectedLevel","setselectedCategory","selectedSubCategory","setSelectedSubCategory","materialCode","setMaterialCode","materialName","setMaterialName","materialData","setMaterialData","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","TextField","uom","FormControl","sx","m","minWidth","InputLabel","Select","labelId","uomName","itemLevelDetail","itemLevelName","itemLevelId","subCategoryDetail","inputProps","readOnly","materialId","IconButton","mtr","mMaterial","MDeliveryType","deliverytypes","DeliveryTypeId","DeliveryTypeName","IsInboundReq","IsLTRRequired","orderType","OrderTypeId","OrderTypeName","CMINFO","IsActive","chktype","chkname","strMessage","chkType","chkValue","lmby","det","deliveryTypeId","deliveryTypeName","orderTypeName","setActivationClick","cminfo","MMaterialJS","changeOrderTypeName","changeOrderTypeCode","OrderTypeCode","changeOrderTypeQString","OrderTypeQString","changeActivation","ordertypes","response","ort","orderTypeId","orderTypeCode","orderTypeQString","hidden","dopSlice","mDOPPanel","ddlOrderType","setDdlOrderType","ddlSubconName","setddlSubconName","selectedOrderType","setSelectedOrderType","selectedSubcon","setSelectedSubcon","dopName","setDopName","dopCode","setDopCode","dopType","setDopType","dopDesc","setDopDesc","dopDest","setDopDest","dopAddress","setDopAddress","isMainCWH","setIsMainCWH","isCWH","setIsCWH","isSite","setIsSite","Control","subconId","subconName","getDataDop","mDOPList","dopData","setDopData","getDOP","getOrderType","dopDestName","lspInfo","dopId","datainused","deleteClick","DOPId","DOPName","mDOP","scopeData","setScopeData","scp","scopeId","getDataScope","Dop2","dataTable","dopReducer","dataDop","columns","dataField","sort","editor","Type","CHECKBOX","formatter","rowIndex","keyField","pagination","paginationFactory","striped","hover","condensed","cellEdit","cellEditorFactory","mode","blurToSave","beforeSaveCell","TableScope","scopeReducer","dataScope","dataIndex","sorter","record1","record2","filterDropdown","setSelectedKeys","selectedKeys","autoFocus","placeHolder","onPressEnter","onBlur","filterIcon","SearchOutlined","onFilter","record","toLowerCase","includes","key","render","Object","keys","k","Scope2","CPONo","setCPONo","CPONoOriginal","setCPONoOriginal","CPODate","setCPODate","ProjectName","setProjectName","ContractName","setContractName","POList","scope","po","cpoNo","cpoNoOriginal","cpoDate","cpoDateStr","projectName","contractName","cpoId","POCreation","ddlPOData","setDdlPOData","ddlScopeData","setDdlScopeData","selectedPO","setSelectedPO","selectedScope","setSelectedScope","handleDDLPOChange","handleDDLScopeChange","CreateDataPOScope","errorLog","WPID","Phase","PackageName","Region","DataStatus","poScopeData","poScopeId","totalSites","lmdt","fileListData","poSitelistId","filePath","fullFilePath","uploadStatus","uploadDate","rowCount","exportFromJSON","types","xls","styled","ModalUpload","fileUpload","setFileUpload","uploading","setUploading","onRemove","beforeUpload","UploadOutlined","marginTop","fileName","Search","index","marginBottom","toString","SearchColumn","POScopeListAnt","selectedCPONo","setSelectedCPONo","selectedProjectName","setSelectedProjectName","selectedFileName","setSelectedFileName","Typography","setPoScopeData","selectedPOScopeId","setSelectedPOScopeId","isUploadFile","setIsUploadFile","isUploadFileRevise","setIsUploadFileRevise","setErrorLogs","poScopeIdUpload","setPOScopeIdUpload","poSitelistIdUpload","setPOSitelistId","getPOScopeListANT","rs","poDetail","scopeDetail","DeleteFileUpload","IconUploadStatus","handleUploadFileRevise","IconFileOption","workpackageID","phase","packageName","region","dataStatus","exportType","columnsFile","moment","format","fileDatas","setFileDatas","Backdrop","zIndex","drawer","open","md","sm","level","PlusOutlined","pageSizeOptions","showSizeChanger","scroll","x","expandable","expandedRowRender","rowExpandable","onExpand","expanded","filedata","poScopeDetail","visible","onCancel","destroyOnClose","POScopePanel","ModalUploadRevise","ui","Box","justifyContent","getDataSite","TableSiteCondition","isModalVisible","setIsModalVisible","siteName","setSiteName","isModalEditVisible","setIsModalEditVisible","setId","page","activeStat","siteConditionReducer","activestatus","idDataSite","getId","handleCancel","getIdAndActive","active","getIdActive","condition","val","defaultChecked","siteConditionId","EditOutlined","dataSiteCondition","rowClassName","siteCondition","getDataScopeOrder","editDataScopeSuccess","TableScopeOrder","selectScope","selectedOrder","setSelectedOrder","orderName","setOrderName","orderCode","setOrderCode","orderQstring","setOrderQstring","setIsActive","scopeOrderReducer","dataScopeOrderType","idDataScope","scopeOrderId","dataScopeOrderTypeId","dataOrder","dataOrderType","scopeOrderTypeId","handleDDLOrderChange","getActiveStatus","getIdData","rowKey","ScopeId","ScopeOrderType","LanguagesDropdown","curHr","Date","getHours","dataUser","time","marginRight","fontWeight","UserDropdown","DateTime","fromISO","createdAt","toFormat","toggleMenuSidebar","now","rel","version","MenuSidebar","menu","setMenu","roleId","opacity","overflowY","CardHeader","pagetext","getDataWorkFlow","TableWorkFlow","workflowName","setWorkFlowName","workflowDesc","setWorkFlowDesc","workflowStatus","setWorkFlowStatus","setActive","dataWorkFlow","workFlowReducer","workflowId","IsLastApproverCheckpoint","WorkflowId","Workflow","TableSite","wpIds","setWpids","ordetTypeIdhook","setordetTypeIdhook","dataSiteList","siteListDeliveryRequestReducer","dataOrderTypeList","wpId","orderList","ordetTypeIds","selectedOt","menuDropdown","orderTypeDetail","wp","direction","wrap","overlay","trigger","placement","MoreOutlined","orderTypeList","SiteListDeliveryRequestType","CreateDataDismantleForm","siteInfo","siteNo","projectContract","orderDetail","orderDetailId","inventoryCode","ordertype","requestTypeName","boqCheck","stockCheck","standardWFID","boqDeltaWFID","formPath","ctName","deliveryType","packetType","recipientOrDismantledBy","requesterName","requestDate","expectedDeliveryDate","siteInfoMO","zone","workpackageId","boqRef","materialDesc","refQTY","DismantleForm","customURL","params","URLSearchParams","split","setSiteInfo","ddlInventoryCode","setDDLInventoryCode","ddlRequestBase","setDDLRequestBase","ddlSiteLocation","setDDLSiteLocation","ddlCTName","setDDLCTName","ddlOrigin","setDDLOrigin","ddlDestination","setDDLDestination","ddlPacketType","setDDLPacketType","ddlSubcon","setDDLSubcon","ddlSiteCondition","setDDLSiteCondition","date","getDate","getMonth","getFullYear","selectedInvCode","setSelectedInvCode","selectedSiteLocation","setSelectedSiteLocation","selectedRequestBase","setSelectedRequestBase","selectedCTName","setSelectedCTName","selectedOrigin","setSelectedOrigin","selectedDestination","setSelectedDestination","selectedPacketType","setSelectedPacketType","selectedSiteCondition","setSelectedSiteCondition","deliveryDate","setDeliveryDate","siteAddress","setSiteAddress","handleInvDDLChange","CreateDataDismantle","span","hoverable","labelCol","wrapperCol","layout","inv","Option","invCodeId","invCode","rbs","requestTypeId","slc","neTypeId","neType","ctId","org","dst","rules","required","packetTypeId","TextArea","disabledDate","add","Divider","orientation","htmlType","uid","returnVal","DismantleFormEdit","setLoading","setOrderDetail","setOrderTypeId","setWPID","getOrderDetail","odiparam","a","getInventoryDDL","getRequestBaseDDL","getSiteLocationDDL","MaterialOrder","odiParam","orderDetailData","setOrderDetailData","orderDetailMaterial","setOrderDetailMaterial","orderDetailMaterialExcluded","setOrderDetailMaterialExcluded","materialChoosed","setMaterialChoosed","setMaterialChoosedEdit","Tabs","TabPane","isModalAddMaterial","setIsModalAddMaterial","isModalEditMaterial","setIsModalEditMaterial","setSiteNo","setStockCheck","selectedMaterialId","setSelectedMaterialId","selectedMaterialCode","setSelectedMaterialCode","selectedMaterialDesc","setSelectedMaterialDesc","selectedUOM","setSelectedUOM","selectedQTYReq","setSelectedQTYReq","selectedQTYRef","setSelectedQTYRef","selectedBalance","setSelectedBalance","selectedOrderStatus","setSelectedOrderStatus","handleChangeNeType","columnsMaterialOrder","reqQTY","orderMaterialId","availableQTY","orderStatus","isBoqRef","DeleteOutlined","site","handleDeleteMaterial","columnsOrderDetail","handleAddMaterial","columnsMaterialListExcluded","columnsMaterialListExcludedStockCheck","gutter","DataGenerator","FileExcelOutlined","onOk","initialValues","balance","onFinish","values","onFinishFailed","errorInfo","offset","getLogisticPending","LogisticForm","wh","setWh","deliveryRequest","setDeliveryRequest","deliveryTransport","setDeliveryTransport","delivMode","setDeliveMode","modeTransport","setModeTransport","remarks","setRemarks","note","setNote","isModalCancelVisible","setIsModalCancelVisible","getMaterialOrderDetail","getLsp","getDeliveryList","getDeliveryMode","lsp","logistikFormReducer","dataLsp","deliveryList","detaDeliveryList","deliveryMode","idDelivery","detaDeliveryMode","materialOrder","dataOrderDetail","dataSite","dataSiteInfo","DataDeliveryTransport","detaDeliveryTransport","dataOdi","dataStats","stats","saveDraft","statsDraft","cancelModal","cancelModal2","CardTitle","defaultActiveKey","centered","handleDeliveryChange","cdmrId","cdmrName","transportModeId","transportMode","deliveryModeId","Logistic","dataPending","dataLogisticPending","dataIdTaskPending","idTaskPending","handleEdit","getIdTaskPending","getOdi","getSno","TableAproval","setOdi","setSno","dataAproval","aprovalTaskPendingReducer","dataAprovalPending","sno","AprovalTaskPendingForm","isModalRejectVisible","setIsModalRejectVisible","getLog","dataOrderRequestDetail","dataMaterialOrder","dataMaterial","dataLogOrder","dataLog","dataSno","dataUserId","dataStats2","statsReject","handleReject","columnsMaterial","columnsLog","borderRadius","orderRequestDraft","setOrderRequestDraft","handleEditRequest","columnsOrderRequestDraft","fixed","OrderRejectionPendingList","dataRejection","dataOrderRejection","TableTaskSummary","isModalOnProgressVisible","setIsModalonProgressVisible","isModalRescheduleVisible","setIsModalRescheduleVisible","selectedOdi","setSelectedOdi","selectedLsp","setSelectedLsp","selectedPd","setSelectedPd","sconTaskPending","setSconTaskPending","subcon","setSubcon","taskOnProgress","setTaskOnProgress","selecteSconId","setSelectedSconId","selectedEngineer","setSelectedEngineer","selectedReAssignedEngineer","setSelectedReAssignedEngineer","setSelectedWpId","rescheduleDate","setRescheduleDate","selectedTaskSchedule","setSelectedTaskSchedule","selectedTransDelegateId","setSelectedtransDelegateId","hideModal","hideModalonProgress","hideModalReschedule","showModalCancel","transDelegateId","orderdetailId","hideModalCancel","stateDataPending","taskAssignmentSummaryReducer","stateDataOnProgress","dataOnProgress","scheduleStatus","columnsAssigmentPending","pickupOrDeliveryDate","incomingDate","UserAddOutlined","lspName","requestReschedule","dayToGo","CalendarTwoTone","taskScheduleId","CloseSquareTwoTone","twoToneColor","columnsAssigmentOnProgress","fontSize","assignedTo","columnsAssigmentOnDone","undefined","userId","fullname","reason","SconTaskSummary","ModalAssigntask","subconEngineer","setSubconEngineer","setIsAssigntask","isAssignTask","orderdetailid","isassigntask","pickupDate","assignTo","eng","ModalRequestReschedule","TaskPendingTable","isAssignTaskModal","setIsAssignTask","isReschedule","setIsReschedule","isCancelTask","setIsCancelTask","selectedSconId","selectedWPID","setSelectedWPID","setLspName","selectedOrderDetailId","setSelectedOrderDetailId","selectedTaskScheduleId","setSelectedTaskScheduleId","setSelectedTransDelegateId","setPickupDate","cancelLoading","setCancelLoading","justify","confirmLoading","SconTaskPending","TableInventoryReport","inventoryReport","setInventoryReport","InventoryReport","TableInboundUpload","inboundUploadFile","setInboundUploadFile","isReviseFile","setIsReviseFile","setErrorLog","inbFileId","setInbFileId","setFileName","getInboundUploadFileList","uploadedDate","ellipsis","rowlogCount","errMessage","fileNames","fileNameDownload","executeStatus","filenameparam","DeleteTwoTone","InboundUpload","outboundUploadFile","setOutboundUploadFile","getOutboundUploadFileList","OutboundUpload","SdrForm","express","setExpress","ddlTeam","setDdlTeam","setChecked","setSelectedTeamCoordinator","togleCheckbox","valuePropName","endOf","Main","isAppLoaded","setIsAppLoaded","handleToggleMenuSidebar","fetchProfile","classList","remove","getAppTemplate","useCallback","mMaterialCategory","mSubMaterialCategory","mDeliveryType","mOrderType","mDOP2","POScope","WorkFlow","OrderRequestDraft","onKeyDown","apiToken","userdata","loginAPI","registerByAuth","Gatekeeper","registerByGoogle","registerByFacebook","isAuthLoading","setAuthLoading","isGoogleAuthLoading","isFacebookAuthLoading","login","AuthService","jwt","useFormik","validationSchema","Yup","min","max","onSubmit","handleSubmit","faUser","getFieldProps","faLock","Register","setGoogleAuthLoading","setFacebookAuthLoading","register","passwordRetype","when","is","oneOf","faEnvelope","what","ForgotPassword","emailInput","warn","element","RecoverPassword","passwordInput","confirmPasswordInput","PrivacyPolicy","PublicRoute","rest","isAuthenticated","from","PrivateRoute","App","windowSize","innerHeight","handleResize","useWindowSize","dataPOScope","dataDeliveryMode","dataDeliveryTransport","dataDone","pud","dataSubcon","allReducer","combineReducers","reducer","action","poScopeReducer","sagaGetData","SagaAuthWorker","takeLatest","sagaGetDataDop","SagaDopWorker","select","sagaGetDataScope","SagaScopeWorker","sagaGetDataSite","sagaPostDataSite","sagaPutDataSite","sagaPutActivationSite","SagaSiteConditionWorker","postDataSiteSuccess","editDataSiteSuccess","editActivationSiteSuccess","sagaGetScopeOrder","sagaPostScopeOrderType","sagaPutScopetype","sagaGetOrder","sagaPutDataScopetype","SagaScopeOrderWorker","postDataScopeSuccess","sagaGetDataWorkFlow","sagaPostDataWorkFLow","sagaPutDataWorkFlow","SagaWorFlowWorker","postDataWorkFlowSuccess","editDataWorkFlowSuccess","sagaGetSiteList","sagaGetOrderRejectionPending","SagaSiteListDeliveryWorker","sagaGetSiteInfo","sagaGetMaterialOrder","sagaGetLsp","sagaGetDeliveryList","sagaGetDeliveryTransport","sagaGetDeliveryMode","sagaPostLogistikForm","sagaPostAsDraft","sagaGetLogistikPending","SagaLogistikFormWorker","deliveryId","sagaGetAprovalTaskPending","sagaGetOrderRequesDetail","sagaGetMaterial","sagaGetLog","sagaPostAproval","sagaPostReject","SagaAprovalTaskPendingWorker","sagaGetTaskPending","sagaGetTaskOnProgress","sagaGetTaskDone","sagaSubcon","SagaTaskAssignmentSummaryWorker","allSaga","all","persistConfig","storage","AsyncStorage","timeout","sagaMiddleWare","ReduxSaga","persistedReducer","persistReducer","store","createStore","applyMiddleware","logger","Persistor","persistStore","run","resources","en","translation","translationEN","tr","translationTR","es","fr","de","translationDE","i18n","use","initReactI18next","init","lng","interpolation","escapeValue","react","wait","Boolean","hostname","match","configure","autoClose","draggable","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","pauseOnHover","ReactDOM","persistor","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.681052d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"PageLoading_loading__1sgWb\",\"loadingShrink\":\"PageLoading_loadingShrink__1REGd\"};","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nimport jwt from 'jwt-decode';\r\n\r\nconst initialState = {\r\n    isLoggedIn: !!localStorage.getItem('token'),\r\n    token: localStorage.getItem('token'),\r\n    currentUser: {\r\n        email: 'mail@example.com',\r\n        picture: null\r\n    },\r\n    user: []\r\n};\r\n\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        loginUser: (state, {payload}) => {\r\n            console.log('reducer: ',payload);\r\n            localStorage.setItem('token', payload);\r\n            state.isLoggedIn = true;\r\n            state.token = payload;\r\n        },\r\n        logoutUser: (state) => {\r\n            localStorage.removeItem('token');\r\n            state.currentUser = {};\r\n            state.isLoggedIn = false;\r\n            state.token = null;\r\n        },\r\n        loadUser: (state, {payload}) => {\r\n            state.user = payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {loginUser, logoutUser, loadUser} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","export const calculateWindowSize = (windowWidth) => {\r\n    if (windowWidth >= 1200) {\r\n        return 'lg';\r\n    }\r\n    if (windowWidth >= 992) {\r\n        return 'md';\r\n    }\r\n    if (windowWidth >= 768) {\r\n        return 'sm';\r\n    }\r\n    return 'xs';\r\n};\r\n","import {createSlice} from '@reduxjs/toolkit';\r\nimport {calculateWindowSize} from '@app/utils/helpers';\r\n\r\nconst initialState = {\r\n    isSidebarMenuCollapsed: false,\r\n    screenSize: calculateWindowSize(window.innerWidth),\r\n    isLoading: false\r\n};\r\n\r\nexport const uiSlice = createSlice({\r\n    name: 'ui',\r\n    initialState,\r\n    reducers: {\r\n        toggleSidebarMenu: (state) => {\r\n            state.isSidebarMenuCollapsed = !state.isSidebarMenuCollapsed;\r\n        },\r\n        setWindowSize: (state, {payload}) => {\r\n            state.screenSize = payload;\r\n        },\r\n        setIsLoading: (state, {payload}) => {\r\n            state.isLoading = payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {toggleSidebarMenu, setWindowSize, setIsLoading} = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst SmallBox = ({\r\n    type = 'info',\r\n    icon = 'ion-bag',\r\n    count,\r\n    title,\r\n    navigateTo\r\n}) => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <div className={`small-box bg-${type}`}>\r\n            <div className=\"inner\">\r\n                <h3>{count}</h3>\r\n                <p>{title}</p>\r\n            </div>\r\n            <div className=\"icon\">\r\n                <i className={`ion ${icon || 'ion-bag'}`} />\r\n            </div>\r\n            <Link to={navigateTo} className=\"small-box-footer\">\r\n                <span className=\"mr-2\">{t('main.label.moreInfo')}</span>\r\n                <i className=\"fa fa-arrow-circle-right\" />\r\n            </Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SmallBox;\r\n","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    cardHeader: \"\"\r\n};\r\n\r\nexport const pagetextSlice = createSlice({\r\n    name: 'pagetext',\r\n    initialState,\r\n    reducers: {\r\n        setCardTitle: (state, {payload}) => {\r\n            state.cardHeader = payload;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {setCardTitle} = pagetextSlice.actions;\r\n\r\nexport default pagetextSlice.reducer;","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {setCardTitle} from '@store/reducers/pagetext';\r\n\r\n\r\nconst HeaderChanger = ({title}) => {\r\n    const dispatch = useDispatch(setCardTitle(title));\r\n    \r\n    dispatch(setCardTitle(title));\r\n    return (\r\n        null\r\n    );\r\n};\r\n\r\nexport default HeaderChanger;","import React,{useEffect} from 'react';\r\nimport SmallBox from '../components/small-box/SmallBox';\r\nimport Chart from 'chart.js/auto';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport {Bar,Line,Pie} from \"react-chartjs-2\"\r\nimport { Table, Row, Col,Card, Typography, Input, Space,\r\n    Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Switch,\r\n    message,\r\n    List } from 'antd';\r\nimport { FormOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst Dashboard = () => {\r\n\r\n    useEffect(() => {\r\n        \r\n    },[])\r\n\r\n    const dataAgenda = [\r\n        'PMR Pending',\r\n        'LTR Pending',\r\n        'SDR Pending',\r\n        'Order Rejection',\r\n        'Task Pending',\r\n    ];\r\n\r\n    const colorHex = ['#d93a23','#1960db','#41c358',\"#eba111\"]\r\n    const data = {\r\n        labels:[\"LTR\",\"SDR\",\"PMR\",\"ORDER REJECTION\"],\r\n      \r\n        datasets:[{\r\n            data:[20,48,10,22],\r\n            backgroundColor: colorHex,\r\n            display:true,\r\n            datalabels: {\r\n                color: '#FFCE56'\r\n            }\r\n        }]\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <HeaderChanger title=\"Dashboard\"/>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 col-6\">\r\n                        <SmallBox\r\n                            count={0}\r\n                            title=\"SDR Done\"\r\n                            type=\"info\"\r\n                            icon=\"fas fa-list\"\r\n                            navigateTo=\"/\" />\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-6\">\r\n                        <SmallBox\r\n                            count={0}\r\n                            title=\"LTR Done\"\r\n                            type=\"success\"\r\n                            icon=\"fas fa-list\"\r\n                            navigateTo=\"/\" />\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-6\">\r\n                        <SmallBox\r\n                            count={0}\r\n                            title=\"PMR Done\"\r\n                            type=\"warning\"\r\n                            icon=\"fas fa-list\"\r\n                            navigateTo=\"/\" />\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-6\">\r\n                        <SmallBox\r\n                            count={0}\r\n                            title=\"Order Rejection\"\r\n                            type=\"danger\"\r\n                            icon=\"fas fa-list\"\r\n                            navigateTo=\"/\" />\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"container-fluid\">\r\n                <div className='row'>\r\n                    <div className='col-lg-6 col-md-6'>\r\n                        <div className='card card-primary'>\r\n                            <div className='card-header align-middle'>\r\n                                <h3 className=\"card-title\">Chart</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <Pie\r\n                                    data = {data}\r\n                                    options={{\r\n                                        responsive:true,\r\n                                        plugins: {\r\n                                            legend: {\r\n                                                position: 'bottom',\r\n                                            },\r\n                                            title: {\r\n                                                display: true,\r\n                                                text: 'Order Type'\r\n                                            },\r\n                                            datalabels: {\r\n                                               \r\n                                                display:true,\r\n                                                align: 'bottom',\r\n                                               \r\n                                                \r\n\r\n                                            },\r\n                                            animation: {\r\n                                                animateScale: true,\r\n                                                animateRotate: true\r\n                                            },\r\n                                           \r\n                                            \r\n                                        }}}\r\n                                    \r\n                                >\r\n\r\n                                </Pie>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-lg-6 col-md-6'>\r\n                        <div className='card card-primary'>\r\n                            <div className='card-header align-middle'>\r\n                                <h3 className=\"card-title\">My Agenda</h3>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <List\r\n                                    \r\n                                    footer={<div></div>}\r\n                                    bordered\r\n                                    dataSource={dataAgenda}\r\n                                    renderItem={item => (\r\n                                        <List.Item>\r\n                                            <Button ghost type=\"text\"><FormOutlined /> {item} </Button>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        \r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst icons = {\r\n    facebook: 'fab fa-facebook',\r\n    google: 'fab fa-google',\r\n    googlePlus: 'fab fa-google-plus'\r\n};\r\n\r\nconst AppButton = ({\r\n    children,\r\n    isLoading,\r\n    icon,\r\n    theme = 'primary',\r\n    disabled,\r\n    ...otherProps\r\n}) => {\r\n    let spinnerTemplate;\r\n    let iconTemplate;\r\n\r\n    if (isLoading) {\r\n        spinnerTemplate = (\r\n            <Spinner\r\n                className=\"ml-2\"\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        );\r\n    }\r\n\r\n    if (icon && icons[icon]) {\r\n        iconTemplate = <i className={`${icons[icon]} mr-2`} />;\r\n    }\r\n\r\n    return (\r\n        // eslint-disable-next-line react/button-has-type\r\n        <Button\r\n            {...otherProps}\r\n            variant={theme}\r\n            disabled={isLoading || disabled}\r\n        >\r\n            {iconTemplate}\r\n            {children}\r\n            {spinnerTemplate}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default AppButton;\r\n","import React from 'react';\r\n\r\nconst ContentHeader = ({title}) => {\r\n    return (\r\n        <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-sm-6\">\r\n                        <h1>{title}</h1>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <ol className=\"breadcrumb float-sm-right\">\r\n                            <li className=\"breadcrumb-item\">\r\n                                <a href=\"/\">Home</a>\r\n                            </li>\r\n                            <li className=\"breadcrumb-item active\">{title}</li>\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default ContentHeader;\r\n","import React from 'react';\r\nimport classes from './PageLoading.module.scss';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst PageLoading = () => {\r\n    return (\r\n        <div className={classes.loading}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageLoading;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\n\r\nconst DropdownMenu = ({size, children, containerTag}) => {\r\n    const dropdownMenuRef = useRef(null);\r\n    const [styles, setStyles] = useState({left: 'inherit', right: `0px`});\r\n    const [classes, setClasses] = useState(\r\n        `dropdown-menu dropdown-menu-right dropdown-menu-${size} show`\r\n    );\r\n\r\n    useEffect(() => {\r\n        setClasses(\r\n            `dropdown-menu dropdown-menu-right dropdown-menu-${size} show`\r\n        );\r\n        const dropdownMenuElement = dropdownMenuRef.current;\r\n        if (dropdownMenuElement) {\r\n            const windowWidth = document.getElementById('root').offsetWidth;\r\n            const offsetLeft = dropdownMenuElement.getBoundingClientRect().left;\r\n            const {offsetWidth} = dropdownMenuElement;\r\n            const visiblePart = windowWidth - offsetLeft;\r\n\r\n            if (offsetLeft < 0) {\r\n                setStyles({\r\n                    left: 'inherit',\r\n                    right: `${offsetLeft - 5}px`\r\n                });\r\n            } else if (visiblePart < offsetWidth) {\r\n                setStyles({left: 'inherit', right: `0px`});\r\n            }\r\n        }\r\n    }, [dropdownMenuRef.current, size]);\r\n\r\n    if (containerTag === 'ul') {\r\n        return (\r\n            <ul\r\n                ref={dropdownMenuRef}\r\n                className={classes}\r\n                style={{...styles, padding: 0}}\r\n            >\r\n                {children}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={dropdownMenuRef}\r\n            className={classes}\r\n            style={{...styles, padding: 0}}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","import React, {useRef, useState, useEffect} from 'react';\r\nimport DropdownMenu from './dropdown-menu/DropdownMenu';\r\n\r\nconst Dropdown = ({\r\n    isOpen = false,\r\n    size = 'md',\r\n    buttonTemplate,\r\n    menuTemplate,\r\n    className,\r\n    menuContainerTag = 'div',\r\n    onChange\r\n}) => {\r\n    const dropdownRef = useRef(null);\r\n    const [dropdownOpen, setDropdownOpen] = useState(isOpen);\r\n\r\n    const toggleDropdown = () => {\r\n        setDropdownOpen(!dropdownOpen);\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            dropdownRef &&\r\n            dropdownRef.current &&\r\n            !dropdownRef.current.contains(event.target)\r\n        ) {\r\n            setDropdownOpen(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (onChange) {\r\n            onChange(dropdownOpen);\r\n        }\r\n    }, [dropdownOpen]);\r\n\r\n    useEffect(() => {\r\n        setDropdownOpen(isOpen);\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside, false);\r\n        return () => {\r\n            document.removeEventListener(\r\n                'mousedown',\r\n                handleClickOutside,\r\n                false\r\n            );\r\n        };\r\n    });\r\n\r\n    return (\r\n        <li\r\n            ref={dropdownRef}\r\n            className={`nav-item dropdown${className ? ` ${className}` : ''}`}\r\n        >\r\n            <button onClick={toggleDropdown} type=\"button\" className=\"nav-link\">\r\n                {buttonTemplate}\r\n            </button>\r\n            {dropdownOpen ? (\r\n                <DropdownMenu size={size} containerTag={menuContainerTag}>\r\n                    {menuTemplate}\r\n                </DropdownMenu>\r\n            ) : null}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Dropdown;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/interactive-supports-focus */\r\nimport React, {useEffect, useState} from 'react';\r\nimport {NavLink, useHistory} from 'react-router-dom';\r\nimport {useTranslation} from 'react-i18next';\r\n\r\nconst MenuItem = ({menuItem}) => {\r\n    const [t] = useTranslation();\r\n    const [isMenuExtended, setIsMenuExtended] = useState(false);\r\n    const [isExpandable, setIsExpandable] = useState(false);\r\n    const [isMainActive, setIsMainActive] = useState(false);\r\n    const [isOneOfChildrenActive, setIsOneOfChildrenActive] = useState(false);\r\n    const history = useHistory();\r\n\r\n    // eslint-disable-next-line no-unused-vars\r\n    const toggleMenu = () => {\r\n        setIsMenuExtended(!isMenuExtended);\r\n    };\r\n\r\n    const handleMainMenuAction = () => {\r\n        if (isExpandable) {\r\n            toggleMenu();\r\n            return;\r\n        }\r\n        history.push(menuItem.path);\r\n    };\r\n\r\n    const calculateIsActive = (url) => {\r\n        setIsMainActive(false);\r\n        setIsOneOfChildrenActive(false);\r\n        if (isExpandable) {\r\n            menuItem.children.forEach((item) => {\r\n                if (item.path === url) {\r\n                    setIsOneOfChildrenActive(true);\r\n                    setIsMenuExtended(true);\r\n                }\r\n            });\r\n        } else if (menuItem.path === url) {\r\n            setIsMainActive(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isMainActive && !isOneOfChildrenActive) {\r\n            setIsMenuExtended(false);\r\n        }\r\n    }, [isMainActive, isOneOfChildrenActive]);\r\n\r\n    useEffect(() => {\r\n        setIsExpandable(\r\n            menuItem && menuItem.children && menuItem.children.length > 0\r\n        );\r\n    }, [menuItem]);\r\n\r\n    useEffect(() => {\r\n        calculateIsActive(history.location.pathname);\r\n        return history.listen((location) => {\r\n            calculateIsActive(location.pathname);\r\n        });\r\n    }, [history, isExpandable, menuItem]);\r\n\r\n    return (\r\n        <li className={`nav-item${isMenuExtended ? ' menu-open' : ''}`}>\r\n            <a\r\n                className={`nav-link${\r\n                    isMainActive || isOneOfChildrenActive ? ' active' : ''\r\n                }`}\r\n                role=\"link\"\r\n                onClick={handleMainMenuAction}\r\n                style={{cursor: 'pointer'}}\r\n            >\r\n                <i className={`nav-icon fas ${menuItem.icon}`}/>\r\n                <p>{t(menuItem.name)}</p>\r\n                {isExpandable ? (\r\n                    <i className=\"right fas fa-angle-left\" />\r\n                ) : null}\r\n            </a>\r\n\r\n            {isExpandable &&\r\n                menuItem.children.map((item) => (\r\n                    <ul key={item.name} className=\"nav nav-treeview\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                className=\"nav-link\"\r\n                                exact\r\n                                to={`${item.path}`}\r\n                            >\r\n                                <i className=\"far fa-circle nav-icon\" />\r\n                                <p>{t(item.name)}</p>\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                ))}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default MenuItem;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nconst Checkbox = ({checked = false, label = '', onChange}) => {\r\n    const [ID] = useState(uuidv4());\r\n    const [value, setValue] = useState(checked);\r\n\r\n    const handleOnChange = (event) => {\r\n        setValue(event.target.checked);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (value !== checked) {\r\n            setValue(checked);\r\n        }\r\n    }, [checked]);\r\n\r\n    useEffect(() => {\r\n        if (onChange && value !== checked) {\r\n            onChange(value);\r\n        }\r\n    }, [value]);\r\n\r\n    return (\r\n        <div className=\"icheck-primary\">\r\n            <input\r\n                type=\"checkbox\"\r\n                id={ID}\r\n                checked={value}\r\n                onChange={handleOnChange}\r\n            />\r\n            <label htmlFor={ID}>{label}</label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkbox;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\n\r\nconst Input = ({\r\n    className,\r\n    value,\r\n    icon,\r\n    type = 'text',\r\n    placeholder,\r\n    autoComplete,\r\n    onChange,\r\n    formik,\r\n    formikFieldProps,\r\n    ...props\r\n}) => {\r\n    const [localValue, setLocalValue] = useState(value || '');\r\n    const [formStatus, setFormStatus] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLocalValue(value || '');\r\n    }, [value]);\r\n\r\n    useEffect(() => {\r\n        if (onChange && localValue !== value) {\r\n            onChange(localValue);\r\n        }\r\n        if (formik && formikFieldProps) {\r\n            formik.setFieldValue(formikFieldProps.name, localValue);\r\n        }\r\n    }, [localValue]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            formik.touched[formikFieldProps.name] &&\r\n            formik.errors[formikFieldProps.name]\r\n        ) {\r\n            setFormStatus('is-invalid');\r\n            return;\r\n        }\r\n        if (\r\n            formik.touched[formikFieldProps.name] &&\r\n            !formik.errors[formikFieldProps.name]\r\n        ) {\r\n            setFormStatus('is-valid');\r\n            return;\r\n        }\r\n        setFormStatus(null);\r\n    }, [\r\n        formik.touched[formikFieldProps.name],\r\n        formik.errors[formikFieldProps.name]\r\n    ]);\r\n\r\n    const onChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        setLocalValue(event.target.value || '');\r\n    };\r\n\r\n    const printFormError = () => {\r\n        if (\r\n            formik.touched[formikFieldProps.name] &&\r\n            formik.errors[formikFieldProps.name]\r\n        ) {\r\n            return (\r\n                <div\r\n                    className=\"invalid-feedback\"\r\n                    style={{display: 'inline-block'}}\r\n                >\r\n                    {formik.errors[formikFieldProps.name]}\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className={`input-group${className ? ` ${className}` : ''}`}>\r\n                <input\r\n                    type={type}\r\n                    className={`form-control${\r\n                        formStatus ? ` ${formStatus}` : ''\r\n                    }`}\r\n                    placeholder={placeholder}\r\n                    value={localValue}\r\n                    autoComplete={autoComplete}\r\n                    {...props}\r\n                    onChange={onChangeHandler}\r\n                />\r\n\r\n                {icon ? (\r\n                    <div className=\"input-group-append\">\r\n                        <div className=\"input-group-text\">\r\n                            <FontAwesomeIcon icon={icon} />\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n            {formik && formikFieldProps ? printFormError() : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport {ContentHeader} from '@components';\r\n\r\nconst Blank = () => {\r\n    return (\r\n        <div>\r\n            <ContentHeader title=\"Blank Page\" />\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Title</h3>\r\n                            <div className=\"card-tools\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-tool\"\r\n                                    data-widget=\"collapse\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    title=\"Collapse\"\r\n                                >\r\n                                    <i className=\"fa fa-minus\" />\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-tool\"\r\n                                    data-widget=\"remove\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    title=\"Remove\"\r\n                                >\r\n                                    <i className=\"fa fa-times\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            Start creating your amazing application!\r\n                        </div>\r\n                        <div className=\"card-footer\">Footer</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Blank;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport {ContentHeader} from '@components';\r\n\r\nconst SubMenu = () => {\r\n    return (\r\n        <div>\r\n            <ContentHeader title=\"SubMenu Page\" />\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h3 className=\"card-title\">Title</h3>\r\n                            <div className=\"card-tools\">\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-tool\"\r\n                                    data-widget=\"collapse\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    title=\"Collapse\"\r\n                                >\r\n                                    <i className=\"fa fa-minus\" />\r\n                                </button>\r\n                                <button\r\n                                    type=\"button\"\r\n                                    className=\"btn btn-tool\"\r\n                                    data-widget=\"remove\"\r\n                                    data-toggle=\"tooltip\"\r\n                                    title=\"Remove\"\r\n                                >\r\n                                    <i className=\"fa fa-times\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            Start creating your amazing application!\r\n                        </div>\r\n                        <div className=\"card-footer\">Footer</div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubMenu;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Post = ({isClearfix}) => {\r\n    return (\r\n        <div className={`post ${isClearfix ? 'clearfix' : ''}`}>\r\n            <div className=\"user-block\">\r\n                <img\r\n                    className=\"img-circle img-bordered-sm\"\r\n                    src=\"/img/default-profile.png\"\r\n                    alt=\"User\"\r\n                />\r\n                <span className=\"username\">\r\n                    <Link to=\"/\">Jonathan Burke Jr.</Link>\r\n                    <Link to=\"/\" className=\"float-right btn-tool\">\r\n                        <i className=\"fas fa-times\" />\r\n                    </Link>\r\n                </span>\r\n                <span className=\"description\">\r\n                    Shared publicly - 7:30 PM today\r\n                </span>\r\n            </div>\r\n            {/* /.user-block */}\r\n            <p>\r\n                Lorem ipsum represents a long-held tradition for designers,\r\n                typographers and the like. Some people hate it and argue for its\r\n                demise, but others ignore the hate as they create awesome tools\r\n                to help create filler text for everyone from bacon lovers to\r\n                Charlie Sheen fans.\r\n            </p>\r\n            <p>\r\n                <Link to=\"/\" className=\"link-black text-sm mr-2\">\r\n                    <i className=\"fas fa-share mr-1\" />\r\n                    Share\r\n                </Link>\r\n                <Link to=\"/\" className=\"link-black text-sm\">\r\n                    <i className=\"far fa-thumbs-up mr-1\" />\r\n                    Like\r\n                </Link>\r\n                <span className=\"float-right\">\r\n                    <Link to=\"/\" className=\"link-black text-sm\">\r\n                        <i className=\"far fa-comments mr-1\" />\r\n                        Comments (5)\r\n                    </Link>\r\n                </span>\r\n            </p>\r\n            {/* <input className=\"form-control form-control-sm\" type=\"text\" placeholder=\"Type a comment\" /> */}\r\n            <form className=\"form-horizontal\">\r\n                <div className=\"input-group input-group-sm mb-0\">\r\n                    <input\r\n                        className=\"form-control form-control-sm\"\r\n                        placeholder=\"Response\"\r\n                    />\r\n                    <div className=\"input-group-append\">\r\n                        <button type=\"submit\" className=\"btn btn-danger\">\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport Post from './Post';\r\n\r\nconst ActivityTab = ({isActive}) => {\r\n    return (\r\n        <div className={`tab-pane ${isActive ? 'active' : ''}`}>\r\n            <Post />\r\n            <Post isClearfix={false} />\r\n            <Post />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivityTab;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst TimelineTab = ({isActive}) => {\r\n    return (\r\n        <div className={`tab-pane ${isActive ? 'active' : ''}`}>\r\n            {/* The timeline */}\r\n            <div className=\"timeline timeline-inverse\">\r\n                {/* timeline time label */}\r\n                <div className=\"time-label\">\r\n                    <span className=\"bg-danger\">10 Feb. 2014</span>\r\n                </div>\r\n                {/* /.timeline-label */}\r\n                {/* timeline item */}\r\n                <div>\r\n                    <i className=\"fas fa-envelope bg-primary\" />\r\n                    <div className=\"timeline-item\">\r\n                        <span className=\"time\">\r\n                            <i className=\"far fa-clock\" />\r\n                            <span> 12:05</span>\r\n                        </span>\r\n                        <h3 className=\"timeline-header\">\r\n                            <Link to=\"/\">Support Team</Link>\r\n                            <span> sent you an email</span>\r\n                        </h3>\r\n                        <div className=\"timeline-body\">\r\n                            Etsy doostang zoodles disqus groupon greplin oooj\r\n                            voxy zoodles, weebly ning heekya handango imeem\r\n                            plugg dopplr jibjab, movity jajah plickers sifteo\r\n                            edmodo ifttt zimbra. Babblely odeo kaboodle quora\r\n                            plaxo ideeli hulu weebly balihoo...\r\n                        </div>\r\n                        <div className=\"timeline-footer\">\r\n                            <Link to=\"/\" className=\"btn btn-primary btn-sm\">\r\n                                Read more\r\n                            </Link>\r\n                            <Link to=\"/\" className=\"btn btn-danger btn-sm\">\r\n                                Delete\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* END timeline item */}\r\n                {/* timeline item */}\r\n                <div>\r\n                    <i className=\"fas fa-user bg-info\" />\r\n                    <div className=\"timeline-item\">\r\n                        <span className=\"time\">\r\n                            <i className=\"far fa-clock\" />\r\n                            <span> 5 mins ago</span>\r\n                        </span>\r\n                        <h3 className=\"timeline-header border-0\">\r\n                            <Link to=\"/\">Sarah Young</Link>\r\n                            <span> accepted your friend request</span>\r\n                        </h3>\r\n                    </div>\r\n                </div>\r\n                {/* END timeline item */}\r\n                {/* timeline item */}\r\n                <div>\r\n                    <i className=\"fas fa-comments bg-warning\" />\r\n                    <div className=\"timeline-item\">\r\n                        <span className=\"time\">\r\n                            <i className=\"far fa-clock\" />\r\n                            <span> 27 mins ago</span>\r\n                        </span>\r\n                        <h3 className=\"timeline-header\">\r\n                            <Link to=\"/\">Jay White</Link>\r\n                            <span> commented on your post</span>\r\n                        </h3>\r\n                        <div className=\"timeline-body\">\r\n                            Take me to your leader! Switzerland is small and\r\n                            neutral! We are more like Germany, ambitious and\r\n                            misunderstood!\r\n                        </div>\r\n                        <div className=\"timeline-footer\">\r\n                            <Link\r\n                                to=\"/\"\r\n                                className=\"btn btn-warning btn-flat btn-sm\"\r\n                            >\r\n                                View comment\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* END timeline item */}\r\n                {/* timeline time label */}\r\n                <div className=\"time-label\">\r\n                    <span className=\"bg-success\">3 Jan. 2014</span>\r\n                </div>\r\n                {/* /.timeline-label */}\r\n                {/* timeline item */}\r\n                <div>\r\n                    <i className=\"fas fa-camera bg-purple\" />\r\n                    <div className=\"timeline-item\">\r\n                        <span className=\"time\">\r\n                            <i className=\"far fa-clock\" />\r\n                            <span> 2 days ago</span>\r\n                        </span>\r\n                        <h3 className=\"timeline-header\">\r\n                            <Link to=\"/\">Mina Lee</Link>\r\n                            <span> uploaded new photos</span>\r\n                        </h3>\r\n                        <div className=\"timeline-body\">\r\n                            <img src=\"http://placehold.it/150x100\" alt=\"...\" />\r\n                            <img src=\"http://placehold.it/150x100\" alt=\"...\" />\r\n                            <img src=\"http://placehold.it/150x100\" alt=\"...\" />\r\n                            <img src=\"http://placehold.it/150x100\" alt=\"...\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* END timeline item */}\r\n                <div>\r\n                    <i className=\"far fa-clock bg-gray\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TimelineTab;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport {Button} from '@components';\r\n\r\nconst SettingsTab = ({isActive}) => {\r\n    return (\r\n        <div className={`tab-pane ${isActive ? 'active' : ''}`}>\r\n            <form className=\"form-horizontal\">\r\n                <div className=\"form-group row\">\r\n                    <label\r\n                        htmlFor=\"inputName\"\r\n                        className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                        Name\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"inputName\"\r\n                            placeholder=\"Name\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label\r\n                        htmlFor=\"inputEmail\"\r\n                        className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                        Email\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            id=\"inputEmail\"\r\n                            placeholder=\"Email\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label\r\n                        htmlFor=\"inputName2\"\r\n                        className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                        Name\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputName2\"\r\n                            placeholder=\"Name\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label\r\n                        htmlFor=\"inputExperience\"\r\n                        className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                        Experience\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <textarea\r\n                            className=\"form-control\"\r\n                            id=\"inputExperience\"\r\n                            placeholder=\"Experience\"\r\n                            defaultValue=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label\r\n                        htmlFor=\"inputSkills\"\r\n                        className=\"col-sm-2 col-form-label\"\r\n                    >\r\n                        Skills\r\n                    </label>\r\n                    <div className=\"col-sm-10\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"inputSkills\"\r\n                            placeholder=\"Skills\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"offset-sm-2 col-sm-10\">\r\n                        <div className=\"icheck-primary\">\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"agreeTerms\"\r\n                                name=\"terms\"\r\n                                defaultValue=\"agree\"\r\n                            />\r\n                            <label htmlFor=\"agreeTerms\">\r\n                                <span>I agree to the </span>\r\n                                <Link to=\"/\">terms and condition</Link>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"offset-sm-2 col-sm-10\">\r\n                        <Button type=\"submit\" theme=\"danger\">\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SettingsTab;\r\n","import React, {useState} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {ContentHeader, Button} from '@components';\r\nimport ActivityTab from './ActivityTab';\r\nimport TimelineTab from './TimelineTab';\r\nimport SettingsTab from './SettingsTab';\r\n\r\nconst Profile = () => {\r\n    const [activeTab, setActiveTab] = useState('ACTIVITY');\r\n    const [t] = useTranslation();\r\n\r\n    const toggle = (tab) => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ContentHeader title=\"Profile\" />\r\n            <section className=\"content\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"card card-primary card-outline\">\r\n                                <div className=\"card-body box-profile\">\r\n                                    <div className=\"text-center\">\r\n                                        <img\r\n                                            className=\"profile-user-img img-fluid img-circle\"\r\n                                            src=\"/img/default-profile.png\"\r\n                                            alt=\"User profile\"\r\n                                        />\r\n                                    </div>\r\n                                    <h3 className=\"profile-username text-center\">\r\n                                        Nina Mcintire\r\n                                    </h3>\r\n                                    <p className=\"text-muted text-center\">\r\n                                        Software Engineer\r\n                                    </p>\r\n                                    <ul className=\"list-group list-group-unbordered mb-3\">\r\n                                        <li className=\"list-group-item\">\r\n                                            <b>{t('header.user.followers')}</b>\r\n\r\n                                            <span className=\"float-right\">\r\n                                                1,322\r\n                                            </span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <b>{t('views.user.following')}</b>\r\n                                            <span className=\"float-right\">\r\n                                                543\r\n                                            </span>\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            <b>{t('header.user.friends')}</b>\r\n                                            <span className=\"float-right\">\r\n                                                13,287\r\n                                            </span>\r\n                                        </li>\r\n                                    </ul>\r\n                                    <Button block>\r\n                                        {t('main.label.follow')}\r\n                                    </Button>\r\n                                </div>\r\n                                {/* /.card-body */}\r\n                            </div>\r\n                            <div className=\"card card-primary\">\r\n                                <div className=\"card-header\">\r\n                                    <h3 className=\"card-title\">\r\n                                        {t('main.label.aboutMe')}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <strong>\r\n                                        <i className=\"fas fa-book mr-1\" />\r\n                                        {t('main.label.education')}\r\n                                    </strong>\r\n                                    <p className=\"text-muted\">\r\n                                        B.S. in Computer Science from the\r\n                                        University of Tennessee at Knoxville\r\n                                    </p>\r\n                                    <hr />\r\n                                    <strong>\r\n                                        <i className=\"fas fa-map-marker-alt mr-1\" />\r\n                                        {t('main.label.location')}\r\n                                    </strong>\r\n                                    <p className=\"text-muted\">\r\n                                        Malibu, California\r\n                                    </p>\r\n                                    <hr />\r\n                                    <strong>\r\n                                        <i className=\"fas fa-pencil-alt mr-1\" />\r\n                                        {t('main.label.skills')}\r\n                                    </strong>\r\n                                    <p className=\"text-muted\">\r\n                                        <span className=\"tag tag-danger\">\r\n                                            UI Design\r\n                                        </span>\r\n                                        <span className=\"tag tag-success\">\r\n                                            Coding\r\n                                        </span>\r\n                                        <span className=\"tag tag-info\">\r\n                                            Javascript\r\n                                        </span>\r\n                                        <span className=\"tag tag-warning\">\r\n                                            PHP\r\n                                        </span>\r\n                                        <span className=\"tag tag-primary\">\r\n                                            Node.js\r\n                                        </span>\r\n                                    </p>\r\n                                    <hr />\r\n                                    <strong>\r\n                                        <i className=\"far fa-file-alt mr-1\" />\r\n                                        {t('main.label.notes')}\r\n                                    </strong>\r\n                                    <p className=\"text-muted\">\r\n                                        Lorem ipsum dolor sit amet, consectetur\r\n                                        adipiscing elit. Etiam fermentum enim\r\n                                        neque.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header p-2\">\r\n                                    <ul className=\"nav nav-pills\">\r\n                                        <li className=\"nav-item\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className={`nav-link ${\r\n                                                    activeTab === 'ACTIVITY'\r\n                                                        ? 'active'\r\n                                                        : ''\r\n                                                }`}\r\n                                                onClick={() =>\r\n                                                    toggle('ACTIVITY')\r\n                                                }\r\n                                            >\r\n                                                {t('main.label.activity')}\r\n                                            </button>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className={`nav-link ${\r\n                                                    activeTab === 'TIMELINE'\r\n                                                        ? 'active'\r\n                                                        : ''\r\n                                                }`}\r\n                                                onClick={() =>\r\n                                                    toggle('TIMELINE')\r\n                                                }\r\n                                            >\r\n                                                {t('main.label.timeline')}\r\n                                            </button>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <button\r\n                                                type=\"button\"\r\n                                                className={`nav-link ${\r\n                                                    activeTab === 'SETTINGS'\r\n                                                        ? 'active'\r\n                                                        : ''\r\n                                                }`}\r\n                                                onClick={() =>\r\n                                                    toggle('SETTINGS')\r\n                                                }\r\n                                            >\r\n                                                {t('main.label.settings')}\r\n                                            </button>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"tab-content\">\r\n                                        <ActivityTab\r\n                                            isActive={activeTab === 'ACTIVITY'}\r\n                                        />\r\n                                        <TimelineTab\r\n                                            isActive={activeTab === 'TIMELINE'}\r\n                                        />\r\n                                        <SettingsTab\r\n                                            isActive={activeTab === 'SETTINGS'}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","export const variables = {\r\n    API_URL: 'https://bornxldemo-api.nsnebast.com/',\r\n    PHOTO_URL: 'https://localhost:7118/photos/'\r\n};\r\n\r\nexport const API = 'https://bornxldemo-api.nsnebast.com/'","import axios from 'axios';\r\nimport {variables} from '../Variables';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nimport {setIsLoading} from '@store/reducers/ui';\r\n\r\nconst baseURL = variables.API_URL;\r\nconst token = localStorage.getItem('token'); \r\n\r\nconst config = {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n};\r\n\r\n\r\nconst headers = { \r\n    'Content-Type' : 'application/json',\r\n    'Authorization': `Bearer ${token}`\r\n};\r\n\r\nconst headersfile ={\r\n    'Content-Type': 'multipart/form-data',\r\n    'Authorization': `Bearer ${token}`\r\n\r\n}\r\n\r\n//auth api\r\nconst Login = (path) => (data) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.get(`${baseURL}${path}`, {\r\n            auth:{\r\n                username : data.username,\r\n                password : data.password\r\n            }\r\n        })\r\n            .then((result)=> {\r\n                //console.log('i am api :',result);\r\n                resolve(result);\r\n            },(err)=>{\r\n                //console.log('i am api error:',err,'data :', data);\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\n//common api with token\r\nconst GET = (path)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.get(`${baseURL}${path}`\r\n            ,config\r\n        )\r\n            .then((result)=> {\r\n                console.log('i am get :',result.data);\r\n                resolve(result.data);\r\n            },(err)=>{\r\n                console.log(config);\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst GETParam = (path,id)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.get(`${baseURL}${path}/${id}`\r\n            ,config\r\n        )\r\n            .then((result)=> {\r\n                console.log('i am get :',result.data);\r\n                resolve(result.data);\r\n            },(err)=>{\r\n                console.log(config);\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst GETParam2 = (path,param1,param2)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.get(`${baseURL}${path}/${param1}/${param2}`\r\n            ,config\r\n        )\r\n            .then((result)=> {\r\n                console.log('i am get :',result.data);\r\n                resolve(result.data);\r\n            },(err)=>{\r\n                console.log(config);\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst POST = (path,body)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${baseURL}${path}`\r\n            ,body\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am post :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log('config',headers);\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\nconst POSTParam = (path,body,param)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${baseURL}${path}/${param}`\r\n            ,body\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am post :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log('config',headers);\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst POSTFile = (path,id,file)  => {\r\n    var formdata = new FormData();\r\n    formdata.append(\"fileupload\",file);\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${baseURL}${path}/${id}`\r\n            ,formdata\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am post :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log('config',headers);\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\nconst POSTFiled = (path,file)  => {\r\n    var formdata = new FormData();\r\n    formdata.append(\"fileupload\",file);\r\n\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.post(`${baseURL}${path}`\r\n            ,formdata\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am post :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log('config',headers);\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst PUTFile = (path,id)  => {\r\n    var formdata = new FormData();\r\n    // formdata.append(\"fileupload\",file);\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.put(`${baseURL}${path}/${id}`\r\n            ,formdata\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am PUTFILE :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst PUT = (path,body)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.put(`${baseURL}${path}`\r\n            ,body\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am put :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log(config);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst PUTParam = (path,id)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.put(`${baseURL}${path}/${id}`\r\n            ,config\r\n        )\r\n            .then((result)=> {\r\n                console.log('i am get :',result.data);\r\n                resolve(result.data);\r\n            },(err)=>{\r\n                console.log(config);\r\n                reject(err);\r\n            })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst DELETE = (path,param)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.delete(`${baseURL}${path}/${param}`\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am put :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log(config);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\nconst DELETEParam = (path,body,param)  => {\r\n    const promise = new Promise((resolve, reject) => {\r\n        axios.delete(`${baseURL}${path}/${param}`\r\n            ,body\r\n            ,{headers}\r\n        ).then((result)=> {\r\n            console.log('i am post :',result.data);\r\n            resolve(result.data);\r\n        },(err)=>{\r\n            console.log('config',headers);\r\n            toast.error(err);\r\n            reject(err);\r\n        })\r\n    })\r\n    return promise;\r\n}\r\n\r\n\r\nconst getMenu = (id) => GETParam('menu',id);\r\n\r\nconst getMaterialCategory = () => GET('mastermaterialcategory');\r\nconst postMaterialCategory = (body) => POST('mastermaterialcategory',body);\r\nconst deleteMaterialCategory = (param) => DELETE('mastermaterialcategory',param);\r\nconst putmMaterialActiveStatus = (body) => PUT('mastermaterialcategory/setactivationstatus',body);\r\nconst getUOM = () => GET('mastermaterial/UomGetList');\r\nconst getItemLevel = () => GET('mastermaterial/ItemLevelGetList');\r\n\r\nconst getSubMaterialCategory = () => GET('mastermaterialsubcategory');\r\nconst postSubMaterialCategory = (body) => POST('mastermaterialsubcategory', body);\r\nconst putSubMaterialCategory = (body) => PUT('mastermaterialsubcategory', body);\r\nconst putSubCategoryStatus = (body) => PUT('mastermaterialsubcategory/setactivationstatus', body);\r\n\r\nconst getmDOPList = () => GET('masterdop');\r\nconst postDOPData= (body) => POST('masterdop',body);\r\nconst putActiveStatus= (body) => PUT('masterdop/SetActivationStatusU',body);\r\nconst putDOPData = (body)=> PUT('masterdop',body)\r\n\r\nconst getmDeliveryType = () => GET('masterdeliverytype');\r\n\r\nconst getmMaterialList = () => GET('mastermaterial');\r\nconst putMaterial = (body) => PUT('mastermaterial',body);\r\nconst putMaterialActivation = (body) => PUT('mastermaterial/setactivationstatus',body);\r\nconst getUomList = () => GET('mastermaterial/UomGetList');\r\n\r\nconst getmScope = () => GET('poscope');\r\nconst postmScope = (body) => POST('poscope', body);\r\nconst putmScope = (body) => PUT('poscope', body);\r\nconst putmScopeActivation = (body) => PUT('poscope/SetActivationStatus', body);\r\n\r\nconst getmOrderType = () => GET('masterordertype');\r\n\r\nconst getmSubcon = () => GET('subcon/getlsp');\r\n\r\nconst getPOList = () => GET('customerpo');\r\nconst postPOData = (body) => POST('customerpo', body);\r\nconst putPOActivation = () => PUT('customerpo/SetActivationStatusU');\r\n\r\nconst getPOScopeList = () => GET('poscope/getposcopelist');\r\nconst getPOScopeListFile = (id) => GETParam('positelist/GetUploadedSitelistFile',id);\r\nconst getErrorList = (id) => GETParam('positelist/GetUploadedSitelistErr',id);\r\nconst deleteFileUpload = (id) => PUTFile('positelist/UploadedSitelistDeletedTemp',id);\r\nconst postPOScope = (body) => POST('poscope/poscopeadd',body);\r\nconst postPOFile = (id,file) => POSTFile('positelist/uploadSiteList',id,file);\r\nconst postRevisePOFile = (id,file) => POSTFile('positelist/UploadReviseSiteList',id,file);\r\n\r\n\r\nconst getSiteInfo = (wpid) => GETParam('sitelist/siteDetail',wpid);\r\nconst getInventoryActiveList = () => GET('minventory/inventoryCodeGetActiveList');\r\nconst getSiteLocation = () => GET('netype/netypegetlist');\r\nconst getRequestBase = (ordertypeid) => GETParam('deliveryreqtype/RequestTypeGetListBasedOnOrderType',ordertypeid);\r\nconst getCTName = (invcodeid) => GETParam('materialmanagement/GetMasterCTBasedInvCodeId',invcodeid);\r\nconst getOrigin = (wpid,ordertypeid) => GETParam2('dopordertype/doporigingetlist',wpid,ordertypeid);\r\nconst getDestination = (wpid,ordertypeid) => GETParam2('dopordertype/dopdestinationgetlist',wpid,ordertypeid);\r\nconst getPacketType = (ordertypeid) => GETParam('materialmanagement/GetPacketTypeBasedOnOrderType',ordertypeid);\r\nconst getDismantledBy = () => GET('subcon/GetFieldSubcontractor');\r\nconst getSiteCondition = () => GET('sitecondition');\r\nconst getSubcon = () => GET('subcon/GetFieldSubcontractor');\r\nconst postDismantleForm = (body) => POST('materialmanagement/OrderDetailAdd',body);\r\nconst getTeamCoordinator= (subconid,workpackageid) => GETParam2('subcon/getCoordinatorSubcontractorEngineer',subconid,workpackageid);\r\nconst getHasExpressDelivery= (ordertypeid) => GETParam('masterordertype/orderTypeHasExpressDelivery',ordertypeid);\r\n\r\nconst getOrderRequestDraft = () => GET('mmReport/OrderRequestGetListDraft');\r\n\r\nconst getOrderDetailForm = (odi) => GETParam('materialmanagement/OrderDetailRequestGetDetail',odi);\r\nconst getOrderDetailMaterial = (odi) => GETParam('materialmanagement/orderRequestMaterialGetDetail',odi);\r\nconst getBOQRefGetList = (odi) => GETParam('materialmanagement/boqRefGetList',odi);\r\nconst getMaterialListExcludeOrdered = (odi) => GETParam('materialmanagement/masterMaterialGetListExcludeOrdered',odi);\r\nconst postMaterialOrderDirectSubmit = (odi) => POSTParam('materialmanagement/materialOrderDirectSubmit',\"\",odi);\r\nconst postMaterialOrderBookSubmit = (odi) => POSTParam('materialmanagement/materialOrderBookSubmit',\"\",odi);\r\nconst postAddMaterial = (body) => POST(\"materialmanagement/orderRequestMaterialAddItem\",body);\r\nconst putEditQtyMaterial = (body) => PUT('materialmanagement/OrderRequestMaterialChangeQty',body);\r\nconst putMaterialOrderDraft = (body) => PUT('materialmanagement/materialOrderRequestSaveDraft',body);\r\nconst deleteMaterialOrderRequest = (param) => DELETE('materialmanagement/orderRequestMaterialDelItem',param);\r\n\r\nconst getOrderDetailEdit =  (odi) => GETParam('materialmanagement/OrderDetailRequestGetDetail',odi);\r\n\r\nconst getSconTaskPending = () => GET('taskassignment/taskAssignmentSubconPending');\r\nconst getSconEngineer = (sconid,wpid) => GETParam2('subcon/getFieldSubcontractorEngineer',sconid,wpid)\r\nconst postAssignEngineer = (body) => POST(\"taskassignment/taskAssignmentToEngineer\",body);\r\nconst postCancelTask = (body) => POST(\"taskassignment/taskAssignmentCanceled\",body);\r\nconst putRequestReschedule = (body) => PUT(\"scheduleassignment/taskScheduleProposeNewDate\",body);\r\n\r\nconst getInventoryReport = () => GET('inventory/getInventoryReport');\r\nconst getInboundUploadFile = () => GET('inventory/inboundFileUploadGetList');\r\nconst getInboundErrorList = (id) => GETParam('inventory/inboundFileUploadGetErrLogList',id);\r\nconst postReviseInboundFile = (id,file) => POSTFile('inventory/UploadReviseSiteList',id,file);\r\nconst postInboundFile = (file) => POSTFiled('inventory/inboundFileUpload',file);\r\nconst deleteInboundFile = (id) => PUTParam('inventory/inboundFileDelete',id);\r\n\r\nconst getOutboundUploadFile = () => GET('inventory/outboundFileUploadGetList');\r\nconst getOutboundErrorList = (id) => GETParam('inventory/outboundFileUploadGetErrLogList',id);\r\nconst postReviseOutboundFile = (id,file) => POSTFile('inventory/outboundFileRevisionUpload',id,file);\r\nconst postOutboundFile = (file) => POSTFiled('inventory/outboundFileUpload',file);\r\nconst deleteOutboundFile = (id) => PUTParam('inventory/outboundFileDelete',id);\r\n\r\nconst getSconTaskOnProgress = () => GET('taskassignment/taskAssignmentSubconOnProgress');\r\nconst postReAssignmentEngineer = (body) => POST(\"taskassignment/taskReAssignmentToEngineer\",body);\r\n\r\nconst API ={\r\n    getOutboundUploadFile, \r\n    getOutboundErrorList,\r\n    postReviseOutboundFile,\r\n    postOutboundFile,\r\n    deleteOutboundFile,\r\n    postInboundFile,\r\n    deleteInboundFile,\r\n    postReviseInboundFile,\r\n    getInboundErrorList,\r\n    getInboundUploadFile,\r\n    getInventoryReport,\r\n    postCancelTask,\r\n    putRequestReschedule,\r\n    postAssignEngineer,\r\n    getSconEngineer,\r\n    getSconTaskPending,\r\n    getPOScopeListFile,\r\n    getOrderDetailEdit,\r\n    putMaterialOrderDraft,\r\n    getOrderRequestDraft,\r\n    deleteMaterialOrderRequest,\r\n    putEditQtyMaterial,\r\n    postAddMaterial,\r\n    postMaterialOrderBookSubmit,\r\n    postMaterialOrderDirectSubmit,\r\n    getMaterialListExcludeOrdered,\r\n    getBOQRefGetList,\r\n    getOrderDetailMaterial,\r\n    getOrderDetailForm,\r\n    getSubcon\r\n    ,getSiteCondition\r\n    ,getPacketType\r\n    ,getSiteLocation\r\n    ,getRequestBase \r\n    ,getCTName \r\n    ,getOrigin \r\n    ,getDestination \r\n    ,getDismantledBy\r\n    ,getmDOPList\r\n    ,postDOPData\r\n    ,putDOPData\r\n    ,getmSubcon\r\n    ,getmMaterialList\r\n    ,getmOrderType\r\n    ,Login\r\n    ,putActiveStatus\r\n    ,getmDeliveryType\r\n    ,getUomList\r\n    ,putmScopeActivation\r\n    ,putmScope\r\n    ,postmScope\r\n    ,getmScope\r\n    ,getPOList\r\n    ,postPOData\r\n    ,putPOActivation\r\n    ,getMaterialCategory\r\n    ,postMaterialCategory\r\n    ,deleteMaterialCategory\r\n    ,getPOScopeList\r\n    ,putmMaterialActiveStatus\r\n    ,getSubMaterialCategory\r\n    ,postSubMaterialCategory\r\n    ,putSubMaterialCategory\r\n    ,putSubCategoryStatus\r\n    ,getUOM\r\n    ,getItemLevel\r\n    ,putMaterial\r\n    ,postPOScope\r\n    ,putMaterialActivation\r\n    ,postPOFile\r\n    ,getMenu\r\n    ,getErrorList\r\n    ,deleteFileUpload\r\n    ,postRevisePOFile\r\n    ,getSiteInfo\r\n    ,getInventoryActiveList\r\n    ,postDismantleForm\r\n    ,getSconTaskOnProgress\r\n    ,postReAssignmentEngineer\r\n    ,getTeamCoordinator,\r\n    getHasExpressDelivery\r\n}\r\n\r\nexport default API;","/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component, useContext, useRef} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-fixedheader/js/dataTables.fixedHeader\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport $ from 'jquery'; \r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\n    \r\nimport {toast} from 'react-toastify';\r\nimport API  from '../../utils/apiServices';\r\n// const cardTitle = \"Material Category\";\r\n// dispatch(setCardTitle(cardTitle));\r\n\r\nconst token = localStorage.getItem('token');\r\n\r\nexport default class MMaterialCategory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categories: [],\r\n            cols: [],\r\n            norows: 0,\r\n            CategoryId: 0,\r\n            CategoryName: '',\r\n            LMBY: 1\r\n        };\r\n    }\r\n       \r\n    componentDidMount() {\r\n        \r\n        this.refreshList();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblMaterialCategory').DataTable( {\r\n                \"columnDefs\": [ {\r\n                    \"searchable\": false,\r\n                    \"orderable\": false,\r\n                    \"targets\": 0\r\n                } ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: true,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n            }, 2000);\r\n    }\r\n\r\n    refreshList() {\r\n        API.getMaterialCategory().then(\r\n            result=>{\r\n                console.log('i am Scope',result)\r\n                this.setState({categories: result});\r\n            }\r\n        )\r\n    }\r\n\r\n    getDataList() {\r\n        axios.get(variables.API_URL + 'mastermaterialcategory')\r\n        .then(res => \r\n            {\r\n            this.setState({categories: res.data.rows});\r\n        }); \r\n    }\r\n\r\n    changeCategoryName = (e) => {\r\n        this.setState({ CategoryName: e.target.value });\r\n    }\r\n\r\n    addClick() {\r\n        this.setState({\r\n            modalTitle: \"Add New Category\",\r\n            CategoryId: 0,\r\n            CategoryName: \"\",\r\n            LMBY: 1\r\n\r\n        });\r\n        this.refreshList();\r\n    }\r\n\r\n    editClick(cat) {\r\n        console.log(cat);\r\n        this.setState({\r\n            modalTitle: \"Edit Category\",\r\n            CategoryId: cat.categoryId,\r\n            CategoryName: cat.categoryName,\r\n            LMBY: 0\r\n        });\r\n    }\r\n\r\n    handleIsActiveClick(categoryId, e ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"Id\": categoryId,\r\n                \"actstatus\": e.target.checked,\r\n                \"lmby\": 0       \r\n            }\r\n            console.log(body);\r\n            API.putmMaterialActiveStatus(body).then(\r\n                result=>{\r\n                    console.log(\"put scope: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        this.refreshList();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    createClick() {\r\n        fetch(variables.API_URL + 'mastermaterialcategory', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ CategoryName: this.state.CategoryName, LMBY: 1 })\r\n        })\r\n        .then(res => res.json())\r\n        .then((result) => {\r\n            alert(result.message);\r\n            window.location.reload();\r\n        }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n    updateClick() {\r\n        fetch(variables.API_URL + 'mastermaterialcategory', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ CategoryId: this.state.CategoryId, CategoryName: this.state.CategoryName, LMBY: 1 })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                this.refreshList();\r\n                window.location.reload();\r\n            }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n    deleteClick(id, name) {\r\n        if (window.confirm('Are you sure you want to delete ' + name + '?')) {\r\n\r\n            fetch(variables.API_URL + 'mastermaterialcategory/' + id, {\r\n                method: 'Delete',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    alert(result);\r\n                    this.refreshList();\r\n                }, (error) => { alert('failed'); })\r\n        }\r\n\r\n    }\r\n    \r\n    render() {\r\n        const { categories,\r\n            modalTitle,\r\n            CategoryId,\r\n            CategoryName,\r\n            LMBY\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n            <HeaderChanger title=\"Material Category\" />\r\n            <button type=\"button\" className=\"btn btn-primary m-2 pull-right\"\r\n                        data-bs-toggle=\"modal\"\r\n                        data-bs-target=\"#AddUpdateModal\"\r\n                        onClick={() => this.addClick()}>\r\n                        Add New Category\r\n                        </button>\r\n                        <table id=\"tblMaterialCategory\" className=\"display table table-striped table-bordered table-sm row-border hover mb-5\" >\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>CategoryName</th>\r\n                                <th>Grouping Count</th>\r\n                                <th>Is Active</th>\r\n                                <th>Options</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.categories.map(cat =>\r\n                                <tr key={cat.categoryId}>\r\n                                    <td></td>\r\n                                    <td>{cat.categoryName}</td>\r\n                                    <td>{cat.matGroupCount}</td>\r\n                                    <td>\r\n                                        <Form.Check\r\n                                        type=\"switch\"\r\n                                        id={cat.categoryId}\r\n                                        checked={cat.isActive}\r\n                                        onChange={(e) => this.handleIsActiveClick(cat.categoryId, e)} />\r\n                                    </td>\r\n                                    <td>\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-light mr-1\"\r\n                                            data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#AddUpdateModal\"\r\n                                            onClick={() => this.editClick(cat)}>\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>CategoryName</th>\r\n                                <th>Grouping Count</th>\r\n                                <th>Is Active</th>\r\n                                <th>Options</th>\r\n                            </tr>\r\n                        </tfoot>\r\n                        </table>\r\n                <div className=\"modal fade\" id=\"AddUpdateModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{modalTitle}</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\"> CategoryName</span>\r\n                                    <input type=\"text\" className=\"form-control\" value={CategoryName} onChange={this.changeCategoryName} />\r\n                                </div>\r\n                                {CategoryId == 0 ? <button type=\"button\" className=\"btn btn-primary float-start\" onClick={() => this.createClick()}>Create</button> : null}\r\n                                {CategoryId != 0 ? <button type=\"button\" className=\"btn btn-primary float-start\" onClick={() => this.updateClick()}>Update</button> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport {Button} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { toast } from 'react-toastify';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst mSubMaterialCategoryPanel = (props) => {\r\n\r\n    const [ddlCategory,setDdlCategory] = useState([]);\r\n    const [selectedCategory,setSelectedCategory] = useState(\"\");\r\n\r\n    const [subCategoryName,setSubCategoryName] = useState(\"\");\r\n    const [fieldConfirm, setFieldConfirm] = useState(false);\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n    const [snRequired, setSnRequired] = useState(false);\r\n    const [qtyRequired, setqtyRequired] = useState(false);\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    function getDDLCategory(){\r\n        API.getMaterialCategory().then(\r\n            result=>{\r\n                console.log('i am DDL cate',result);\r\n                const filtered = result.filter( (auto) => auto.isActive==true)\r\n                //const activeCategory = result.categoryName.includes(\"true\");\r\n                setDdlCategory(filtered);\r\n            }\r\n        )\r\n    }\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"subCategoryId\" : 0,\r\n                \"subCategoryName\" : subCategoryName,\r\n                \"CategoryDetail\":{\r\n                    \"categoryId\": selectedCategory\r\n                },        \r\n                \"fieldConfirm\":fieldConfirm,\r\n                \"snRequired\":snRequired,\r\n                \"qtyRequired\":qtyRequired,\r\n                \"lmby\": 0      \r\n            }\r\n        )\r\n        API.postSubMaterialCategory(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        getDDLCategory();\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Sub Category Name </span>\r\n                        <input onChange={(e) => setSubCategoryName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Category </span>\r\n                        <select className=\"form-select col-md-9\" onChange={(e) => setSelectedCategory(e.target.value)} >\r\n                            <option value=\"0\">Select Order Type</option>\r\n                            {ddlCategory.map(um => <option key={um.categoryId} value={um.categoryId}>\r\n                                {um.categoryName}\r\n                            </option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Field Confirm </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"fieldConfirm\"\r\n                                onChange={(e) => setFieldConfirm(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">SN Required </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"snRequired\"\r\n                                onChange={(e) => setSnRequired(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">QTY Required </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"qtyRequired\"\r\n                                onChange={(e) => setqtyRequired(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mSubMaterialCategoryPanel;","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isNew: false,\r\n    isEdit: false\r\n};\r\n\r\nexport const scopeSlice = createSlice({\r\n    name: 'scope',\r\n    initialState,\r\n    reducers: {\r\n        setIsNew: (state, {payload}) => {\r\n            state.isNew = payload;\r\n        },\r\n        setIsEdit:(state, {payload}) => {\r\n            state.isEdit = payload;\r\n        }\r\n        \r\n    }\r\n});\r\n\r\nexport const {setIsNew, setIsEdit} = scopeSlice.actions;\r\n\r\nexport default scopeSlice.reducer;","/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\n\r\nimport $ from 'jquery'; \r\nimport API  from '../../utils/apiServices';\r\nimport SubCategoryPanel from './mSubMaterialCategoryPanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport { BsPencilFill } from 'react-icons/bs';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst mScopeList = () => {\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [isNew,setIsNew] = useState(false);\r\n\r\n    const [ddlCategory,setDdlCategory] = useState([]);\r\n    const [selectedCategory,setSelectedCategory] = useState(\"\");\r\n\r\n    const [subCategoryName,setSubCategoryName] = useState(\"\");\r\n    const [fieldConfirm, setFieldConfirm] = useState(false);\r\n    const [categoryId, setCategoryId] = useState(\"\");\r\n    const [snRequired, setSnRequired] = useState(false);\r\n    const [qtyRequired, setqtyRequired] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [subCategoryData,setsubCategoryData] = useState([]);\r\n    \r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        setIsNew(false);\r\n        setIsEdit(false);\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        setIsNew(true);\r\n    };\r\n\r\n    const handleShowEdit = (sct) => {\r\n        //setShow(true);\r\n        sct.isEditRow = true;\r\n        setIsEdit(true);\r\n    };\r\n\r\n    const handleCancelEdit = (sct) => {\r\n        //setShow(true);\r\n        sct.isEditRow = null;\r\n        setIsEdit(false);\r\n    };\r\n\r\n    function getSubCategory(){\r\n        API.getSubMaterialCategory().then(\r\n            result=>{\r\n                console.log('i am sub category',result)\r\n                setsubCategoryData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function getDDLCategory(){\r\n        API.getMaterialCategory().then(\r\n            result=>{\r\n                const filtered = result.filter( (auto) => auto.isActive==true)\r\n                console.log('i am DDL cate',filtered);\r\n                //const activeCategory = result.categoryName.includes(\"true\");\r\n                setDdlCategory(filtered);\r\n            }\r\n        )\r\n    }\r\n\r\n    function refreshData(){\r\n        getSubCategory();\r\n        getDDLCategory();\r\n        //getOrderType();\r\n        //getSubcon();\r\n    }\r\n\r\n    function saveClick(subCategoryId){\r\n        const body ={\r\n            \"subCategoryId\" : subCategoryId,\r\n            \"subCategoryName\" : subCategoryName,\r\n            \"CategoryDetail\":{\r\n                \"categoryId\": selectedCategory\r\n            },  \r\n            \"fieldConfirm\":fieldConfirm,\r\n            \"snRequired\":snRequired,\r\n            \"qtyRequired\":qtyRequired,\r\n            \"lmby\": 0    \r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putSubMaterialCategory(body).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleIsActiveClick(subCategoryId, e ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"Id\":subCategoryId,\r\n                \"actstatus\":e.target.checked,\r\n                \"lmby\":0  \r\n            }\r\n            console.log(body);\r\n            API.putSubCategoryStatus(body).then(\r\n                result=>{\r\n                    console.log(\"put scope: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        refreshData();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSaveFromPanel = () =>{\r\n        setShow(false);\r\n        refreshData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblScope').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n    },[])\r\n    \r\n    return (\r\n        <><div className=\"card card-primary\">\r\n            <div className=\"card-header align-middle\">\r\n                <h3 className=\"card-title\">Sub Category List</h3>\r\n                <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                </a>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <table id=\"tblScope\" className=\"display table table-striped table-bordered table-sm row-border hover mb-5 responsive\" aria-labelledby=\"tabelLabel\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Name</th>\r\n                            <th>Field Confirm</th>\r\n                            <th>SN Required</th>\r\n                            <th>Qty Required</th>\r\n                            <th>Grouping Count</th>\r\n                            <th>Category Name</th>\r\n                            <th>Is Active</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {subCategoryData.map(sct => <tr key={sct.subCategoryId}>\r\n                            <td></td>\r\n                            <td>\r\n                                {sct.isEditRow == null ? sct.subCategoryName :\r\n                                    <input placeholder={sct.subCategoryName} onChange={(e) => setSubCategoryName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                            </td>\r\n                            <td>\r\n                                {sct.isEditRow == null ? <Form.Check\r\n                                    type=\"switch\"\r\n                                    id={\"fieldConfirm\" + sct.subCategoryId + \"binded\"}\r\n                                    checked={sct.fieldConfirm}/> :\r\n                                    <Form.Check\r\n                                        type=\"switch\"\r\n                                        id={\"fieldConfirm\" + sct.subCategoryId}\r\n                                        // checked={sct.fieldConfirm}\r\n                                        onChange={(e) => setFieldConfirm(e.target.checked)}/>}\r\n                            </td>\r\n                            <td>\r\n                                {sct.isEditRow == null ? <Form.Check\r\n                                    type=\"switch\"\r\n                                    id={\"snRequired\" + sct.subCategoryId + \"binded\"}\r\n                                    checked={sct.snRequired}/> :\r\n                                    <Form.Check\r\n                                        type=\"switch\"\r\n                                        id={\"snRequired\" + sct.subCategoryId}\r\n                                        onChange={(e) => setSnRequired(e.target.checked)}/>}\r\n                            </td>\r\n                            <td>\r\n                                {sct.isEditRow == null ? <Form.Check\r\n                                    type=\"switch\"\r\n                                    id={\"qtyRequired\" + sct.subCategoryId + \"binded\"}\r\n                                    checked={sct.qtyRequired}/> :\r\n                                    <Form.Check\r\n                                        type=\"switch\"\r\n                                        id={\"qtyRequired\" + sct.subCategoryId}\r\n                                        onChange={(e) => setqtyRequired(e.target.checked)}/>}\r\n                            </td>\r\n                            <td>\r\n                                {sct.matGroupCount}\r\n                            </td>\r\n                            <td>\r\n                                {sct.isEditRow == null ?  sct.categoryDetail.categoryName:\r\n                                    <select className=\"form-select col-md-9\" onChange={(e) => setSelectedCategory(e.target.value)} >\r\n                                        <option value=\"0\">Select Order Type</option>\r\n                                        {ddlCategory.map(um => <option key={um.categoryId} value={um.categoryId}>\r\n                                            {um.categoryName}\r\n                                        </option>)}\r\n                                    </select>}\r\n                            </td>\r\n                            <td>\r\n                                <Form.Check\r\n                                    type=\"switch\"\r\n                                    id={\"isActive\"+sct.subCategoryId}\r\n                                    checked={sct.isActive}\r\n                                    onChange={(e) => handleIsActiveClick(sct.subCategoryId, e)}/>\r\n                            </td>\r\n                            <td>\r\n                                {sct.isEditRow == false || sct.isEditRow == null ?\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        onClick={() => handleShowEdit(sct)}\r\n                                        title=\"edit\">\r\n                                        <BsPencilFill/>\r\n                                    </button>\r\n                                    :\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-success mr-1\"\r\n                                        onClick={() => saveClick(sct.subCategoryId)}>\r\n                                        <FontAwesomeIcon icon={faSave} />\r\n                                    </button>\r\n                                }\r\n                                {sct.isEditRow == true ?\r\n                                    <a href='javascript:void(0)' onClick={() => handleCancelEdit(sct)} class=\"btn btn-danger float-right\">\r\n                                        <i class=\"fas fa-light fa-times\"></i>\r\n                                    </a> : null}\r\n                            </td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>Name</th>\r\n                            <th>Field Confirm</th>\r\n                            <th>SN Required</th>\r\n                            <th>Qty Required</th>\r\n                            <th>Grouping Count</th>\r\n                            <th>Category Name</th>\r\n                            <th>Is Active</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div><Modal\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add New Sub Category</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <SubCategoryPanel/>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopeList;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport SubMaterialCategoryList from './mSubMaterialCategoryList';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst mScope = () => {\r\n    const isNew = useSelector((state) => state.dop.isNew);\r\n    const isEdit = useSelector((state) => state.dop.isEdit);\r\n\r\n    const getDOP = () =>{\r\n        API.getmDOPList().then(\r\n            result=>{\r\n                return result;\r\n            }\r\n        )\r\n    } \r\n\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Sub Category\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            <SubMaterialCategoryList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mScope;\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport {Button} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst mScopePanel = (props) => {\r\n\r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    const [categoryList,setCategoryList] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"ScopeName\":scopeName,\r\n                \"ScopeDesc\":scopeDesc,\r\n                \"CMINFO\":{\r\n                    \"LMBY\":0\r\n                }\r\n            }\r\n        )\r\n        API.postmScope(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Material Name </span>\r\n                        <input onChange={(e) => setScopeName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Material Code </span>\r\n                        <input onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc </span>\r\n                        <input onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc </span>\r\n                        <input onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc </span>\r\n                        <input onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopePanel;","/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\n\r\nimport $ from 'jquery'; \r\nimport API  from '../../utils/apiServices';\r\nimport MaterialPanel from './mMaterialPanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport { BsPencilFill } from 'react-icons/bs';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n// material table\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport EditTwoTone from '@mui/icons-material/EditTwoTone';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\n\r\nconst mMaterialList = () => {\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [isNew,setIsNew] = useState(false);\r\n    \r\n    const [ddlUoM,setDdlUoM] = useState([]);\r\n    const [ddlItemLevel,setDdlItemLevel] = useState([]);\r\n    const [ddlCategory,setDdlCategory] = useState([]);\r\n    const [ddlSubCategory,setDdlSubCategory] = useState([]);\r\n    const [selectedUoM, setSelectedUoM] = useState(\"\");\r\n    const [selectedLevel, setSelectedLevel] = useState(\"\");\r\n    const [selectedCategory, setselectedCategory] = useState(\"\");\r\n    const [selectedSubCategory, setSelectedSubCategory] = useState(\"\");\r\n\r\n    const [materialCode, setMaterialCode] = useState(\"\");\r\n    const [materialName, setMaterialName] = useState(\"\");\r\n\r\n    const [isActive,setIsActive] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [materialData,setMaterialData] = useState([]);\r\n    const [isActiveRow,setIsActiveRow] = useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    function getMaterial(){\r\n        API.getmMaterialList().then(\r\n            result=>{\r\n                console.log('i am Scope',result)\r\n                setMaterialData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function getDdlUoM(){\r\n        API.getUOM().then(\r\n            result=>{\r\n                console.log('i am DDL UoM',result)\r\n                setDdlUoM(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    function getDdlItemLevel(){\r\n        API.getItemLevel().then(\r\n            result=>{\r\n                console.log('i am DDL LVL',result)\r\n                setDdlItemLevel(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    function getDDLCategory(){\r\n        API.getMaterialCategory().then(\r\n            result=>{\r\n                console.log('i am DDL LVL',result)\r\n                const filtered = result.filter( (auto) => auto.isActive==true)\r\n                setDdlCategory(filtered);\r\n            }\r\n        )\r\n    }\r\n\r\n    function getDDLSubCategory(){\r\n        API.getSubMaterialCategory().then(\r\n            result=>{\r\n                console.log('i am DDL LVL',result)\r\n                const filtered = result.filter( (auto) => auto.isActive==true)\r\n                setDdlSubCategory(filtered);\r\n            }\r\n        )\r\n    }\r\n\r\n    function refreshData(){\r\n        getMaterial();\r\n        getDdlItemLevel();\r\n        getDdlUoM();\r\n        getDDLSubCategory();\r\n        getDDLCategory();\r\n    }\r\n\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        setIsNew(false);;\r\n        setIsEdit(false);;\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        setIsNew(true);\r\n    };\r\n\r\n    const handleShowEdit = (mtr) => {\r\n        //setShow(true);\r\n        mtr.isEditRow = true;\r\n        console.log(\"edit :\",mtr)\r\n        setIsEdit(true);\r\n    };\r\n\r\n    const handleCancelEdit = (mtr) => {\r\n        //setShow(true);\r\n        mtr.isEditRow = null;\r\n        setIsEdit(false);\r\n    };\r\n\r\n    function saveClick(materialId){\r\n        const body ={\r\n            \"materialId\": materialId,\r\n            \"materialCode\": materialCode,\r\n            \"materialName\": materialName,\r\n            \"uom\": selectedUoM,\r\n            \"itemLevelDetail\": {\r\n                \"itemLevelId\": selectedLevel\r\n            },\r\n            \"subCategoryDetail\": {\r\n                \"subCategoryId\": selectedSubCategory\r\n            },\r\n            \"lmby\": 0           \r\n        \r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putMaterial(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    //mtr.isEditRow = null;\r\n                    setIsEdit(false);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleIsActiveClick(materialId, status ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"id\" : materialId,\r\n                \"actStatus\" : status,\r\n                \"lmby\" : 0\r\n            }\r\n            console.log(\"activa:\",body);\r\n            API.putMaterialActivation(body).then(\r\n                result=>{\r\n                    console.log(\"put material: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        refreshData();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblScope').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n    },[])\r\n    \r\n    return (\r\n        <><div className=\"card card-primary\">\r\n            <div className=\"card-header align-middle\">\r\n                <h3 className=\"card-title\">Material List</h3>\r\n                <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                </a>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"collapsible table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Material Code</TableCell>\r\n                                <TableCell>Material Name</TableCell>\r\n                                <TableCell>UoM</TableCell>\r\n                                <TableCell>Item Level</TableCell>\r\n                                <TableCell>Sub Category</TableCell>\r\n                                <TableCell>Category</TableCell>\r\n                                <TableCell>Is Active</TableCell>\r\n                                <TableCell>option</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {materialData.map((row) => (\r\n                                <TableRow key={row.materialId}>\r\n                                    <TableCell>\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.materialCode : \r\n                                            <TextField defaultValue={row.materialCode} id=\"txtMaterialCode\" label={row.materialCode} onChange={(e)=>setMaterialCode(e.target.value)} variant=\"standard\" />\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.materialName : \r\n                                            <TextField defaultValue={row.materialName} id=\"txtMaterialName\" label={row.materialName} onChange={(e)=>setMaterialName(e.target.value)} variant=\"standard\" />\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.uom : \r\n                                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n                                                <InputLabel id=\"demo-simple-select-standard-label\">{row.uom}</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-standard-label\"\r\n                                                    id=\"demo-simple-select-standard\"\r\n                                                    onChange={(e) => setSelectedUoM(e.target.value)}\r\n                                                    label={row.uom}\r\n                                                    defaultValue={row.uom}\r\n                                                >\r\n                                                    {ddlUoM.map(um => <MenuItem value={um.uomName}>\r\n                                                        {um.uomName}\r\n                                                    </MenuItem> )}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.itemLevelDetail.itemLevelName : \r\n                                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n                                                <InputLabel id=\"demo-simple-select-standard-label\">{row.itemLevelDetail.itemLevelName}</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-standard-label\"\r\n                                                    id=\"itemLevel\"\r\n                                                    onChange={(e) => setSelectedLevel(e.target.value)}\r\n                                                    defaultValue={row.itemLevelDetail.itemLevelId}\r\n                                                    label={row.itemLevelName}\r\n                                                >\r\n                                                    {ddlItemLevel.map(um => <MenuItem value={um.itemLevelId}>\r\n                                                        {um.itemLevelName}\r\n                                                    </MenuItem> )}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {/* {row.subCategoryDetail.subCategoryName} */}\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.subCategoryDetail.subCategoryName : \r\n                                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n                                                <InputLabel id=\"demo-simple-select-standard-label\">{row.subCategoryDetail.subCategoryName}</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-standard-label\"\r\n                                                    id=\"subCat\"\r\n                                                    onChange={(e) => setSelectedSubCategory(e.target.value)}\r\n                                                    defaultValue={row.subCategoryDetail.subCategoryId}\r\n                                                    label={row.subCategoryDetail.subCategoryName}\r\n                                                >\r\n                                                    {ddlSubCategory.map(um => <MenuItem value={um.subCategoryId}>\r\n                                                        {um.subCategoryName}\r\n                                                    </MenuItem> )}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {/* {row.subCategoryDetail.categoryDetail.categoryName} */}\r\n                                        {row.isEditRow==null || row.isEditRow == false ? row.subCategoryDetail.categoryDetail.categoryName : \r\n                                            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n                                                <InputLabel id=\"demo-simple-select-standard-label\">{row.subCategoryDetail.categoryDetail.categoryName}</InputLabel>\r\n                                                <Select\r\n                                                    labelId=\"demo-simple-select-standard-label\"\r\n                                                    id=\"Cat\"\r\n                                                    onChange={(e) => setselectedCategory(e.target.value)}\r\n                                                    label={row.subCategoryDetail.categoryDetail.categoryName}\r\n                                                    defaultValue={row.subCategoryDetail.categoryDetail.categoryId}\r\n                                                    inputProps={{ readOnly: true }}\r\n                                                >\r\n                                                    {ddlCategory.map(um => <MenuItem value={um.categoryId}>\r\n                                                        {um.categoryName}\r\n                                                    </MenuItem> )}\r\n                                                </Select>\r\n                                            </FormControl>\r\n                                        }\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Form.Check\r\n                                            type=\"switch\"\r\n                                            id={row.materialId}\r\n                                            checked={row.isActive}\r\n                                            onChange={(e) => handleIsActiveClick(row.materialId, e.target.checked)} />\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        {\r\n                                            row.isEditRow == null ? <IconButton\r\n                                                aria-label=\"expand row\"\r\n                                                size=\"small\"\r\n                                                onClick={() => handleShowEdit(row)}\r\n                                            >\r\n                                                <EditTwoTone/>\r\n                                            </IconButton> :\r\n                                                <><IconButton\r\n                                                    aria-label=\"expand row\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => saveClick(row.materialId)}\r\n                                                >\r\n                                                    <SaveIcon />\r\n                                                </IconButton><IconButton\r\n                                                    aria-label=\"expand row\"\r\n                                                    size=\"small\"\r\n                                                    onClick={() => handleCancelEdit(row)}\r\n                                                >\r\n                                                    <CancelIcon />\r\n                                                </IconButton></>\r\n                                        }\r\n                                        \r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>\r\n        </div><Modal\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add New Material</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <MaterialPanel/>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mMaterialList;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport MaterialList from './mMaterialList';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst mMaterial = () => {\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Master Material\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            <MaterialList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mMaterial;\r\n","/* eslint-disable class-methods-use-this */\r\n/* eslint-disable func-names */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport $ from 'jquery'; \r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\n\r\nimport API  from '../../utils/apiServices';\r\n\r\nexport default class MDeliveryType extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalTitle: \"\",\r\n            deliverytypes: [],\r\n            DeliveryTypeId: 0,\r\n            DeliveryTypeName: \"\",\r\n            IsInboundReq: 0,\r\n            IsLTRRequired: 0,\r\n            orderType: { OrderTypeId: 0, OrderTypeName: \"\" },\r\n            CMINFO: { LMBY: 1, IsActive: 1 }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblDeliveryType').DataTable( {\r\n                \"columnDefs\": [ \r\n                    // {width: '9%', targets: 13}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    // fetch(variables.API_URL + 'masterdeliverytype')\r\n        //     .then(response => response.json())\r\n        //     .then(data => {\r\n        //         this.setState({ deliverytypes: data });\r\n        //         console.log(this.state.deliverytypes);\r\n        //     });\r\n    refreshList() {\r\n        API.getmDeliveryType().then(\r\n            result=>{\r\n                console.log('i am delivery',result);\r\n                this.setState({ deliverytypes: result });\r\n            }\r\n        );\r\n    }\r\n\r\n    setActivationClick(e, id, chktype,chkname) {\r\n        var strMessage = '';\r\n        if (chktype == 'CHKINBOUNDREQ') {\r\n            strMessage = 'Are you sure you want to change Inbound Required status of activation for ' + chkname + ' ?';\r\n        }\r\n        else if (chktype == \"CHKLTRREQ\") {\r\n            strMessage = 'Are you sure you want to change LTR Required status of activation for ' + chkname + ' ?';\r\n        }\r\n        else if (chktype == \"CHKISACTIVE\") {\r\n            strMessage = 'Are you sure you want to change status of activation for ' + chkname + ' ?';\r\n        }\r\n        if (window.confirm(strMessage)) {\r\n            fetch(variables.API_URL + 'masterdeliverytype/MasterDeliveryType_Checklist_U', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ id: id, chkType: chktype, chkValue: e.target.checked, lmby: 1 })\r\n            })\r\n                .then(res => res.json())\r\n                .then((result) => {\r\n                    alert(result);\r\n                    this.refreshList();\r\n                }, (error) => { alert('failed'); })\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        const {\r\n            deliverytypes,\r\n            DeliveryTypeId,\r\n            DeliveryTypeName,\r\n            IsInboundReq,\r\n            IsLTRRequired,\r\n            orderType: { OrderTypeId, OrderTypeName},\r\n            CMINFO: { LMBY, isActive }\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                \r\n                <HeaderChanger title=\"Delivery Type\"/>\r\n\r\n                <table id=\"tblDeliveryType\" class=\"display table table-striped table-bordered table-sm row-border hover mb-5\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>DeliveryType Name</th>\r\n                            <th>Order Type</th>\r\n                            <th>Inbound Required?</th>\r\n                            <th>LTR Required?</th>                            \r\n                            <th>Is Active?</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.deliverytypes.map(det =>\r\n                            <tr key={det.deliveryTypeId}>\r\n                                <td>{det.deliveryTypeId}</td>\r\n                                <td>{det.deliveryTypeName}</td>\r\n                                <td>{det.orderType.orderTypeName}</td>\r\n                                <td>\r\n                                    <div className=\"toggle-switch\">\r\n                                        <input type=\"checkbox\" className=\"checkbox\"\r\n                                            name={'chkInbound' + det.DeliveryTypeId} id={'chkInbound' + det.DeliveryTypeId}\r\n                                            checked={det.IsInboundReq}\r\n                                            onChange={e => this.setActivationClick(e, det.DeliveryTypeId, \"CHKINBOUNDREQ\", det.DeliveryTypeName)}/>\r\n                                        <label className=\"label\" htmlFor={'chkInbound' + det.DeliveryTypeId}>\r\n                                            <span className=\"inner\" />\r\n                                            <span className=\"switch\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"toggle-switch\">\r\n                                        <input type=\"checkbox\" className=\"checkbox\"\r\n                                            name={'chkLTR' + det.DeliveryTypeId} id={'chkLTR' + det.DeliveryTypeId}\r\n                                            checked={det.IsLTRRequired}\r\n                                            onChange={e => this.setActivationClick(e, det.DeliveryTypeId, \"CHKLTRREQ\", det.DeliveryTypeName)}/>\r\n                                        <label className=\"label\" htmlFor={'chkLTR' + det.DeliveryTypeId}>\r\n                                            <span className=\"inner\" />\r\n                                            <span className=\"switch\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </td>\r\n                                \r\n                                <td>\r\n                                    <div className=\"toggle-switch\">\r\n                                        <input type=\"checkbox\" className=\"checkbox\"\r\n                                            name={'chkIsActive' + det.DeliveryTypeId} id={'chkIsActive' + det.DeliveryTypeId}\r\n                                            checked={det.cminfo.isActive}\r\n                                            onChange={e => this.setActivationClick(e, det.DeliveryTypeId, \"CHKISACTIVE\", det.DeliveryTypeName)}/>\r\n                                        <label className=\"label\" htmlFor={'chkIsActive' + det.DeliveryTypeId}>\r\n                                            <span className=\"inner\" />\r\n                                            <span className=\"switch\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>No</th>\r\n                            <th>DeliveryType Name</th>\r\n                            <th>Order Type</th>\r\n                            <th>Inbound Required?</th>\r\n                            <th>LTR Required?</th>                            \r\n                            <th>Is Active?</th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","/* eslint-disable func-names */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable indent */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component} from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport $ from 'jquery'; \r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\n\r\nconst token = localStorage.getItem('token');\r\nexport default class MMaterialJS extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalTitle: \"\",\r\n            ordertypes: [],\r\n            OrderTypeId: 0,\r\n            OrderTypeName: \"\",\r\n            OrderTypeCode: \"\",\r\n            OrderTypeQString: \"\",\r\n            CMINFO: { LMBY: 1, IsActive: 1 }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshList();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblOrderType').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 2000);\r\n    }\r\n\r\n    changeOrderTypeName = (e) => {\r\n        this.setState({ OrderTypeName: e.target.value })\r\n    }\r\n\r\n    changeOrderTypeCode = (e) => {\r\n        this.setState({ OrderTypeCode: e.target.value })\r\n    }\r\n\r\n    changeOrderTypeQString = (e) => {\r\n        this.setState({ OrderTypeQString: e.target.value })\r\n    }\r\n\r\n    changeActivation = (e) => {\r\n        this.setState({ CMINFO: { LMBY: 1, IsActive: e.target.value } })\r\n    }\r\n\r\n    refreshList() {\r\n        fetch(variables.API_URL + 'masterordertype',\r\n        {headers : {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n        }})\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({ ordertypes: data });\r\n        });\r\n    }\r\n\r\n    addClick() {\r\n        this.setState({\r\n            modalTitle: \"Add New Order Type\",\r\n            OrderTypeId: 0,\r\n            OrderTypeName: \"\",\r\n            OrderTypeCode: \"\",\r\n            OrderTypeQString: \"\",\r\n            CMINFO: { LMBY: 1, IsActive: 1 }\r\n        });\r\n    }\r\n\r\n    editClick(ort) {\r\n        this.setState({\r\n            modalTitle: \"Edit Order Type\",\r\n            OrderTypeId: ort.orderTypeId,\r\n            OrderTypeName: ort.orderTypeName,\r\n            OrderTypeCode: ort.orderTypeCode,\r\n            OrderTypeQString: ort.orderTypeQString,\r\n            CMINFO: { LMBY: 0 }\r\n        });\r\n    }\r\n\r\n    deleteClick() {\r\n        fetch(variables.API_URL + 'masterordertype/ordertypedeletetemp', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ OrderTypeId: this.state.OrderTypeId, CMINFO: { LMBY: 1 } })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n                this.refreshList();\r\n            }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n    setActivationClick(e,id) {\r\n        fetch(variables.API_URL + 'masterordertype/ordertypesetactivation', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ \r\n                \"id\":id,\r\n                \"actStatus\":e.target.checked,\r\n                \"lmby\":0 \r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result.message);\r\n                this.refreshList();\r\n            }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n    updateClick() {\r\n        fetch(variables.API_URL + 'masterordertype', {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify({ OrderTypeId: this.state.OrderTypeId, OrderTypeName: this.state.OrderTypeName, OrderTypeCode: this.state.OrderTypeCode, OrderTypeQString: this.state.OrderTypeQString, CMINFO: { LMBY: 1 } })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                console.log(result);\r\n                alert(result);\r\n                this.refreshList();\r\n            }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n    createClick() {\r\n\r\n        fetch(variables.API_URL + 'masterordertype', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ OrderTypeName: this.state.OrderTypeName, OrderTypeCode: this.state.OrderTypeCode, OrderTypeQString: this.state.OrderTypeQString, CMINFO: { LMBY: 1 } })\r\n        })\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                alert(result);\r\n                this.refreshList();\r\n            }, (error) => { alert('failed'); })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const {\r\n            modalTitle,\r\n            ordertypes,\r\n            OrderTypeId,\r\n            OrderTypeName,\r\n            OrderTypeCode,\r\n            OrderTypeQString,\r\n            CMINFO: { LMBY, IsActive }\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n                <HeaderChanger title=\"Order Type\" />\r\n                <button type=\"button\"\r\n                    hidden=\"hidden\"\r\n                    className=\"btn btn-primary m-2 float-end\"\r\n                    data-bs-toggle=\"modal\"\r\n                    data-bs-target=\"#AddUpdateModal\"\r\n                    onClick={() => this.addClick()}> \r\n                    Add New Order Type\r\n                </button>\r\n                <table id=\"tblOrderType\" class=\"display table table-striped table-bordered table-sm row-border hover mb-5\" aria-labelledby=\"tabelLabel\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>OrderType Id</th>\r\n                            <th>OrderType Code</th>\r\n                            <th>OrderType Name</th>\r\n                            <th>OrderType QString</th>\r\n                            <th>Is Active</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.ordertypes.map(ort =>\r\n                            <tr key={ort.orderTypeId}>\r\n                                <td>{ort.orderTypeId}</td>\r\n                                <td>{ort.orderTypeCode}</td>\r\n                                <td>{ort.orderTypeName}</td>\r\n                                <td>{ort.orderTypeQString}</td>\r\n                                <td>\r\n                                    <div className=\"toggle-switch\">\r\n                                        <input type=\"checkbox\" className=\"checkbox\"\r\n                                            name={'chk' + ort.orderTypeId} id={'chk' + ort.orderTypeId}\r\n                                            checked={ort.cminfo.isActive}\r\n                                            onChange={e => this.setActivationClick(e,ort.orderTypeId)} />\r\n                                        <label className=\"label\" htmlFor={'chk' + ort.orderTypeId}>\r\n                                            <span className=\"inner\" />\r\n                                            <span className=\"switch\" />\r\n                                        </label>\r\n                                    </div>\r\n                                </td>\r\n                                <td>\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        data-bs-toggle=\"modal\"\r\n                                        data-bs-target=\"#AddUpdateModal\"\r\n                                        onClick={() => this.editClick(ort)}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                            <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                        </svg>\r\n                                    </button>\r\n\r\n\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>OrderType Id</th>\r\n                            <th>OrderType Code</th>\r\n                            <th>OrderType Name</th>\r\n                            <th>OrderType QString</th>\r\n                            <th>Is Active</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n                <div className=\"modal fade\" id=\"AddUpdateModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">{modalTitle}</h5>\r\n                                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\"> OrderType Code</span>\r\n                                    <input type=\"text\" className=\"form-control\" value={OrderTypeCode} onChange={this.changeOrderTypeCode} />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\"> OrderType Name</span>\r\n                                    <input type=\"text\" className=\"form-control\" value={OrderTypeName} onChange={this.changeOrderTypeName} />\r\n                                </div>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <span className=\"input-group-text\"> OrderType QString</span>\r\n                                    <input type=\"text\" className=\"form-control\" value={OrderTypeQString} onChange={this.changeOrderTypeQString} />\r\n                                </div>\r\n\r\n\r\n                                {OrderTypeId == 0 ? <button type=\"button\" className=\"btn btn-primary float-start\" onClick={() => this.createClick()}>Create</button> : null}\r\n                                {OrderTypeId != 0 ? <button type=\"button\" className=\"btn btn-primary float-start\" onClick={() => this.updateClick()}>Update</button> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    isNew: false,\r\n    isEdit: false,\r\n    // dop:[]\r\n};\r\n\r\nexport const dopSlice = createSlice({\r\n    name: 'dop',\r\n    initialState,\r\n    reducers: {\r\n        setIsNew: (state, {payload}) => {\r\n            state.isNew = payload;\r\n        },\r\n        setIsEdit:(state, {payload}) => {\r\n            state.isEdit = payload;\r\n        }\r\n        \r\n    }\r\n});\r\n\r\nexport const {setIsNew, setIsEdit} = dopSlice.actions;\r\n\r\nexport default dopSlice.reducer;","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {Button, ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport $ from 'jquery'; \r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { setIsEdit, setIsNew, setDOP } from '@app/store/reducers/dop';\r\nimport { toast } from 'react-toastify';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst mDOPPanel = (props) => {\r\n    const [show, setShow] = useState(false);\r\n    const [ddlOrderType,setDdlOrderType] = useState([]);\r\n    const [ddlSubconName,setddlSubconName] = useState([]);\r\n    const [selectedOrderType,setSelectedOrderType] = useState(0);\r\n    const [selectedSubcon,setSelectedSubcon] = useState(0);\r\n    const [dopName,setDopName] = useState(\"\");\r\n    const [dopCode,setDopCode] = useState(\"\");\r\n    const [dopType,setDopType] = useState(\"\");\r\n    const [dopDesc,setDopDesc] = useState(\"\");\r\n    const [dopDest,setDopDest] = useState(\"\");\r\n    const [dopAddress,setDopAddress] = useState(\"\");\r\n    const [isMainCWH,setIsMainCWH] = useState(false);\r\n    const [isCWH,setIsCWH] = useState(false);\r\n    const [isSite,setIsSite] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const dispatch = useDispatch();\r\n\r\n    function cancelClick(){\r\n        dispatch(setIsNew(false));\r\n        dispatch(setIsEdit(false));\r\n    }\r\n\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"dopName\": dopName,\r\n                \"dopCode\": dopCode,\r\n                \"dopType\": dopType,\r\n                \"dopDesc\": dopDesc,\r\n                \"dopDestName\": dopDest,\r\n                \"dopAddress\": dopAddress,\r\n                \"isMainCWH\": isMainCWH,\r\n                \"isCWH\": isCWH,\r\n                \"isSite\": isSite,\r\n                \"orderType\": {\r\n                    \"orderTypeId\": selectedOrderType          \r\n                },\r\n                \"lspInfo\": {\r\n                    \"subconId\": selectedSubcon          \r\n                },\r\n                \"cminfo\": {\r\n                    \"lmby\": 0          \r\n                }\r\n            }\r\n        )\r\n        API.postDOPData(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n        //toast.success(\"data saved successfully\")\r\n        //console.log(\"dopName : \",dopName,\" dopCode : \",dopCode, \"Order Type : \", orderType, \"is CWH\", isCWH)\r\n    }\r\n\r\n    function getOrderType(){\r\n        API.getmOrderType().then(\r\n            result=>{\r\n                console.log('i am OrderType',result)\r\n                setDdlOrderType(result);\r\n            }\r\n        )\r\n    }\r\n    function getSubcon(){\r\n        API.getmSubcon().then(\r\n            result=>{\r\n                console.log('i am subcon',result)\r\n                setddlSubconName(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const changeOrderType = (e) => {\r\n        setSelectedOrderType(e.target.value);\r\n        console.log(selectedOrderType);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getOrderType();\r\n        getSubcon();\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Name </span>\r\n                        <input value={dopName} onChange={(e) => setDopName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Code </span>\r\n                        <input onChange={(e) => setDopCode(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Type </span>\r\n                        <input onChange={(e) => setDopType(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Desc </span>\r\n                        <input onChange={(e) => setDopDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Destination </span>\r\n                        <input onChange={(e) => setDopDest(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">DOP Address </span>\r\n                        {/* <input onChange={(e) => setDopAddress(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                        <Form.Control\r\n                            as=\"textarea\"\r\n                            style={{ height: '100px' }}\r\n                            onChange={(e) => setDopAddress(e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Is Main CWH </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"isMainCWH\"\r\n                                onChange={(e) => setIsMainCWH(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Is CWH </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"isCWH\"\r\n                                onChange={(e) => setIsCWH(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Is Site </span>\r\n                        <div class=\"form-control col-md-9\">\r\n                            <Form.Check \r\n                                type=\"switch\"\r\n                                id=\"isSite\"\r\n                                onChange={(e) => setIsSite(e.target.checked)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Order Type </span>\r\n                        <select className=\"form-select col-md-9\" onChange={(e) => setSelectedOrderType(e.target.value)} value={ddlOrderType.orderTypeId}>\r\n                            <option value=\"0\">Select Order Type</option>\r\n                            {ddlOrderType.map(um => <option key={um.orderTypeId} value={um.orderTypeId}>\r\n                                {um.orderTypeName}\r\n                            </option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Subcon Name </span>\r\n                        <select className=\"form-select col-md-9\" onChange={(e) => setSelectedSubcon(e.target.value)} value={ddlSubconName.subconId}>\r\n                            <option value=\"0\">Select Subcon</option>\r\n                            {ddlSubconName.map(um => <option key={um.subconId} value={um.subconId}>\r\n                                {um.subconName}\r\n                            </option>)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n                {/* <div className='col-md-12 text-right'>\r\n                    <button type=\"button\" className=\"btn btn-primary m-2 pull-right \" onClick={saveClick}>\r\n                        Save\r\n                    </button>\r\n                    <button type=\"button\" className=\"btn btn-warning m-2 pull-right \" onClick={cancelClick}>\r\n                        Cancel\r\n                    </button>\r\n                </div> */}\r\n\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mDOPPanel;","export const setDataDop = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_DOP\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataDop = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_DOP\",\r\n        payload,\r\n    };\r\n};\r\n  ","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nimport $ from 'jquery'; \r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport {useTranslation} from 'react-i18next';\r\nimport API  from '../../utils/apiServices';\r\nimport DOPPanel from './mDOPPanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {setCardTitle} from '@store/reducers/pagetext';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/dop';\r\nimport {toast} from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faPowerOff, faPencil } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\n//? Action\r\nimport { getDataDop } from '@app/store/action/dopAction';\r\n\r\nconst mDOPList = () => {\r\n    const isNew = useSelector((state) => state.dop.isNew);\r\n    const isEdit = useSelector((state) => state.dop.isEdit);\r\n    \r\n    const [ddlOrderType,setDdlOrderType] = useState([]);\r\n    const [ddlSubconName,setddlSubconName] = useState([]);\r\n    const [selectedOrderType,setSelectedOrderType] = useState(0);\r\n    const [selectedSubcon,setSelectedSubcon] = useState(0);\r\n    const [dopName,setDopName] = useState(\"\");\r\n    const [dopCode,setDopCode] = useState(\"\");\r\n    const [dopType,setDopType] = useState(\"\");\r\n    const [dopDesc,setDopDesc] = useState(\"\");\r\n    const [dopDest,setDopDest] = useState(\"\");\r\n    const [dopAddress,setDopAddress] = useState(\"\");\r\n    const [isMainCWH,setIsMainCWH] = useState(false);\r\n    const [isCWH,setIsCWH] = useState(false);\r\n    const [isSite,setIsSite] = useState(false);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [dopData,setDopData] = useState([]);\r\n    const [isActiveRow,setIsActiveRow] = useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n    function getDOP(){\r\n        API.getmDOPList().then(\r\n            result=>{\r\n                console.log('i am DOP',result)\r\n                setDopData(result);\r\n            }\r\n        )\r\n    } \r\n    function getOrderType(){\r\n        API.getmOrderType().then(\r\n            result=>{\r\n                console.log('i am OrderType',result)\r\n                setDdlOrderType(result);\r\n            }\r\n        )\r\n    }\r\n    function getSubcon(){\r\n        API.getmSubcon().then(\r\n            result=>{\r\n                setddlSubconName(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    function refreshData(){\r\n        getDOP();\r\n        getOrderType();\r\n        getSubcon();\r\n    }\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        dispatch(setIsNew(false));;\r\n        dispatch(setIsEdit(false));;\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        dispatch(setIsNew(true));\r\n    };\r\n\r\n    const handleShowEdit = (dop) => {\r\n        //setShow(true);\r\n        dop.isEditRow = true;\r\n        console.log(\"edit :\",dop)\r\n        dispatch(setIsEdit(true));\r\n    };\r\n\r\n    const handleCancelEdit = (dop) => {\r\n        //setShow(true);\r\n        dop.isEditRow = false;\r\n        console.log(\"edit cancel:\",dop)\r\n        dispatch(setIsEdit(false));\r\n    };\r\n\r\n    function handleIsActiveClick(dopId, isActive ){\r\n        const body={\r\n            \"Id\":dopId,\r\n            \"ActStatus\":isActive,\r\n            \"LMBY\":0   \r\n        }\r\n        API.putActiveStatus(body).then(\r\n            result=>{\r\n                console.log(\"put: \", result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n        // console.log(\"dop ID :\", dopId,\"is Active\", isActive)\r\n        // toast.success(\"dop ID : \", dopId,\"is Active\", isActive);\r\n    }\r\n\r\n    \r\n\r\n\r\n    function saveClick(dopId){\r\n        const body ={\r\n            \"dopId\":dopId,\r\n            \"dopName\": dopName,\r\n            \"dopCode\": dopCode,\r\n            \"dopType\": dopType,\r\n            \"dopDesc\": dopDesc,\r\n            \"dopDestName\": dopDest,\r\n            \"dopAddress\": dopAddress,\r\n            \"isMainCWH\": isMainCWH,\r\n            \"isCWH\": isCWH,\r\n            \"isSite\": isSite,\r\n            \"orderType\": {\r\n                \"orderTypeId\": selectedOrderType          \r\n            },\r\n            \"lspInfo\": {\r\n                \"subconId\": selectedSubcon\r\n            },\r\n            \"cminfo\": {\r\n                \"lmby\": 0          \r\n            }\r\n        }\r\n        API.putDOPData(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function addClick(){\r\n        //const dispatch = useDispatch(setIsNew(true));\r\n        dispatch(setIsNew(true));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDOP();\r\n        getOrderType();\r\n        getSubcon();\r\n        getDataDop();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblDOP').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 13}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"card card-primary\">\r\n                <div className=\"card-header align-middle\">\r\n                    <h3 className=\"card-title\">DOP List</h3>\r\n                    <a href='javascript:void(0)' onClick={handleShowAdd} title=\"create new dop\" class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <Table responsive id=\"tblDOP\" className=\"display table table-striped table-bordered table-sm row-border hover mb-5\" aria-labelledby=\"tabelLabel\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NO</th>\r\n                                <th>DOP Name</th>\r\n                                <th>DOP Code</th>\r\n                                <th>Type</th>\r\n                                <th>Desc</th>\r\n                                <th>Destination</th>\r\n                                <th>Address</th>\r\n                                <th>Is Main CWH</th>\r\n                                <th>Is CWH</th>\r\n                                <th>Is Site</th>\r\n                                <th>Order Type</th>\r\n                                <th>Subcon Name</th>\r\n                                <th>Is Active</th>\r\n                                <th>Option</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {dopData.map(dop =>\r\n                                <tr key={dop.dopId}>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopName : \r\n                                                <input placeholder={dop.dopName} onChange={(e) => setDopName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopCode : \r\n                                                <input placeholder={dop.dopCode} onChange={(e) => setDopCode(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopType : \r\n                                                <input placeholder={dop.dopType} onChange={(e) => setDopType(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopDesc : \r\n                                                <input placeholder={dop.dopDesc} onChange={(e) => setDopDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }    \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopDestName : \r\n                                                <input placeholder={dop.dopDestName} onChange={(e) => setDopDest(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }  \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.dopAddress : \r\n                                                <input placeholder={dop.dopAddress} onChange={(e) => setDopAddress(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                                        }  \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? <Form.Check \r\n                                                type=\"switch\"\r\n                                                id=\"isMainCWHRowBinded\"\r\n                                                // onChange={(e) => setIsCWH(e.target.checked)}\r\n                                                checked={dop.isMainCWH}\r\n                                            /> : \r\n                                                <Form.Check \r\n                                                    type=\"switch\"\r\n                                                    id=\"isMainCWHRow\"\r\n                                                    onChange={(e) => setIsMainCWH(e.target.checked)}\r\n                                                />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? <Form.Check \r\n                                                type=\"switch\"\r\n                                                id=\"isCWHRowBinded\"\r\n                                                // onChange={(e) => setIsCWH(e.target.checked)}\r\n                                                checked={dop.isCWH}\r\n                                            /> : \r\n                                                <Form.Check \r\n                                                    type=\"switch\"\r\n                                                    id=\"isCWHRow\"\r\n                                                    onChange={(e) => setIsCWH(e.target.checked)}\r\n                                                />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? <Form.Check \r\n                                                type=\"switch\"\r\n                                                id=\"isSiteRowBinded\"\r\n                                                // onChange={(e) => setIsCWH(e.target.checked)}\r\n                                                checked={dop.isSite}\r\n                                            /> : \r\n                                                <Form.Check \r\n                                                    type=\"switch\"\r\n                                                    id=\"isSiteRow\"\r\n                                                    onChange={(e) => setIsSite(e.target.checked)}\r\n                                                />\r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.orderType.orderTypeName : \r\n                                                <select className=\"form-select col-md-9\" onChange={(e) => setSelectedOrderType(e.target.value)} value={ddlOrderType.orderTypeId}>\r\n                                                    <option value=\"0\">Select Order Type</option>\r\n                                                    {ddlOrderType.map(um => <option key={um.orderTypeId} value={um.orderTypeId}>\r\n                                                        {um.orderTypeName}\r\n                                                    </option>)}\r\n                                                </select>\r\n                                        }  \r\n                                    </td>\r\n                                    <td>\r\n                                        {\r\n                                            dop.isEditRow==false||dop.isEditRow == null? dop.lspInfo.subconName : \r\n                                                <select className=\"form-select col-md-9\" onChange={(e) => setSelectedSubcon(e.target.value)} value={ddlSubconName.subconId}>\r\n                                                    <option value=\"0\">Select Subcon</option>\r\n                                                    {ddlSubconName.map(um => <option key={um.subconId} value={um.subconId}>\r\n                                                        {um.subconName}\r\n                                                    </option>)}\r\n                                                </select>        \r\n                                        }  \r\n                                    </td>\r\n                                    <td>\r\n                                        <Form.Check \r\n                                            type=\"switch\"\r\n                                            id={\"isActive\" + dop.dopId}\r\n                                            checked={dop.cminfo.isActive}\r\n                                            onChange={(e) => handleIsActiveClick(dop.dopId,e.target.checked)}\r\n                                        />\r\n                                    </td>\r\n                                    <td>\r\n                                        {dop.isEditRow==false || dop.isEditRow==null ? \r\n                                            <button type=\"button\"\r\n                                                className=\"btn btn-light mr-1\"\r\n                                                onClick={() => handleShowEdit(dop)}\r\n                                                title=\"edit\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                            : \r\n                                            <button type=\"button\"\r\n                                                className=\"btn btn-success mr-1\"\r\n                                                onClick={() =>saveClick(dop.dopId)}>\r\n                                                <FontAwesomeIcon icon={faSave} />\r\n                                            </button>\r\n                                        }\r\n                                        {dop.isEditRow==true ?\r\n                                            <a href='javascript:void(0)' onClick={()=>handleCancelEdit(dop)} class=\"btn btn-danger float-right\">\r\n                                                <i class=\"fas fa-light fa-times\"></i>\r\n                                            </a> : null}\r\n                                        {dop.datainused == 0 ?\r\n                                            <button type=\"button\"\r\n                                                className=\"btn btn-light mr-1\"\r\n                                                onClick={() => this.deleteClick(dop.DOPId, dop.DOPName)}>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                                    <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                                    <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                                </svg>\r\n                                            </button> : null}\r\n                                    </td>\r\n                                </tr>    \r\n                            )}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <th>NO</th>\r\n                                <th>DOP Name</th>\r\n                                <th>DOP Code</th>\r\n                                <th>Type</th>\r\n                                <th>Desc</th>\r\n                                <th>Destination</th>\r\n                                <th>Address</th>\r\n                                <th>Is Main CWH</th>\r\n                                <th>Is CWH</th>\r\n                                <th>Is Site</th>\r\n                                <th>Subcon Name</th>\r\n                                <th>Order Type</th>\r\n                                <th>Is Active</th>\r\n                                <th>Option</th>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </Table>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{isNew? \"Add New DOP\" : \"Edit DOP\"}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <DOPPanel/>\r\n                </Modal.Body>\r\n                {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n            </Modal>\r\n        </>\r\n        \r\n\r\n    );\r\n};\r\n\r\nexport default mDOPList;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport DOPList from './mDOPList';\r\nimport DOPPanel from './mDOPPanel';\r\nimport {useSelector} from 'react-redux';\r\n\r\n//action\r\nimport { getDataDop } from '@app/store/action/dopAction';\r\n\r\nconst mDOP = (props) => {\r\n    const isNew = useSelector((state) => state.dop.isNew);\r\n    const isEdit = useSelector((state) => state.dop.isEdit);\r\n\r\n    const getDOP = () =>{\r\n        API.getmDOPList().then(\r\n            result=>{\r\n                return result;\r\n            }\r\n        )\r\n    } \r\n\r\n    useEffect(() => {\r\n        getDOP();\r\n        getDataDop()\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Master DOP\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            <DOPList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mDOP;\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport {Button} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst mScopePanel = (props) => {\r\n\r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"ScopeName\":scopeName,\r\n                \"ScopeDesc\":scopeDesc,\r\n                \"CMINFO\":{\r\n                    \"LMBY\":0\r\n                }\r\n            }\r\n        )\r\n        API.postmScope(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Name </span>\r\n                        <input onChange={(e) => setScopeName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc </span>\r\n                        <input onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopePanel;","/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\n\r\nimport $ from 'jquery'; \r\nimport API  from '../../utils/apiServices';\r\nimport ScopePanel from './mScopePanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport { BsPencilFill } from 'react-icons/bs';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst mScopeList = () => {\r\n    // const isNew = useSelector((state) => state.scope.isNew);\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [isNew,setIsNew] = useState(false);\r\n    \r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    const [isActive,setIsActive] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [scopeData,setScopeData] = useState([]);\r\n    const [isActiveRow,setIsActiveRow] = useState(false);\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        setIsNew(false);\r\n        setIsEdit(false);\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        setIsNew(true);\r\n    };\r\n\r\n    const handleShowEdit = (scp) => {\r\n        //setShow(true);\r\n        scp.isEditRow = true;\r\n        console.log(\"edit :\",scp);\r\n        setIsEdit(true);\r\n    };\r\n\r\n    const handleCancelEdit = (scp) => {\r\n        //setShow(true);\r\n        scp.isEditRow = null;\r\n        console.log(\"edit cancel:\",scp)\r\n        setIsEdit(false);\r\n    };\r\n\r\n    function getScope(){\r\n        API.getmScope().then(\r\n            result=>{\r\n                setScopeData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function refreshData(){\r\n        getScope();\r\n        //getOrderType();\r\n        //getSubcon();\r\n    }\r\n\r\n    function saveClick(scopeId){\r\n        const body ={\r\n            \"ScopeId\":scopeId,\r\n            \"ScopeName\": scopeName,\r\n            \"ScopeDesc\": scopeDesc,\r\n            \"CMINFO\": {\r\n                \"LMBY\": 0          \r\n            }\r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putmScope(body).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleIsActiveClick(scopeId, e ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"Id\":scopeId,\r\n                \"ActStatus\":e.target.checked,\r\n                \"LMBY\":0  \r\n            }\r\n            console.log(body);\r\n            API.putmScopeActivation(body).then(\r\n                result=>{\r\n                    console.log(\"put scope: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        refreshData();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSaveFromPanel = () =>{\r\n        setShow(false);\r\n        refreshData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblScope').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 2000);\r\n    },[])\r\n    \r\n    return (\r\n        <><div className=\"card card-primary\">\r\n            <div className=\"card-header align-middle\">\r\n                <h3 className=\"card-title\">Scope List</h3>\r\n                <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                </a>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <table id=\"tblScope\" className=\"display table table-striped table-bordered table-sm row-border hover mb-5 responsive\" aria-labelledby=\"tabelLabel\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>NO</th>\r\n                            <th>Scope Name</th>\r\n                            <th>Desc</th>\r\n                            <th>IsActive</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {scopeData.map(scp => <tr key={scp.scopeId}>\r\n                            <td></td>\r\n                            <td>\r\n                                {scp.isEditRow == null ? scp.scopeName :\r\n                                    <input placeholder={scp.scopeName} onChange={(e) => setScopeName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                            </td>\r\n                            <td>\r\n                                {scp.isEditRow == null ? scp.scopeDesc :\r\n                                    <input placeholder={scp.scopeDesc} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                            </td>\r\n                            <td>\r\n                                <Form.Check\r\n                                    type=\"switch\"\r\n                                    id={scp.scopeId}\r\n                                    checked={scp.cminfo.isActive}\r\n                                    onChange={(e) => handleIsActiveClick(scp.scopeId, e)} />\r\n                            </td>\r\n                            <td>\r\n                                {scp.isEditRow == false || scp.isEditRow == null ?\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        onClick={() => handleShowEdit(scp)}\r\n                                        title=\"edit\">\r\n                                        <BsPencilFill/>\r\n                                    </button>\r\n                                    :\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-success mr-1\"\r\n                                        onClick={() => saveClick(scp.scopeId)}>\r\n                                        <FontAwesomeIcon icon={faSave} />\r\n                                    </button>\r\n                                    // <a href='javascript:void(0)' onClick={()=>handleSaveEdit(scp)} class=\"btn btn-success float-right\">\r\n                                    //     <i class=\"fas fa-save\"></i>\r\n                                    // </a>\r\n                                }\r\n                                {scp.isEditRow == true ?\r\n                                    <a href='javascript:void(0)' onClick={() => handleCancelEdit(scp)} class=\"btn btn-danger float-right\">\r\n                                        <i class=\"fas fa-light fa-times\"></i>\r\n                                    </a> : null}\r\n                                {scp.datainused == 0 ?\r\n                                    <button type=\"button\"\r\n                                        className=\"btn btn-light mr-1\"\r\n                                        onClick={() => this.deleteClick(scp.scopeId, scp.scopeName)}>\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n                                            <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\" />\r\n                                        </svg>\r\n                                    </button> : null}\r\n                            </td>\r\n                        </tr>\r\n                        )}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th>NO</th>\r\n                            <th>Scope Name</th>\r\n                            <th>Desc</th>\r\n                            <th>IsActive</th>\r\n                            <th>Option</th>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        </div><Modal\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>\"Add New Scope\"</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <ScopePanel/>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopeList;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport ScopeList from './mScopeList';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst mScope = () => {\r\n    const isNew = useSelector((state) => state.dop.isNew);\r\n    const isEdit = useSelector((state) => state.dop.isEdit);\r\n\r\n    const getDOP = () =>{\r\n        API.getmDOPList().then(\r\n            result=>{\r\n                return result;\r\n            }\r\n        )\r\n    } \r\n\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Master Scope\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            <ScopeList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default mScope;\r\n","export const setDataScope = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_SCOPE\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataScope = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_SCOPE\",\r\n        payload,\r\n    };\r\n};\r\n  ","/* eslint-disable react/jsx-no-undef */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/no-deprecated */\r\nimport { getDataDop } from '@app/store/action/dopAction';\r\nimport React,{useEffect} from 'react';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport cellEditorFactory,{Type} from 'react-bootstrap-table2-editor';\r\nimport { getDataScope } from '@app/store/action/scopeAction';\r\n\r\n\r\nconst Dop2 = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getDataDop())\r\n        dispatch(getDataScope())\r\n    },[dispatch]);\r\n\r\n    const dataTable = useSelector(state=>state.dopReducer.dataDop)\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'dopName',\r\n            text:'Name',\r\n            sort:true\r\n        },\r\n        {\r\n            dataField:'dopCode',\r\n            text:'Code',\r\n            sort:true\r\n        },\r\n        {\r\n            dataField:'dopType',\r\n            text:'Type'\r\n        },\r\n        {\r\n            dataField:'dopDesc',\r\n            text:'Desc'\r\n        },\r\n        {\r\n            dataField:'dopDestName',\r\n            text:'Destination'\r\n        },\r\n        {\r\n            dataField:'dopAddress',\r\n            text:'Adress'\r\n        },\r\n        {\r\n            dataField:'isMainCWH',\r\n            text:'Is Main CWH',\r\n            editor: {\r\n                type: Type.CHECKBOX,\r\n                value: 'Y:N'\r\n            },\r\n            formatter: (cell, row, rowIndex) => {\r\n                //     console.log(cell, row)\r\n                return (\r\n                    <input type=\"checkbox\"  checked={cell} ></input>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField:'isCWH',\r\n            text:'Is CWH',\r\n            editor: {\r\n                type: Type.CHECKBOX,\r\n                value: 'Y:N'\r\n            },\r\n            formatter: (cell, row, rowIndex) => {\r\n                //     console.log(cell, row)\r\n                return (\r\n                    <input type=\"checkbox\"  checked={cell} ></input>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField:'isSite',\r\n            text:'Is Site',\r\n            editor: {\r\n                type: Type.CHECKBOX,\r\n                value: 'Y:N'\r\n            },\r\n            formatter: (cell, row, rowIndex) => {\r\n                //     console.log(cell, row)\r\n                return (\r\n                    <input type=\"checkbox\"  checked={cell} ></input>\r\n                );\r\n            },\r\n        },\r\n        {\r\n            dataField:'lspInfo.subconName',\r\n            text:'Subcon'\r\n        },\r\n       \r\n\r\n    ]\r\n    const handleEdit = () => {\r\n        return alert('Edit Sucess')\r\n    }\r\n    return (\r\n        <div>\r\n            <BootstrapTable \r\n                data={dataTable} \r\n                columns={columns} \r\n                keyField='id' \r\n                pagination={paginationFactory()} \r\n                striped hover condensed\r\n                cellEdit={cellEditorFactory({\r\n                    mode:'dbclick',\r\n                    blurToSave:true,\r\n                    beforeSaveCell: handleEdit\r\n                })}\r\n                \r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Dop2;","/* eslint-disable react/no-unstable-nested-components */\r\nimport React,{useEffect} from 'react'\r\nimport {Table,Input} from 'antd'\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport 'antd/dist/antd.css';\r\nimport { getDataScope } from '@app/store/action/scopeAction';\r\n\r\nimport {SearchOutlined} from '@ant-design/icons'\r\n\r\nexport default function TableScope() {\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n        dispatch(getDataScope())\r\n    },[dispatch]);\r\n\r\n    const data = useSelector(state => state.scopeReducer.dataScope)\r\n\r\n    const columns =  [\r\n        {\r\n            title:'ID',\r\n            dataIndex:'scopeId',\r\n            sorter:(record1,record2)=>{\r\n                return record1.scopeId > record2.scopeId\r\n            }\r\n        },\r\n        {\r\n            title:'Scope Name',\r\n            dataIndex:'scopeName',\r\n            // eslint-disable-next-line react/no-unstable-nested-components\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n                return record.scopeName.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            sorter:(record1,record2)=>{\r\n                return record1.scopeName > record2.scopeName\r\n            }\r\n        },\r\n        {\r\n            title:'Description',\r\n            dataIndex:'scopeDesc',\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n                return record.scopeDesc.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            sorter:(record1,record2)=>{\r\n                return record1.scopeDesc > record2.scopeDesc\r\n            }\r\n         \r\n        },\r\n        {\r\n            title:'Is Active',\r\n            dataIndex:'cminfo',\r\n            key:'scopeId',\r\n            render: item => Object.keys(item).map(k => item[k])[2]\r\n         \r\n          \r\n        },\r\n        \r\n    ]\r\n  \r\n    return (\r\n        <div>\r\n            <Table\r\n                responsive\r\n                dataSource={data}\r\n                columns={columns}\r\n                key='scopeId'\r\n                // eslint-disable-next-line react/jsx-boolean-value\r\n                pagination={true}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport TableScope from '@app/components/mScope/table/tableScope'\r\n\r\nexport default function Scope2() {\r\n    return (\r\n        <TableScope/>\r\n    )\r\n}\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport {Button} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst mScopePanel = (props) => {\r\n\r\n    const [CPONo,setCPONo] = useState(\"\");\r\n    const [CPONoOriginal,setCPONoOriginal] = useState(\"\");\r\n    const [CPODate,setCPODate] = useState(\"\");\r\n    const [ProjectName,setProjectName] = useState(\"\");\r\n    const [ContractName,setContractName] = useState(\"\");\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"CPONo\":CPONo,\r\n                \"CPONoOriginal\":CPONoOriginal,\r\n                \"CPODate\" : CPODate,\r\n                \"ProjectName\":ProjectName,\r\n                \"ContractName\":ContractName,\r\n                \"CMINFO\":{\r\n                    \"LMBY\":0\r\n                }\r\n            }\r\n        )\r\n        console.log(body);\r\n        API.postPOData(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span>\r\n                        <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO Original</span>\r\n                        <input onChange={(e) => setCPONoOriginal(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO Date</span>\r\n                        <input onChange={(e) => setCPODate(e.target.value)} type=\"date\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Project Name</span>\r\n                        <input onChange={(e) => setProjectName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Contract Name</span>\r\n                        <input onChange={(e) => setContractName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopePanel;","/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nimport {variables} from '../../Variables';\r\nimport {ContentHeader} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\n\r\nimport $ from 'jquery'; \r\nimport API  from '../../utils/apiServices';\r\nimport POPanel from './POCreationPanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSave, faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\nimport DGPOCreation from '@app/pages/POCreation/DataGenerator';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nconst POList = () => {\r\n    const isNew = useSelector((state) => state.scope.isNew);\r\n    const isEdit = useSelector((state) => state.scope.isEdit);\r\n    \r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    const [isActive,setIsActive] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [scopeData,setScopeData] = useState([]);\r\n    const [isActiveRow,setIsActiveRow] = useState(false);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        dispatch(setIsNew(false));;\r\n        dispatch(setIsEdit(false));;\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        dispatch(setIsNew(true));\r\n    };\r\n\r\n    const handleShowEdit = (po) => {\r\n        //setShow(true);\r\n        po.isEditRow = true;\r\n        console.log(\"edit :\",po)\r\n        dispatch(setIsEdit(true));\r\n    };\r\n\r\n    const handleCancelEdit = (po) => {\r\n        //setShow(true);\r\n        po.isEditRow = null;\r\n        console.log(\"edit cancel:\",po)\r\n        dispatch(setIsEdit(false));\r\n    };\r\n\r\n    function getPOList(){\r\n        console.log(\"getscope\");\r\n        API.getPOList().then(\r\n            result=>{\r\n                console.log('i am PO creation',result)\r\n                const data = DGPOCreation.poList\r\n\r\n                setScopeData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function refreshData(){\r\n        getPOList();\r\n        //getOrderType();\r\n        //getSubcon();\r\n    }\r\n\r\n    function saveClick(scopeId){\r\n        const body ={\r\n            \"ScopeId\":scopeId,\r\n            \"ScopeName\": scopeName,\r\n            \"ScopeDesc\": scopeDesc,\r\n            \"CMINFO\": {\r\n                \"LMBY\": 0          \r\n            }\r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putmScope(body).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleIsActiveClick(cpoId, e ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"Id\":cpoId,\r\n                \"ActStatus\":e.target.checked,\r\n                \"LMBY\":0  \r\n            }\r\n            console.log(body);\r\n            API.putPOActivation(body).then(\r\n                result=>{\r\n                    console.log(\"put scope: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        refreshData();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSaveFromPanel = () =>{\r\n        setShow(false);\r\n        refreshData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblScope').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"card card-primary\">\r\n                <div className=\"card-header align-middle\">\r\n                    <h3 className=\"card-title\">PO List</h3>\r\n                    <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <table id=\"tblScope\" className=\"display table table-striped table-bordered table-sm row-border hover mb-5 responsive\" aria-labelledby=\"tabelLabel\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NO</th>\r\n                                <th>PO Number</th>\r\n                                <th>PO Number Original</th>\r\n                                <th>PO Date</th>\r\n                                <th>PO Date STR</th>\r\n                                <th>Project Name </th>\r\n                                <th>Contract Name </th>\r\n                                <th>Is Active </th>\r\n                                <th>Option</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {scopeData.map(po => <tr key={po.cpoId}>\r\n                                <td></td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.cpoNo :\r\n                                        <input placeholder={po.cpoNo} onChange={(e) => setScopeName(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.cpoNoOriginal :\r\n                                        <input placeholder={po.cpoNoOriginal} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.cpoDate :\r\n                                        <input placeholder={po.cpoDate} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.cpoDateStr :\r\n                                        <input placeholder={po.cpoDateStr} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.projectName :\r\n                                        <input placeholder={po.projectName} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == null ? po.contractName :\r\n                                        <input placeholder={po.contractName} onChange={(e) => setScopeDesc(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />}\r\n                                </td>\r\n                                <td>\r\n                                    <Form.Check\r\n                                        type=\"switch\"\r\n                                        id={po.cpoId}\r\n                                        checked={po.cminfo.isActive}\r\n                                        onChange={(e) => handleIsActiveClick(po.cpoId, e)} />\r\n                                </td>\r\n                                <td>\r\n                                    {po.isEditRow == false || po.isEditRow == null ?\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-light mr-1\"\r\n                                            onClick={() => handleShowEdit(po)}\r\n                                            title=\"edit\">\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\" />\r\n                                                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\" />\r\n                                            </svg>\r\n                                        </button>\r\n                                        :\r\n                                        <button type=\"button\"\r\n                                            className=\"btn btn-success mr-1\"\r\n                                            onClick={() => saveClick(po.scopeId)}>\r\n                                            <FontAwesomeIcon icon={faSave} />\r\n                                        </button>\r\n                                    // <a href='javascript:void(0)' onClick={()=>handleSaveEdit(po)} class=\"btn btn-success float-right\">\r\n                                    //     <i class=\"fas fa-save\"></i>\r\n                                    // </a>\r\n                                    }\r\n                                    {po.isEditRow == true ?\r\n                                        <a href='javascript:void(0)' onClick={() => handleCancelEdit(po)} class=\"btn btn-danger float-right\">\r\n                                            <i class=\"fas fa-light fa-times\"></i>\r\n                                        </a> : null}\r\n                                </td>\r\n                            </tr>\r\n                            )}\r\n                        </tbody>\r\n                        <tfoot>\r\n                            <tr>\r\n                                <th>NO</th>\r\n                                <th>PO Number</th>\r\n                                <th>PO Number Original</th>\r\n                                <th>PO Date</th>\r\n                                <th>PO Date STR</th>\r\n                                <th>Project Name </th>\r\n                                <th>Contract Name </th>\r\n                                <th>Is Active </th>\r\n                                <th>Option</th>\r\n                            </tr>\r\n                        </tfoot>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <Modal\r\n                size=\"lg\"\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Add New PO</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <POPanel/>\r\n                </Modal.Body>\r\n                {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default POList;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport POList from './POCreationList';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst POCreation = () => {\r\n    const isNew = useSelector((state) => state.dop.isNew);\r\n    const isEdit = useSelector((state) => state.dop.isEdit);\r\n\r\n    const getDOP = () =>{\r\n        API.getmDOPList().then(\r\n            result=>{\r\n                return result;\r\n            }\r\n        )\r\n    } \r\n\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"PO Creation\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            <POList />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default POCreation;\r\n","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport {Button} from '@components';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'jquery/dist/jquery.min.js';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\n\r\nimport {useDispatch} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\n\r\nconst mScopePanel = (props) => {\r\n\r\n    const [CPONo,setCPONo] = useState(\"\");\r\n    const [CPONoOriginal,setCPONoOriginal] = useState(\"\");\r\n    const [CPODate,setCPODate] = useState(\"\");\r\n    const [ProjectName,setProjectName] = useState(\"\");\r\n    const [ContractName,setContractName] = useState(\"\");\r\n    \r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n\r\n    const [ddlPOData,setDdlPOData] = useState([]);\r\n    const [ddlScopeData,setDdlScopeData] = useState([]);\r\n    const [selectedPO,setSelectedPO] = useState(\"\");\r\n    const [selectedScope,setSelectedScope] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function getDDLPOList(){\r\n        API.getPOList().then(\r\n            result=>{\r\n                const filtered = result.filter( (auto) => auto.cminfo.isActive==true)\r\n                setDdlPOData(filtered);\r\n            }\r\n        )\r\n    } \r\n    function getDDLScope(){\r\n        API.getmScope().then(\r\n            result=>{\r\n                const filtered = result.filter( (auto) => auto.cminfo.isActive==true)\r\n                setDdlScopeData(filtered);\r\n            }\r\n        )\r\n    } \r\n\r\n    function handleDDLPOChange(cpoId){\r\n        const po = ddlPOData.filter( (auto) => auto.cpoId==cpoId)\r\n        setSelectedPO(cpoId)\r\n        setCPONoOriginal(po[0].cpoNoOriginal);\r\n        setCPODate(po[0].cpoDateStr);\r\n        setProjectName(po[0].projectName);\r\n        setContractName(po[0].contractName);\r\n\r\n    }\r\n    \r\n    function handleDDLScopeChange(scopeId){\r\n        const scope = ddlScopeData.filter( (auto) => auto.scopeId==scopeId)\r\n        setSelectedScope(scopeId)\r\n        setScopeName(scope[0].scopeName);\r\n        setScopeDesc(scope[0].scopeDesc);\r\n    }\r\n\r\n    function saveClick(){\r\n        const body = (\r\n            {\r\n                \"PODetail\":{\r\n                    \"cpoId\":selectedPO     \r\n                },\r\n                \"ScopeDetail\":{\r\n                    \"scopeId\":selectedScope     \r\n                },\r\n                \"CMINFO\":{\r\n                    \"LMBY\":0\r\n                }\r\n            }\r\n        )\r\n        console.log(body);\r\n        API.postPOScope(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        getDDLPOList();\r\n        getDDLScope();\r\n    },[])\r\n    \r\n    return (\r\n        \r\n        <><div className=\"card-body\">\r\n            <div className='row g-3'>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                        {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select PO NO</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                onChange={(e) => handleDDLPOChange(e.target.value)}\r\n                                // label={row.uom}\r\n                            >\r\n                                {ddlPOData.map(um => <MenuItem value={um.cpoId}>\r\n                                    {um.cpoNo}\r\n                                </MenuItem> )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO Original</span>\r\n                        <input value={CPONoOriginal} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO Date</span>\r\n                        <input value={CPODate} type=\"date\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Project Name</span>\r\n                        <input value={ProjectName} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Contract Name</span>\r\n                        <input value={ContractName} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                </div>\r\n                <div className='col-md-12 '>\r\n                    <div class=\"input-group mb-3\">\r\n                        {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                        {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select Scope</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                onChange={(e) => handleDDLScopeChange(e.target.value)}\r\n                                // label={row.uom}\r\n                            >\r\n                                {ddlScopeData.map(um => <MenuItem value={um.scopeId}>\r\n                                    {um.scopeName}\r\n                                </MenuItem> )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Name</span>\r\n                        <input value={scopeName} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <div class=\"input-group mb-3\">\r\n                        <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc</span>\r\n                        <input value={scopeDesc} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                </div>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default mScopePanel;","import React, {Component,useState,useEffect} from 'react';\r\n\r\nimport API  from '../../utils/apiServices';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\n\r\nconst errorLog = (WPID , Phase, PackageName, Region, DataStatus)=>{\r\n    const datas = {\r\n        WPID: WPID,\r\n        Phase: Phase,\r\n        PackageName: PackageName,\r\n        Region: Region,\r\n        DataStatus: DataStatus\r\n    }\r\n    return datas;\r\n}\r\n\r\nconst poScopeData = (poScopeId,totalSites,cpoId,cpoNo,cpoNoOriginal,projectName,scopeId,scopeName,lmdt) =>{\r\n    const datas = {\r\n        key: poScopeId,\r\n        poScopeId: poScopeId,\r\n        totalSites: totalSites,\r\n        cpoId: cpoId,\r\n        cpoNo: cpoNo,\r\n        cpoNoOriginal: cpoNoOriginal,\r\n        projectName: projectName,\r\n        scopeId: scopeId,\r\n        scopeName: scopeName,\r\n        lmdt: lmdt\r\n        // \"poDetail\": {\r\n        //     \"cpoId\": 1,\r\n        //     \"cpoNo\": \"XL-0001\",\r\n        //     \"cpoNoOriginal\": \"XL-001 Batch 01\",\r\n        //     \"projectName\": \"XL Dismantle Batch 1 2022\",\r\n        //     \"cminfo\": {}\r\n        // },\r\n        // \"scopeDetail\": {\r\n        //     \"scopeId\": 1,\r\n        //     \"scopeName\": \"Dismantle\",\r\n        //     \"cminfo\": {}\r\n        // },\r\n        // \"getFileUploadList\": [],\r\n        // \"lmby\": 1,\r\n        // \"lmdt\": \"2022-02-18T11:42:43.35\",\r\n        // \"modifiedUser\": \"Administrator\"\r\n    }\r\n    \r\n    return datas;\r\n}\r\n\r\nconst fileListData = (poScopeId,poSitelistId,filePath,fullFilePath,uploadStatus,uploadDate,rowCount) => {\r\n    const datas = {\r\n        key: poSitelistId\r\n        ,poScopeId : poScopeId\r\n        ,poSitelistId : poSitelistId\r\n        ,filePath : filePath\r\n        ,fullFilePath : fullFilePath\r\n        ,uploadStatus : uploadStatus\r\n        ,uploadDate : uploadDate\r\n        ,rowCount : rowCount\r\n    }\r\n    \r\n    return datas;\r\n}\r\n\r\nconst CreateDataPOScope = {\r\n    errorLog\r\n    ,poScopeData\r\n    ,fileListData\r\n}\r\n\r\nexport default CreateDataPOScope;","/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable no-else-return */\r\n/* eslint-disable react/jsx-fragments */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\n//Bootstrap and jQuery libraries\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n//Datatable Modules\r\nimport \"datatables.net-dt/js/dataTables.dataTables\";\r\nimport \"datatables.net-dt/css/jquery.dataTables.min.css\";\r\nimport \"datatables.net-bs4/js/dataTables.bootstrap4\"\r\nimport \"datatables.net-buttons/js/dataTables.buttons\"\r\nimport \"datatables.net-fixedcolumns/js/dataTables.fixedColumns.min.js\";\r\n\r\nimport $ from 'jquery'; \r\nimport API  from '../../utils/apiServices';\r\nimport POScopePanel from './POScopePanel';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\n\r\n// material table\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport EditTwoTone from '@mui/icons-material/EditTwoTone';\r\nimport DeleteOutline from '@mui/icons-material/DeleteOutline';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport { subDays } from 'date-fns/esm';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport SmsFailedIcon from '@mui/icons-material/SmsFailed';\r\nimport { red } from '@mui/material/colors';\r\nimport { styled } from '@mui/material/styles';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport moment from 'moment';\r\nimport exportFromJSON from 'export-from-json'\r\nimport CreateDataPOScope from './DataGenerator';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nconst datax = [{ foo: 'foo'}, { bar: 'bar' }];\r\nconst fileName = 'download';\r\nconst exportType =  exportFromJSON.types.xls;\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});\r\n\r\nfunction IconUploadStatus(props){\r\n    console.log(props.status)\r\n    if(props.status==\"success\"){\r\n        console.log(props.status);\r\n        return (\r\n            <Tooltip title=\"Success\">\r\n                <IconButton\r\n                    aria-label=\"success\"\r\n                    size=\"small\"\r\n                    color=\"success\"\r\n                >\r\n                    <CheckCircleIcon />\r\n                </IconButton>\r\n            </Tooltip> \r\n        );\r\n    }\r\n    else if(props.status==\"failed\"){ \r\n        console.log(props.status);\r\n        return (\r\n            // <h1>failed</h1>\r\n            <Tooltip title=\"Failed\">\r\n                <IconButton\r\n                    aria-label=\"success\"\r\n                    size=\"small\"\r\n                    color=\"error\"\r\n                >\r\n                    <SmsFailedIcon/>\r\n                </IconButton>\r\n            </Tooltip> \r\n        );\r\n    }\r\n    else if(props.status==\"pending\"){\r\n        console.log(props.status);\r\n        return (\r\n            // <h1>pending</h1>\r\n            <Tooltip title=\"Pending\">\r\n                <IconButton\r\n                    aria-label=\"success\"\r\n                    size=\"small\"\r\n                    color=\"primary\"\r\n                >\r\n                    <HourglassTopIcon />\r\n                </IconButton>\r\n            </Tooltip>  \r\n        );\r\n    }\r\n    return props.status;\r\n}\r\n\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const [isEdit,setIsEdit] = useState(false);\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [selectedFileRevise, setSelectedFileRevise] = useState(null);\r\n    \r\n    const [poScopeData,setPoScopeData] = useState([]);\r\n    const [errorLogs,setErrorLogs] = useState([]);\r\n\r\n    function getPOScopeList(){\r\n        console.log(\"getscope\");\r\n        API.getPOScopeList().then(\r\n            result=>{\r\n                console.log('i am PO Scope',result)\r\n                setPoScopeData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function getErrorLog(id){\r\n\r\n        API.getErrorList(id).then(\r\n            result=>{\r\n                console.log('i am error log Scope',result)\r\n                \r\n                setErrorLogs(result);\r\n                \r\n                const data = result.map((rs)=>CreateDataPOScope.errorLog(rs.workpackageID , rs.phase, rs.packageName, rs.region, rs.dataStatus))\r\n\r\n                exportFromJSON({ data, fileName, exportType });\r\n            }\r\n        )\r\n    }\r\n\r\n    function ReviseFileUpload(id, file){\r\n        API.postRevisePOFile(id,file).then(\r\n            result=>{\r\n                console.log('i am PO Revise File',result)\r\n                window.location.reload();\r\n            }\r\n        )\r\n        setSelectedFileRevise(file);\r\n    }\r\n\r\n    function DeleteFileUpload(id, file){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            API.deleteFileUpload(id).then(\r\n                result=>{\r\n                    console.log('i am PO Delete File',result);\r\n                    \r\n                    window.location.reload();\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    function IconFileOption(props){\r\n        console.log(\"id\",props.id);\r\n        console.log(props.status)\r\n        if(props.status==\"success\"){\r\n            console.log(props.status);\r\n            return (\r\n                null\r\n            );\r\n        }\r\n        else if(props.status==\"failed\"){ \r\n            console.log(props.status);\r\n            return (\r\n                <><label title=\"upload file\" htmlFor=\"icon-button-filerevise\">\r\n                    <Input accept=\"*/*\" id=\"icon-button-filerevise\" type=\"file\" \r\n                        onChange={(e)=>ReviseFileUpload(props.id,e.target.files[0])}       \r\n                    />\r\n                    <IconButton \r\n                        color=\"primary\" \r\n                        aria-label=\"upload file\" \r\n                        component=\"span\" \r\n                    >\r\n                        <FileUploadIcon />\r\n                    </IconButton>\r\n                </label>\r\n                <Tooltip title=\"Delete File\">\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        \r\n                        onClick={() => DeleteFileUpload(props.id)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Download Log\">\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => getErrorLog(props.id)}\r\n                    >\r\n                        <SimCardDownloadIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                </>\r\n            );\r\n        }\r\n        else if(props.status==\"pending\"){\r\n            console.log(props.status);\r\n            return (\r\n                <>\r\n                    <label title=\"upload file\" htmlFor=\"icon-button-filerevise\">\r\n                        <Input accept=\"*/*\" id=\"icon-button-filerevise\" type=\"file\"                         \r\n                            onChange={(e)=>ReviseFileUpload(props.id,e.target.files[0])}   \r\n                        />\r\n                        <IconButton color=\"primary\" aria-label=\"upload file\" component=\"span\">\r\n                            <FileUploadIcon />\r\n                        </IconButton>\r\n                    </label><Tooltip title=\"Delete File\">\r\n                        <IconButton\r\n                            aria-label=\"expand row\"\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => DeleteFileUpload(props.id)}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip></>\r\n            );\r\n        }\r\n        return props.status;\r\n    }\r\n\r\n\r\n    function onFileChange(file,id){\r\n        console.log(id,file);\r\n        API.postPOFile(id,file).then(\r\n            result=>{\r\n                console.log('i am PO upload',result)\r\n            }\r\n        );\r\n        setSelectedFile(file);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                <TableCell>\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        onClick={() => setOpen(!open)}\r\n                    >\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.poDetail.cpoNo}\r\n                </TableCell>\r\n                <TableCell>{row.poDetail.cpoNoOriginal}</TableCell>\r\n                <TableCell>{moment(row.lmdt).format(\"yyyy/mm/DD\")}</TableCell>\r\n                <TableCell>{row.poDetail.projectName}</TableCell>\r\n                <TableCell>{row.scopeDetail.scopeName}</TableCell>\r\n                <TableCell>{row.totalSites}</TableCell>\r\n                <TableCell align=\"center\">\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <Input \r\n                            onChange={(e)=>onFileChange(e.target.files[0],row.poScopeId)}  \r\n                            accept=\"*/*\" id=\"icon-button-file\" type=\"file\" />\r\n                        <IconButton color=\"primary\" aria-label=\"upload file\" component=\"span\">\r\n                            <FileUploadIcon/>\r\n                        </IconButton>\r\n                    </label>\r\n                    {/* <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <EditTwoTone/>\r\n                    </IconButton> */}\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                    >\r\n                      \r\n                    </IconButton>\r\n                </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box sx={{ margin: 1 }}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                  File List\r\n                            </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>File Name</TableCell>\r\n                                        <TableCell>Upload Date</TableCell>\r\n                                        <TableCell>Total Row</TableCell>\r\n                                        <TableCell>Status</TableCell>\r\n                                        <TableCell align=\"center\">Option</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {row.getFileUploadList.map((sd) => (\r\n                                        <TableRow key={sd.poSitelistId}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {sd.filePath}\r\n                                            </TableCell>\r\n                                            <TableCell>{moment(sd.lmdt).format(\"yyyy/mm/DD\")}</TableCell>\r\n                                            <TableCell>{sd.rowCount}</TableCell>\r\n                                            <TableCell>\r\n                                                {/* {sd.uploadStatus} */}\r\n                                                <IconUploadStatus status={sd.uploadStatus} />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\">\r\n                                                <IconFileOption status={sd.uploadStatus} id={sd.poSitelistId}/>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nconst POScopeList = () => {\r\n\r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    const [isActive,setIsActive] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [poScopeData,setPoScopeData] = useState([]);\r\n    const [isActiveRow,setIsActiveRow] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  \r\n    const [cpoNoSearch,setCPONoSearch] = useState(false);\r\n\r\n    const handleSearchCPONO = () => {\r\n        console.log(\"ckick\");\r\n        setCPONoSearch(true);\r\n    }\r\n\r\n    const handleCancelSearch =() =>{\r\n        setCPONoSearch(false);\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n  \r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    function createData(poScopeId, totalSites, cpoId, cpoNo, cpoNoOriginal, projectName, modifiedUser){\r\n        return{\r\n            poScopeId\r\n            ,totalSites\r\n            ,cpoId\r\n            ,cpoNo\r\n            ,cpoNoOriginal\r\n            ,projectName\r\n            ,modifiedUser\r\n        }\r\n    }\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        dispatch(setIsNew(false));;\r\n        dispatch(setIsEdit(false));;\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        dispatch(setIsNew(true));\r\n    };\r\n\r\n    const handleKeyDownSearch = (e) => {\r\n        if (e.key === 'Enter') {\r\n            console.log(e.target.value);\r\n        }\r\n    }\r\n    \r\n    function getPOScopeList(){\r\n        console.log(\"getscope\");\r\n        API.getPOScopeList().then(\r\n            result=>{\r\n                console.log('i am PO Scope',result)\r\n                setPoScopeData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n\r\n\r\n    function getPOScopeListANT(){\r\n        console.log(\"getscope\");\r\n        \r\n        API.getPOScopeList().then(\r\n            result=>{\r\n                const data = result.map((rs)=>CreateDataPOScope.poScopeData(rs.poScopeId\r\n                    , rs.totalSites\r\n                    , rs.poDetail.cpoId\r\n                    , rs.poDetail.cpoNo\r\n                    , rs.poDetail.cpoNoOriginal\r\n                    , rs.poDetail.projectName\r\n                    , rs.scopeDetail.scopeId\r\n                    , rs.scopeDetail.scopeName\r\n                    , rs.lmdt))\r\n                console.log(\"dataant\", data)\r\n                setPoScopeData(result);\r\n            }\r\n        )\r\n    } \r\n\r\n    function refreshData(){\r\n        getPOScopeList();\r\n        getPOScopeListANT();\r\n        //getOrderType();\r\n        //getSubcon();\r\n    }\r\n\r\n    function saveClick(scopeId){\r\n        const body ={\r\n            \"ScopeId\":scopeId,\r\n            \"ScopeName\": scopeName,\r\n            \"ScopeDesc\": scopeDesc,\r\n            \"CMINFO\": {\r\n                \"LMBY\": 0          \r\n            }\r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putmScope(body).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function handleIsActiveClick(cpoId, e ){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            const body={\r\n                \"Id\":cpoId,\r\n                \"ActStatus\":e.target.checked,\r\n                \"LMBY\":0  \r\n            }\r\n            console.log(body);\r\n            API.putPOActivation(body).then(\r\n                result=>{\r\n                    console.log(\"put scope: \", result);\r\n                    if(result.status==\"success\")\r\n                    {\r\n                        toast.success(result.message);\r\n                        refreshData();\r\n                        //window.location.reload();\r\n                    }\r\n                    else{\r\n                        toast.error(result.message);\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    const handleSaveFromPanel = () =>{\r\n        setShow(false);\r\n        refreshData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n        setTimeout(()=>{                        \r\n\r\n            var t = $('#tblScope').DataTable( {\r\n                \"columnDefs\": [ \r\n                    {width: '9%', targets: 4}\r\n                    \r\n                ],\r\n                \"order\": [[ 1, 'asc' ]],\r\n                \"scrollX\": false,\r\n                orderCellsTop: true,\r\n                responsive:true,\r\n                autoWidth: false,\r\n                search:true\r\n            } );\r\n\r\n            t.on( 'order.dt search.dt', function () {\r\n                t.column(0, {search:'applied', order:'applied'}).nodes().each( function (cell, i) {\r\n                    cell.innerHTML = i+1;\r\n                } );\r\n            } ).draw();\r\n\r\n        }, 1000);\r\n    },[])\r\n    \r\n    return (\r\n        <><div className=\"card card-primary\">\r\n            <div className=\"card-header align-middle\">\r\n                <h3 className=\"card-title\">PO List</h3>\r\n                <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                    <i class=\"fas fa-plus\"></i>\r\n                </a>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"collapsible table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell />\r\n                                    <TableCell>\r\n                                        {cpoNoSearch ? \r\n                                            <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\r\n                                                <InputLabel htmlFor=\"outlined-adornment-password\">Search</InputLabel>\r\n                                                <OutlinedInput\r\n                                                    id=\"outlined-adornment-search-cancel\"\r\n                                                    // label=\"Search\"\r\n                                                    // type={values.showPassword ? 'text' : 'password'}\r\n                                                    // value={values.password}\r\n                                                    // onChange={handleChange('password')}\r\n                                                    size=\"small\"\r\n                                                    onKeyDown={handleKeyDownSearch}\r\n                                                    endAdornment={\r\n                                                        <InputAdornment position=\"end\">\r\n                                                            <IconButton\r\n                                                                aria-label=\"toggle password visibility\"\r\n                                                                onClick={handleCancelSearch}\r\n                                                                // onMouseDown={handleMouseDownPassword}\r\n                                                                edge=\"end\"\r\n                                                            >\r\n                                                                <CloseIcon />\r\n                                                            </IconButton>\r\n                                                        </InputAdornment>\r\n                                                    }\r\n                                                    label=\"Search\"\r\n                                                />\r\n                                            </FormControl>\r\n                                            : <span>CPO No\r\n                                                <span class=\"float-right\">\r\n                                                    <IconButton aria-label=\"search\"\r\n                                                        align=\"right\"\r\n                                                        onClick={handleSearchCPONO}\r\n                                                    >\r\n                                                        <SearchIcon />\r\n                                                    </IconButton>\r\n                                                </span>    \r\n                                            </span>}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    CPO No Original\r\n                                        <span class=\"float-right\">\r\n                                            <IconButton aria-label=\"search\"\r\n                                                align=\"right\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    CPO Date\r\n                                        <span class=\"float-right\">\r\n                                            <IconButton aria-label=\"search\"\r\n                                                align=\"right\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                    Project Name\r\n                                        <span class=\"float-right\">\r\n                                            <IconButton aria-label=\"search\"\r\n                                                align=\"right\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span></TableCell>\r\n                                    <TableCell>\r\n                                    Scope\r\n                                        <span class=\"float-right\">\r\n                                            <IconButton aria-label=\"search\"\r\n                                                align=\"right\"\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </IconButton>\r\n                                        </span></TableCell>\r\n                                    <TableCell>Total Sites</TableCell>\r\n                                    <TableCell align=\"center\">Option</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {poScopeData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                                    <Row key={row.name} row={row} />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25, 100]}\r\n                        component=\"div\"\r\n                        count={poScopeData.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </div>\r\n        </div><Modal\r\n            size=\"lg\"\r\n            show={show}\r\n            onHide={handleClose}\r\n            backdrop=\"static\"\r\n            keyboard={false}\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Add New PO</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <POScopePanel/>\r\n            </Modal.Body>\r\n            {/* <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={saveClick}>Save</Button>\r\n                </Modal.Footer> */}\r\n        </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default POScopeList;","import React, {Component,useState,useEffect} from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport API  from '../../utils/apiServices';\r\n\r\nconst ModalUpload = ({poScopeId,cpoNo,projectName}) => {\r\n    \r\n    const [fileUpload, setFileUpload] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    \r\n    const props = {\r\n        onRemove: () => {\r\n            setFileUpload(null);\r\n            return fileUpload\r\n        },\r\n        beforeUpload: file => {\r\n            setFileUpload(file);\r\n            return false;\r\n        },\r\n        fileUpload,\r\n    };\r\n\r\n\r\n    const handleUpload = () => {\r\n        setUploading(true)\r\n        \r\n        API.postPOFile(poScopeId,fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    message.success('upload successfully.');\r\n                    window.location.reload()\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    message.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[fileUpload])\r\n\r\n    return (\r\n        <div>\r\n            <p><b>CPO NO :</b>{cpoNo}</p>\r\n            <p><b>Project Name :</b>{projectName}</p>\r\n            <Upload {...props}>\r\n                <Button icon={<UploadOutlined />}>Select File</Button>\r\n            </Upload>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={handleUpload}\r\n                disabled={fileUpload == null}\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n            >\r\n                {uploading ? 'Uploading' : 'Start Upload'}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalUpload;","import React, {Component,useState,useEffect} from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport API  from '../../utils/apiServices';\r\n\r\nconst ModalUpload = ({poSitelistId,cpoNo,projectName,fileName}) => {\r\n    \r\n    const [fileUpload, setFileUpload] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    \r\n    const props = {\r\n        onRemove: () => {\r\n            setFileUpload(null);\r\n            // message.success(\"sininininsinisnisns\")\r\n            // this.setState(state => {\r\n            //     const index = state.fileList.indexOf(file);\r\n            //     const newFileList = state.fileList.slice();\r\n            //     newFileList.splice(index, 1);\r\n            //     return {\r\n            //         fileList: newFileList,\r\n            //     };\r\n            // });\r\n        },\r\n        beforeUpload: file => {\r\n            setFileUpload(file);\r\n            // this.setState(state => ({\r\n            //     fileList: [...state.fileList, file],\r\n            // }));\r\n            return false;\r\n        },\r\n        fileUpload,\r\n    };\r\n\r\n\r\n    const handleUpload = () => {\r\n        //const { fileList } = fileUpload;\r\n        //const formData = new FormData();\r\n        //fileList.forEach(file => {\r\n        //    formData.append('files[]', file);\r\n        //});\r\n        setUploading(true)\r\n        \r\n        API.postRevisePOFile(poSitelistId,fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    window.location.reload()\r\n                    message.success('upload successfully.');\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    message.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n\r\n    // You can use any AJAX library you like\r\n    //     fetch('https://www.mocky.io/v2/5cc8019d300000980a055e76', {\r\n    //         method: 'POST',\r\n    //         body: formData,\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(() => {\r\n    //             this.setState({\r\n    //                 fileList: [],\r\n    //             });\r\n    //             message.success('upload successfully.');\r\n    //         })\r\n    //         .catch(() => {\r\n    //             message.error('upload failed.');\r\n    //         })\r\n    //         .finally(() => {\r\n    //             this.setState({\r\n    //                 uploading: false,\r\n    //             });\r\n    //         });\r\n    // };\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[fileUpload])\r\n\r\n    return (\r\n        <div>\r\n            <p><b>CPO NO :</b></p><p>{cpoNo}</p>\r\n            <p><b>Project Name :</b></p><p>{projectName}</p>\r\n            <p><b>File Name :</b></p><p>{fileName}</p>\r\n            <Upload {...props}>\r\n                <Button icon={<UploadOutlined />}>Select File</Button>\r\n            </Upload>\r\n            <Button\r\n                type=\"primary\"\r\n                onClick={handleUpload}\r\n                disabled={fileUpload == null}\r\n                loading={uploading}\r\n                style={{ marginTop: 16 }}\r\n            >\r\n                {uploading ? 'Uploading' : 'Start Upload'}\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalUpload;","/* eslint-disable react/react-in-jsx-scope */\r\nimport React, {useEffect, useState} from 'react';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nconst SearchColumn = (index) => {\r\n    const getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n            \r\n            return <Input \r\n                    \r\n                autoFocus \r\n                \r\n                placeHolder='search'\r\n                value={selectedKeys[0]}\r\n                onChange={(e)=>{\r\n                    setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                }}\r\n                style={{ marginBottom: 8, display: 'block' }}\r\n                onPressEnter={()=>{\r\n                    confirm()\r\n                }}\r\n                onBlur={()=>{\r\n                    confirm()\r\n                }}\r\n            ></Input>\r\n        },\r\n        filterIcon: () => {\r\n            return <SearchOutlined/>\r\n        },\r\n        onFilter: (value, record) =>\r\n            record[dataIndex]\r\n                ?record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n                : ''\r\n    });\r\n\r\n    return (\r\n        getColumnSearchProps(index)\r\n    )\r\n}\r\n\r\nconst Search = (index) => SearchColumn(index);\r\n\r\nexport default Search;","/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable no-else-return */\r\n/* eslint-disable react/jsx-fragments */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/no-unescaped-entities */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable react/react-in-jsx-scope */\r\n/* eslint-disable react/sort-comp */\r\n/* eslint-disable react/no-unused-class-component-methods */\r\n/* eslint-disable prettier/prettier */\r\n/* eslint-disable prefer-template */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable react/no-unused-state */\r\n/* eslint-disable react/prefer-stateless-function */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport ModalBS from 'react-bootstrap/Modal';\r\nimport moment from 'moment';\r\nimport API  from '../../utils/apiServices';\r\nimport POScopePanel from './POScopePanel';\r\nimport ModalUpload from './ModalUpload';\r\nimport ModalUploadRevise from './ModalUploadRevise';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { setIsEdit, setIsNew } from '@app/store/reducers/scope';\r\nimport {toast} from 'react-toastify';\r\nimport {IconButton, TextField}  from '@mui/material/';\r\nimport {Modal,message,Upload,Typography, Table, Button, Space,Card,Tooltip,Row,Col,Title } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { CloudUploadOutlined, UploadOutlined,DownloadOutlined,PlusOutlined,FileExcelOutlined,CloseOutlined, EditOutlined,DeleteOutlined,CheckOutlined  } from '@ant-design/icons';\r\nimport {variables} from '../../Variables';\r\nimport CreateDataPOScope from './DataGenerator';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputLabel from '@mui/material/InputLabel';\r\n// import Seacrh from '@app/components/searchcolumn/SearchColumn';\r\nimport { styled } from '@mui/material/styles';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport HourglassTopIcon from '@mui/icons-material/HourglassTop';\r\nimport SmsFailedIcon from '@mui/icons-material/SmsFailed';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport exportFromJSON from 'export-from-json'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nconst POScopeListAnt = () => {\r\n    const Input = styled('input')({\r\n        display: 'none',\r\n    });\r\n    const token = localStorage.getItem('token'); \r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n    const [selectedCPONo,setSelectedCPONo] = useState(\"\");\r\n    const [selectedProjectName,setSelectedProjectName] = useState(\"\");\r\n    const [selectedFileName,setSelectedFileName] = useState(\"\");\r\n    const [isActive,setIsActive] = useState(\"\");\r\n    const { Title } = Typography;\r\n    const [show, setShow] = useState(false);\r\n    const [poScopeData,setPoScopeData] = useState([]);\r\n    const [selectedPOScopeId,setSelectedPOScopeId] = useState(0);\r\n    const [selectedFileRevise, setSelectedFileRevise] = useState(null);\r\n    const [isUploadFile, setIsUploadFile] = useState(false);\r\n    const [isUploadFileRevise, setIsUploadFileRevise] = useState(false);\r\n\r\n    const [errorLogs,setErrorLogs] = useState([]);\r\n    const dispatch = useDispatch();\r\n    const baseURL = variables.API_URL;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [poScopeIdUpload, setPOScopeIdUpload] = useState(0);\r\n    const [poSitelistIdUpload, setPOSitelistId] = useState(0);\r\n\r\n    function getPOScopeListANT(){\r\n        API.getPOScopeList().then(\r\n            result=>{\r\n                console.log(\"result po scope\",result)\r\n                // const data = result.map((rs)=>CreateDataPOScope.errorLog(rs.workpackageID , rs.phase, rs.packageName, rs.region, rs.dataStatus))\r\n\r\n                const data = result.map((rs)=>CreateDataPOScope.poScopeData(\r\n                    rs.poScopeId\r\n                    , rs.totalSites\r\n                    , rs.poDetail.cpoId\r\n                    , rs.poDetail.cpoNo\r\n                    , rs.poDetail.cpoNoOriginal\r\n                    , rs.poDetail.projectName\r\n                    , rs.scopeDetail.scopeId\r\n                    , rs.scopeDetail.scopeName\r\n                    , rs.lmdt)) \r\n\r\n                setPoScopeData(data);\r\n            }\r\n        )\r\n    } \r\n\r\n    function refreshPage(){\r\n        getPOScopeListANT()\r\n    }\r\n\r\n    function onFileChange(file){\r\n        console.log(\"upload file \",file, poScopeIdUpload);\r\n        // setIsLoading(true);\r\n        // API.postPOFile(id,file).then(\r\n        //     result=>{\r\n        //         setIsLoading(false);\r\n        //         toast.success(\"Uploading File Success\")\r\n        //         setSelectedPOScopeId(0);\r\n        //     }\r\n        // );\r\n        // setSelectedFile(file);\r\n    }\r\n\r\n    function getErrorLog(id){\r\n\r\n        API.getErrorList(id).then(\r\n            result=>{\r\n                console.log('i am error log Scope',result)\r\n                \r\n                setErrorLogs(result);\r\n                \r\n                const data = result.map((rs)=>CreateDataPOScope.errorLog(rs.workpackageID , rs.phase, rs.packageName, rs.region, rs.dataStatus))\r\n                const exportType =  exportFromJSON.types.xls;\r\n                const fileName = `errorlog_${data.WPID}_${data.Phase}`;\r\n                exportFromJSON({ data, fileName, exportType });\r\n            }\r\n        )\r\n    }\r\n\r\n    function ReviseFileUpload(id, file){\r\n        API.postRevisePOFile(id,file).then(\r\n            result=>{\r\n                window.location.reload();\r\n            }\r\n        )\r\n        setSelectedFileRevise(file);\r\n    }\r\n\r\n    function DeleteFileUpload(id, file){\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            API.deleteFileUpload(id).then(\r\n                result=>{\r\n                    console.log('i am PO Delete File',result);\r\n                    \r\n                    window.location.reload();\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    function IconUploadStatus(props){\r\n        console.log(props.status)\r\n        if(props.status==\"success\"){\r\n            console.log(props.status);\r\n            return (\r\n                <Tooltip title=\"Success\">\r\n                    <IconButton\r\n                        aria-label=\"success\"\r\n                        size=\"small\"\r\n                        color=\"success\"\r\n                    >\r\n                        <CheckCircleIcon />\r\n                    </IconButton>\r\n                </Tooltip> \r\n            );\r\n        }\r\n        else if(props.status==\"failed\"){ \r\n            console.log(props.status);\r\n            return (\r\n                // <h1>failed</h1>\r\n                <Tooltip title=\"Failed\">\r\n                    <IconButton\r\n                        aria-label=\"success\"\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                    >\r\n                        <SmsFailedIcon/>\r\n                    </IconButton>\r\n                </Tooltip> \r\n            );\r\n        }\r\n        else if(props.status==\"pending\"){\r\n            console.log(props.status);\r\n            return (\r\n                // <h1>pending</h1>\r\n                <Tooltip title=\"Pending\">\r\n                    <IconButton\r\n                        aria-label=\"success\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                    >\r\n                        <HourglassTopIcon />\r\n                    </IconButton>\r\n                </Tooltip>  \r\n            );\r\n        }\r\n        return props.status;\r\n    }\r\n    const handleUploadFile = (poScopeId,cpoNo,projectName) =>{\r\n        setIsUploadFile(true);\r\n        setSelectedCPONo(cpoNo);\r\n        setSelectedProjectName(projectName);\r\n        setPOScopeIdUpload(poScopeId);\r\n        console.log(\"idupload:\",poScopeId);\r\n    }\r\n    const handleCancelUpload = () =>{\r\n        setIsUploadFile(false);\r\n    }\r\n    const handleUploadFileRevise = (poSitelistId) =>{\r\n        setIsUploadFileRevise(true);\r\n        setPOSitelistId(poSitelistId);\r\n        console.log(\"idupload:\",poSitelistId);\r\n    }\r\n    const handleCancelUploadRevise = () =>{\r\n        setIsUploadFileRevise(false);\r\n    }\r\n\r\n    function IconFileOption(props){\r\n        console.log(\"id\",props.id);\r\n        console.log(\"fileName\",props.fileName)\r\n        setSelectedFileName(props.fileName);\r\n        if(props.status==\"success\"){\r\n            console.log(props.status);\r\n            return (\r\n                null\r\n            );\r\n        }\r\n        else if(props.status==\"failed\"){ \r\n            console.log(props.status);\r\n            return (\r\n                <><label htmlFor=\"icon-button-file\">\r\n                    <IconButton \r\n                        size='small' \r\n                        color=\"primary\" \r\n                        aria-label=\"upload file\"\r\n                        component=\"span\"\r\n                        onClick={()=>handleUploadFileRevise(props.id)}>\r\n                        <UploadOutlined />\r\n                    </IconButton>\r\n                </label>\r\n                <Tooltip title=\"Delete File\">\r\n                    <IconButton \r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        \r\n                        onClick={() => DeleteFileUpload(props.id)}\r\n                    >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Tooltip title=\"Download Log\">\r\n                    <IconButton\r\n                        aria-label=\"expand row\"\r\n                        size=\"small\"\r\n                        color=\"error\"\r\n                        onClick={() => getErrorLog(props.id)}\r\n                    >\r\n                        <SimCardDownloadIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                </>\r\n            );\r\n        }\r\n        else if(props.status==\"pending\"){\r\n            console.log(props.status);\r\n            return (\r\n                <>\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton \r\n                            size='small' \r\n                            color=\"primary\" \r\n                            aria-label=\"upload file\"\r\n                            component=\"span\"\r\n                            onClick={()=>handleUploadFileRevise(props.id)}>\r\n                            <UploadOutlined />\r\n                        </IconButton>\r\n                    </label>\r\n                    <Tooltip title=\"Delete File\">\r\n                        <IconButton\r\n                            aria-label=\"expand row\"\r\n                            size=\"small\"\r\n                            color=\"error\"\r\n                            onClick={() => DeleteFileUpload(props.id)}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Tooltip></>\r\n            );\r\n        }\r\n        return props.status;\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'poScopeId',\r\n            key: 'poScopeId',\r\n            // render: text => <a>{text}</a>,\r\n        },\r\n        {\r\n            title: 'CPO No',\r\n            dataIndex: 'cpoNo',\r\n            key: 'cpoNo',\r\n            ...Search('cpoNo'),\r\n        },\r\n        {\r\n            title: 'CPO No Original',\r\n            dataIndex: 'cpoNoOriginal',\r\n            key: 'cpoNoOriginal',\r\n            ...Search('cpoNoOriginal'),\r\n        },\r\n        {\r\n            title: 'CPO Date',\r\n            dataIndex: 'lmdt',\r\n            key: 'lmdt',\r\n            ...Search('lmdt'),\r\n        },\r\n        {\r\n            title: 'Project Name',\r\n            dataIndex: 'projectName',\r\n            key: 'projectName',\r\n            ...Search('projectName'),\r\n        },\r\n        {\r\n            title: 'Scope',\r\n            dataIndex: 'scopeName',\r\n            key: 'scopeName',\r\n            ...Search('scopeName'),\r\n        },\r\n        {\r\n            title: 'Total Sites',\r\n            dataIndex: 'totalSites',\r\n            key: 'totalSites',\r\n            ...Search('totalSites'),\r\n        },\r\n        {\r\n            title:\"Action\",\r\n            align:'center',\r\n            render:(record)=>{\r\n                return (\r\n                    <label htmlFor=\"icon-button-file\">\r\n                        <IconButton \r\n                            size='small' \r\n                            color=\"primary\" \r\n                            aria-label=\"upload file\"\r\n                            component=\"span\"\r\n                            onClick={()=>handleUploadFile(record.poScopeId,record.cpoNo,record.projectName)}>\r\n                            <UploadOutlined />\r\n                        </IconButton>\r\n                    </label>\r\n                )\r\n            }\r\n        }\r\n        \r\n    ];\r\n    const columnsFile =[\r\n        {\r\n            title:\"File Name\",\r\n            dataIndex:\"filePath\",\r\n        },\r\n        {\r\n            title:\"Upload Date\",\r\n            dataIndex:\"uploadDate\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.uploadDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title:\"Total Row\",\r\n            dataIndex:\"rowCount\",\r\n        },\r\n        {\r\n            title:\"Status\",\r\n            render:(record)=>{\r\n                return (\r\n                    <IconUploadStatus status={record.uploadStatus} />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title:\"Option\",\r\n            render:(record)=>{\r\n                return (\r\n                    <IconFileOption status={record.uploadStatus} id={record.poSitelistId} fileName={record.filePath}/>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n\r\n    const handleClose = () => \r\n    {\r\n        setShow(false) \r\n        dispatch(setIsNew(false));;\r\n        dispatch(setIsEdit(false));;\r\n    }\r\n\r\n    const handleShowAdd = () => {\r\n        setShow(true);\r\n        dispatch(setIsNew(true));\r\n    };\r\n\r\n    const handleKeyDownSearch = (e) => {\r\n        if (e.key === 'Enter') {\r\n            console.log(e.target.value);\r\n        }\r\n    }\r\n\r\n    const [fileDatas,setFileDatas] = useState([]);\r\n\r\n    const getFileList = (data) =>{\r\n        console.log(\"rowwwwww\",data);\r\n        setSelectedPOScopeId(data.poScopeId);\r\n        setSelectedProjectName(data.projectName);\r\n        setSelectedCPONo(data.cpoNo);\r\n        API.getPOScopeListFile(data.poScopeId).then(\r\n            result=>{\r\n                const filedata = result.map((rs)=>CreateDataPOScope.fileListData(\r\n                    rs.poScopeDetail.poScopeId\r\n                    ,rs.poSitelistId\r\n                    ,rs.filePath\r\n                    ,rs.fullFilePath\r\n                    ,rs.uploadStatus\r\n                    ,rs.lmdt\r\n                    ,rs.rowCount\r\n                ))\r\n                setFileDatas(filedata);\r\n                console.log(\"fileData\",filedata);\r\n            }\r\n        )\r\n    }\r\n\r\n    function refreshData(){\r\n        // getPOScopeList();\r\n        getPOScopeListANT();\r\n        //getOrderType();\r\n        //getSubcon();\r\n    }\r\n\r\n    function saveClick(scopeId){\r\n        const body ={\r\n            \"ScopeId\":scopeId,\r\n            \"ScopeName\": scopeName,\r\n            \"ScopeDesc\": scopeDesc,\r\n            \"CMINFO\": {\r\n                \"LMBY\": 0          \r\n            }\r\n        }\r\n        console.log(\"saveclick\",body);\r\n        API.putmScope(body).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    refreshData();\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n    },[poScopeIdUpload])\r\n    \r\n    return (\r\n        <div>\r\n            {isLoading ? <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={isLoading}\r\n                // onClick={handleClose}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n                :\r\n                <>\r\n                    {/* <a href='javascript:void(0)' onClick={handleShowAdd} class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a> */}\r\n                    <Row>\r\n                        <Col md={16} sm={24} >\r\n                            <Title level={5}>PO List</Title>\r\n                        </Col>\r\n                        <Col md={8} sm={24} >\r\n                            <div className='float-right'>\r\n                                <Tooltip title=\"Add Material\">\r\n                                    <IconButton size=\"small\" color=\"primary\" onClick={handleShowAdd}>\r\n                                        <PlusOutlined />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table \r\n                        columns={columns} \r\n                        dataSource={poScopeData}\r\n                        size=\"small\" \r\n                        pagination={{\r\n                            pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                            showSizeChanger: true,\r\n                            position: [\"bottomLeft\"],\r\n                        }}\r\n                        scroll={{ x: '100%' }}\r\n                        expandable={{\r\n                            expandedRowRender: (record) => (\r\n                                <Table \r\n                                    scroll={{ x: '100%' }}\r\n                                    columns={columnsFile} \r\n                                    dataSource={fileDatas} \r\n                                    pagination={false}\r\n                                    size=\"small\" \r\n                                    bordered\r\n                                />\r\n                            ),\r\n                            rowExpandable: (record) => selectedPOScopeId == 0 ? record.poScopeId != selectedPOScopeId : record.poScopeId == selectedPOScopeId,\r\n                            onExpand: (expanded, record) =>\r\n                                expanded ?\r\n                                    getFileList(record)\r\n                                    :\r\n                                    setSelectedPOScopeId(0)\r\n                        }} \r\n                    />        \r\n                    <Modal title=\"Add New PO Scope\"\r\n                        visible={show}\r\n                        //onOk={handleOKCancelTask}\r\n                        onCancel={handleClose}\r\n                        // confirmLoading={cancelLoading}\r\n                        destroyOnClose={true}\r\n                        footer={null}\r\n                    >\r\n                        <POScopePanel/>\r\n                    </Modal>\r\n                    <Modal title=\"Upload File\"\r\n                        visible={isUploadFile}\r\n                        //onOk={handleOKCancelTask}\r\n                        onCancel={handleCancelUpload}\r\n                        // confirmLoading={cancelLoading}\r\n                        destroyOnClose={true}\r\n                        footer={null}\r\n                    >\r\n                        <ModalUpload poScopeId={poScopeIdUpload} cpoNo={selectedCPONo} projectName={selectedProjectName}  />\r\n                    </Modal>\r\n                    <Modal title=\"Upload File Revise\"\r\n                        visible={isUploadFileRevise}\r\n                        //onOk={handleOKCancelTask}\r\n                        onCancel={handleCancelUploadRevise}\r\n                        // confirmLoading={cancelLoading}\r\n                        destroyOnClose={true}\r\n                        footer={null}\r\n                    >\r\n                        {/* <p>{poScopeIdUpload}</p> */}\r\n                        <ModalUploadRevise poSitelistId={poSitelistIdUpload} cpoNo={selectedCPONo} projectName={selectedProjectName} fileName={selectedFileName} />\r\n                    </Modal>\r\n                </>\r\n            }\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default POScopeListAnt;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport POScopeList from './POScopeList';\r\nimport POScopeListAnt from './POScopeListAnt';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\n\r\n\r\nconst POCreation = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"PO Scope\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : \r\n                <>\r\n                    <POScopeListAnt />\r\n                    {/* <POScopeList /> */}\r\n                </>\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default POCreation;\r\n","export const setDataSite = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_SITE\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataSite = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_SITE\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataSite = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_SITE\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataSiteSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_SITE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const getSiteId = (payload) => {\r\n    return {\r\n        type: \"GET_SITE_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataSite = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_SITE\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataSiteSuccess = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_SITE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const editActivationSite = (payload) => {\r\n    return {\r\n        type: \"EDIT_ACTIVATION_SITE\",\r\n        payload,\r\n    };\r\n};\r\nexport const editActivationSiteSuccess = (payload) => {\r\n    return {\r\n        type: \"EDIT_ACTIVATION_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getIdActive = (payload) => {\r\n    return {\r\n        type: \"GET_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const getActiveStatus = (payload) => {\r\n    return {\r\n        type: \"GET_ACTIVE_STATUS\",\r\n        payload,\r\n    };\r\n};","/* eslint-disable no-shadow */\r\n/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-empty */\r\n/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { getDataSite, getSiteId, postDataSite,editDataSite,getIdActive,getActiveStatus,editActivationSite } from '@app/store/action/siteConditionAction'\r\nimport {Table,Input,Button,Modal,Switch} from 'antd'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled} from '@ant-design/icons'\r\nimport Form from 'react-bootstrap/Form';\r\nimport moment from 'moment'\r\nimport \"./index.css\"\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nexport default function TableSiteCondition() {\r\n    const dispatch = useDispatch()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [siteName,setSiteName] = useState('');\r\n    const [isModalEditVisible, setIsModalEditVisible] = useState(false);\r\n    const [id,setId] = useState('')\r\n    const [page,setPage] = useState(1)\r\n    const [pageSize,setPageSize] = useState(1)\r\n\r\n    const activeStat = useSelector(state => state.siteConditionReducer.activestatus)\r\n    const idDataSite = useSelector(state => state.siteConditionReducer.id)\r\n\r\n    const showModalEdit = () => {\r\n        setIsModalEditVisible(true);\r\n    };\r\n\r\n    const getId = (record) => {\r\n        setId(record)\r\n        showModalEdit()\r\n        console.log(id,'id')\r\n        \r\n    }\r\n    const handleEdit = () => {\r\n        getId()\r\n        dispatch(editDataSite({siteConditionId:id,condition:siteName}))\r\n        \r\n    }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n \r\n\r\n    const handlePost = () => {\r\n        dispatch(postDataSite({condition : siteName,isActive}))\r\n    }\r\n\r\n    const handleOk = () => {\r\n        \r\n        handlePost()\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancelEdit = () => {\r\n        setIsModalEditVisible(false);\r\n    };\r\n    const handleEditActivation = () => {\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            dispatch(editActivationSite({\r\n                \"Id\":idDataSite,\r\n                \"ActStatus\":!activeStat\r\n            }))\r\n        }\r\n    }\r\n\r\n    const getIdAndActive = (e,active) => {\r\n        dispatch(getActiveStatus(active))\r\n        dispatch(getIdActive(e))\r\n        \r\n        \r\n        // setIsActive(active)\r\n        handleEditActivation()\r\n        console.log(!activeStat,'tes sdkn')\r\n    }\r\n\r\n \r\n\r\n    const columns = [\r\n        {\r\n            title:\"No\",\r\n            key:\"index\",\r\n            render:(value, item, index) => (page )  + index\r\n        },\r\n        {\r\n            title : \"Condition\",\r\n            dataIndex:'condition',\r\n            sorter:(record1,record2)=>{\r\n                return record1.scopeId > record2.scopeId\r\n            },\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n                return record.condition.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            \r\n        },\r\n        {\r\n            title : \"Is Active\",\r\n            dataIndex:'isActive',\r\n            key: 'isActive',\r\n            render: (active,e,val) => (\r\n                <Switch\r\n                    \r\n                    // id={dataScope.map(()=>val.scopeOrderTypeId)}\r\n                    defaultChecked={active}\r\n                    onChange={()=>getIdAndActive(e.siteConditionId,!active)}\r\n                />)\r\n        },\r\n        {\r\n            title : \"Action\",\r\n            render:(record)=>{\r\n                return <EditOutlined onClick={(e) => getId(record.siteConditionId)}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getDataSite())\r\n    },[dispatch])\r\n\r\n   \r\n    const data = useSelector(state=>state.siteConditionReducer.dataSiteCondition)\r\n    const loading = useSelector(state=>state.siteConditionReducer.isLoading)\r\n    return (\r\n        <div>\r\n            <div className=\"card card-primary\">\r\n                <div className=\"card-header align-middle\">\r\n                    <h3 className=\"card-title\">Site Condition List</h3>\r\n                    <a title=\"create new dop\" onClick={showModal} class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a>\r\n                </div>\r\n                <Table\r\n                    // rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                    responsive\r\n                    rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                    dataSource={data}\r\n                    columns={columns}\r\n                    key='siteConditionId'\r\n                    \r\n                    // eslint-disable-next-line react/jsx-boolean-value\r\n                    pagination={{\r\n                        current:page,\r\n                       \r\n                        pageSizeOptions: ['5','10','20','30', '40'],\r\n                        showSizeChanger: true,\r\n                        position: [\"bottomLeft\"],\r\n                      \r\n                       \r\n                        \r\n                    }}\r\n                    \r\n                    style={{marginTop : 36}}\r\n                    size='small'\r\n                    bordered\r\n                    loading={loading ? (true):(false)}    \r\n                \r\n                />\r\n            </div>\r\n          \r\n            <Modal \r\n                title=\"Add Condition\" \r\n                visible={isModalVisible} \r\n                onCancel = {handleCancel}\r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleOk} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Site Name </span>\r\n                                <input value={siteName} onChange={(e) => setSiteName(e.target.value)} placeholder='Add Site Name' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal \r\n                title=\"Edit Condition\" \r\n                visible={isModalEditVisible} \r\n                onCancel = {()=>{\r\n                    handleCancelEdit()\r\n                }}\r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleEdit} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={handleCancelEdit}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Site Name </span>\r\n                                <input value={siteName} onChange={(e) => setSiteName(e.target.value)} placeholder='Edit Site Name' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n           \r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport mSiteCondition from '@app/pages/mSiteCondition/index';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TableSiteCondition from '@app/components/mSiteCondition/tableSiteCondition/index';\r\n\r\nconst siteCondition = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Site Condition\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {/* <p>is loading :{isLoading}</p> */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : <TableSiteCondition />\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default siteCondition;\r\n","export const setDataScopeOrder = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_SCOPE_ORDER\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataScopeOrder = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_SCOPE_ORDER\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataScope = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_SCOPE\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataScopeSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_SCOPE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const getSiteId = (payload) => {\r\n    return {\r\n        type: \"GET_SITE_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataScope = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_SCOPE\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataScopeSuccess = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_SCOPE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOrderType = (payload) => {\r\n    return {\r\n        type:\"GET_DATA_ORDER\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const setOrderType = (payload) => {\r\n    return {\r\n        type:\"SET_DATA_ORDER\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const getScopeId = (payload) => {\r\n    return {\r\n        type:\"GET_SCOPE_ID\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const getActiveStatus = (payload) => {\r\n    return {\r\n        type:\"GET_ACTIVE_STATUS\",\r\n        payload,\r\n    };\r\n};\r\nexport const editScope = (payload) => {\r\n    return {\r\n        type: \"EDIT_SCOPE\",\r\n        payload,\r\n    };\r\n};\r\nexport const editScopeSuccess = (payload) => {\r\n    return {\r\n        type: \"EDIT_SCOPE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getScopeOrderId = (payload) => {\r\n    return {\r\n        type: \"GET_SCOPE_ORDER_ID\",\r\n        payload,\r\n    };\r\n};","/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable no-alert */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { editDataScope, getActiveStatus, getDataScopeOrder,getOrderType, getScopeId, postDataScope,getScopeOrderId,editScope } from '@app/store/action/scopeOrderAction'\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Table,Button,Modal,Switch,Input} from 'antd'\r\nimport Form from 'react-bootstrap/Form';\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled} from '@ant-design/icons'\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport API from '@app/utils/apiServices';\r\n\r\n\r\n\r\nexport default function TableScopeOrder() {\r\n    const dispatch = useDispatch()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isModalEditVisible, setIsModalEditVisible] = useState(false);\r\n    const selectScope = useSelector(state=>state.scopeReducer.dataScope)\r\n\r\n   \r\n    const [selectedScope,setSelectedScope] = useState(\"\");\r\n\r\n    const [scopeName,setScopeName] = useState(\"\");\r\n    const [scopeDesc,setScopeDesc] = useState(\"\");\r\n\r\n    const [selectedOrder,setSelectedOrder] = useState(\"\");\r\n    const [orderName,setOrderName] = useState(\"\");\r\n    const [orderCode,setOrderCode] = useState(\"\");\r\n    const [orderQstring,setOrderQstring] = useState(\"\");\r\n    const [isActive,setIsActive] = useState('')\r\n   \r\n    const dataScope = useSelector(state=>state.scopeOrderReducer.dataScopeOrderType)\r\n    const idDataScope = useSelector(state=>state.scopeOrderReducer.scopeOrderId)\r\n    const dataScopeOrderTypeId = useSelector(state=>state.scopeOrderReducer.scopeOrderId)\r\n    const dataOrder = useSelector(state=>state.scopeOrderReducer.dataOrderType)\r\n    const activeStat = useSelector(state=>state.scopeOrderReducer.activestatus)\r\n\r\n    const id = dataScope.map((e)=>e.scopeOrderTypeId)\r\n    useEffect(()=>{\r\n        dispatch(getDataScopeOrder())\r\n        dispatch(getOrderType())\r\n        console.log(id,'id array asf')\r\n       \r\n    },[dispatch])\r\n\r\n    \r\n   \r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n \r\n\r\n    function handleDDLScopeChange(scopeId){\r\n        const scope = selectScope.filter( (auto) => auto.scopeId==scopeId)\r\n        setSelectedScope(scopeId)\r\n        setScopeName(scope[0].scopeName);\r\n        setScopeDesc(scope[0].scopeDesc);\r\n       \r\n    }\r\n\r\n    function handleDDLOrderChange(orderTypeId){\r\n        const order = dataOrder.filter( (auto) => auto.orderTypeId==orderTypeId)\r\n        setSelectedOrder(orderTypeId)\r\n        setOrderName(order[0].orderTypeName);\r\n        setOrderCode(order[0].orderTypeCode);\r\n        setOrderQstring(order[0].orderTypeQString);\r\n        \r\n        \r\n    }\r\n    // const negasiBool = (a) => {\r\n    //     var bool = activeStat\r\n    //     bool = !bool\r\n    //     return bool\r\n    // }\r\n    const handleOk = () => {\r\n        dispatch(postDataScope({\r\n            'OrderTypeDetail':{\r\n                OrderTypeId:selectedOrder\r\n            },\r\n            'ScopeDetail':{\r\n                ScopeId:selectedScope\r\n            }\r\n        }))\r\n        setIsModalVisible(false);\r\n    };\r\n    const getIdData = (record) => {\r\n        dispatch(getScopeOrderId(record))\r\n        setIsModalEditVisible(true)\r\n        console.log(id,'id')\r\n        \r\n    }\r\n    const handleOkEdit = () => {\r\n     \r\n        dispatch(editScope({\r\n            'ScopeOrderTypeId':dataScopeOrderTypeId,\r\n            'OrderTypeDetail':{\r\n                OrderTypeId:selectedOrder\r\n            },\r\n            'ScopeDetail':{\r\n                ScopeId:selectedScope\r\n            }\r\n        }))\r\n        setIsModalVisible(false);\r\n    };\r\n    \r\n  \r\n    const handleEdit = () => {\r\n        if (window.confirm('Are you sure you want to process this action ?')) {\r\n            dispatch(editDataScope({\r\n                \"Id\":idDataScope,\r\n                \"ActStatus\":activeStat\r\n            }))\r\n        }\r\n    \r\n    }\r\n\r\n    const getId = (e,active) => {\r\n        setIsActive(active)\r\n        dispatch(getScopeId(e))\r\n        dispatch(getActiveStatus(!active))\r\n        // setIsActive(active)\r\n        handleEdit()\r\n        console.log(!activeStat,'tes sdkn')\r\n        console.log(isActive,'isActive')\r\n    }\r\n\r\n\r\n\r\n    const column = [\r\n       \r\n        {\r\n            title : 'Order Type Detail',\r\n            dataIndex: 'orderTypeDetail',\r\n            render: item => Object.keys(item).map(k => item[k])[1]\r\n        },\r\n        {\r\n            title : 'Scope Name',\r\n            dataIndex : 'scopeDetail',\r\n            sorter:(record1,record2)=>{\r\n                return record1.scopeDetail.scopeId > record2.scopeDetail.scopeId\r\n            },\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n          \r\n                return record.scopeDetail.scopeName.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            render: item => Object.keys(item).map(k => item[k])[1]\r\n            \r\n        },\r\n        {\r\n            title : 'Is Active',\r\n            dataIndex: 'isActive',\r\n            key: 'scopeOrderTypeId',\r\n            render: (active,e) => (\r\n                <Switch\r\n        \r\n                    id='scopeOrderTypeId'\r\n         \r\n                    defaultChecked={active}\r\n                    onChange={()=>getId(e.scopeOrderTypeId,active)}\r\n                />)\r\n        },\r\n        {\r\n            title : \"Action\",\r\n            render:(record)=>{\r\n                return <EditOutlined onClick={()=>getIdData(record.scopeOrderTypeId)} />\r\n            }\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"card card-primary\">\r\n                <div className=\"card-header align-middle\">\r\n                    <h3 className=\"card-title\">Scope Order Type</h3>\r\n                    <a title=\"create new dop\" onClick={showModal} class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a>\r\n                </div>\r\n                <Table\r\n                    rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                    responsive\r\n                    dataSource={dataScope}\r\n                    columns={column}\r\n                    rowKey='scopeOrderTypeId'\r\n                    // eslint-disable-next-line react/jsx-boolean-value\r\n                    pagination={{\r\n                        pageSizeOptions: ['5','10','20','30', '40'],\r\n                        showSizeChanger: true,\r\n                        position: [\"bottomLeft\"],\r\n                    }}\r\n                    style={{marginTop : 36}}\r\n                />\r\n            </div>\r\n            <Modal \r\n                title=\"Add Scope Order Type\" \r\n                visible={isModalVisible} \r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleOk} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n                onCancel = {()=>{\r\n                    handleCancel()\r\n                }}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                       \r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                                {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                                    <InputLabel id=\"demo-simple-select-standard-label\">Select Order Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-standard-label\"\r\n                                        id=\"demo-simple-select-standard\"\r\n                                        onChange={(e) => handleDDLOrderChange(e.target.value)}\r\n                                        // label={row.uom}\r\n                                    >\r\n                                        {dataOrder.map(um => <MenuItem value={um.orderTypeId}>\r\n                                            {um.orderTypeName}\r\n                                        </MenuItem> )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Name</span>\r\n                                <input value={orderName} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Code</span>\r\n                                <input value={orderCode} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">QString</span>\r\n                                <input  type=\"text\" value={orderQstring} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                          \r\n                        </div>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                                {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                                    <InputLabel id=\"demo-simple-select-standard-label\">Select Scope</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-standard-label\"\r\n                                        id=\"demo-simple-select-standard\"\r\n                                       \r\n                                        onChange={(e) => handleDDLScopeChange(e.target.value)}\r\n                                        \r\n                                    >\r\n                                        {selectScope.map(um => <MenuItem value={um.scopeId}>\r\n                                            {um.scopeName}\r\n                                        </MenuItem> )}\r\n                                    </Select>\r\n                                       \r\n                                  \r\n                                </FormControl>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Name</span>\r\n                                <input  type=\"text\" value={scopeName} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc</span>\r\n                                <input  type=\"text\" value={scopeDesc} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal \r\n                title=\"Edit Scope Order Type\" \r\n                visible={isModalEditVisible} \r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleOkEdit} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={()=>setIsModalEditVisible(false)}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n                onCancel = {()=>{\r\n                    setIsModalEditVisible(false)\r\n                }}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                                {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                                    <InputLabel id=\"demo-simple-select-standard-label\">Select Scope</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-standard-label\"\r\n                                        id=\"demo-simple-select-standard\"\r\n                                       \r\n                                        onChange={(e) => handleDDLScopeChange(e.target.value)}\r\n                                        \r\n                                    >\r\n                                        {selectScope.map(um => <MenuItem value={um.scopeId}>\r\n                                            {um.scopeName}\r\n                                        </MenuItem> )}\r\n                                    </Select>\r\n                                       \r\n                                  \r\n                                </FormControl>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Name</span>\r\n                                <input  type=\"text\" value={scopeName} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Scope Desc</span>\r\n                                <input  type=\"text\" value={scopeDesc} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                {/* <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">PO NO </span> */}\r\n                                {/* <input onChange={(e) => setCPONo(e.target.value)} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" /> */}\r\n                                <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 220 }}>\r\n                                    <InputLabel id=\"demo-simple-select-standard-label\">Select Order Type</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-standard-label\"\r\n                                        id=\"demo-simple-select-standard\"\r\n                                        onChange={(e) => handleDDLOrderChange(e.target.value)}\r\n                                        // label={row.uom}\r\n                                    >\r\n                                        {dataOrder.map(um => <MenuItem value={um.orderTypeId}>\r\n                                            {um.orderTypeName}\r\n                                        </MenuItem> )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Name</span>\r\n                                <input value={orderName} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Code</span>\r\n                                <input value={orderCode} type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">QString</span>\r\n                                <input  type=\"text\" value={orderQstring} class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" />\r\n                            </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\r\nimport TableScopeOrder from '@app/pages/mScopeOrderType/table'\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport mSiteCondition from '@app/pages/mSiteCondition/index';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Table from './table'\r\n\r\nconst ScopeOrderType = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Scope Order Type\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {/* <p>is loading :{isLoading}</p> */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : <Table />\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScopeOrderType;\r\n\r\n\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-plusplus */\r\nimport React, {useState} from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Dropdown} from '@components';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\n\r\nconst LanguagesDropdown = () => {\r\n//    const user = useSelector(state => state)\r\n    var today = new Date()\r\n    var curHr = today.getHours()\r\n    const dataUser = useSelector(state=>state.auth.user.name)\r\n    const time = moment().format(\"hh:mm\")\r\n\r\n    return (\r\n        <div style={{marginTop:'12px',marginRight:'16px'}}>\r\n            {curHr >= 4 && curHr <= 12 ? (<p style={{fontWeight:\"500\"}}>{`Good Morning ${dataUser}              ${time}`}</p>)\r\n                :curHr <= 18 && curHr >= 12 ? (<p style={{fontWeight:\"500\"}}>{`Good Afternoon ${dataUser}`}</p>)\r\n                    :curHr >= 18 && curHr <= 24 ? (<p style={{fontWeight:\"500\"}}>{`Good Evening ${dataUser}`}</p>)\r\n                        :(<><p style={{fontWeight:\"500\"}}>{`Good Night ${dataUser}`}</p></>)\r\n            }\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default LanguagesDropdown;\r\n","import React, {useState} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {DateTime} from 'luxon';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {logoutUser} from '@store/reducers/auth';\r\nimport {Dropdown} from '@components';\r\n\r\nconst UserDropdown = () => {\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    const logOut = (event) => {\r\n        event.preventDefault();\r\n        setDropdownOpen(false);\r\n        dispatch(logoutUser());\r\n        history.push('/login');\r\n    };\r\n\r\n    const navigateToProfile = (event) => {\r\n        event.preventDefault();\r\n        setDropdownOpen(false);\r\n        history.push('/profile');\r\n    };\r\n\r\n    return (\r\n        <Dropdown\r\n            isOpen={dropdownOpen}\r\n            onChange={(open) => setDropdownOpen(open)}\r\n            className=\"user-menu\"\r\n            menuContainerTag=\"ul\"\r\n            buttonTemplate={\r\n                <img\r\n                    src={user.picture || '/img/default-profile.png'}\r\n                    className=\"user-image img-circle elevation-2\"\r\n                    alt=\"User\"\r\n                />\r\n            }\r\n            menuTemplate={\r\n                <>\r\n                    <li className=\"user-header bg-primary\">\r\n                        <img\r\n                            src={user.picture || '/img/default-profile.png'}\r\n                            className=\"img-circle elevation-2\"\r\n                            alt=\"User\"\r\n                        />\r\n                        <p>\r\n                            {user.email}\r\n                            <small>\r\n                                <span>Member since </span>\r\n                                <span>\r\n                                    {DateTime.fromISO(user.createdAt).toFormat(\r\n                                        'dd LLL yyyy'\r\n                                    )}\r\n                                </span>\r\n                            </small>\r\n                        </p>\r\n                    </li>\r\n                    {/* <li className=\"user-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4 text-center\">\r\n                                <Link to=\"/\">{t('header.user.followers')}</Link>\r\n                            </div>\r\n                            <div className=\"col-4 text-center\">\r\n                                <Link to=\"/\">{t('header.user.sales')}</Link>\r\n                            </div>\r\n                            <div className=\"col-4 text-center\">\r\n                                <Link to=\"/\">{t('header.user.friends')}</Link>\r\n                            </div>\r\n                        </div>\r\n                    </li> */}\r\n                    <li className=\"user-footer\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-default btn-flat\"\r\n                            onClick={navigateToProfile}\r\n                        >\r\n                            {t('header.user.profile')}\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-default btn-flat float-right\"\r\n                            onClick={logOut}\r\n                        >\r\n                            {t('login.button.signOut')}\r\n                        </button>\r\n                    </li>\r\n                </>\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default UserDropdown;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTranslation} from 'react-i18next';\r\nimport Messages from './messages-dropdown/MessagesDropdown';\r\nimport Notifications from './notifications-dropdown/NotificationsDropdown';\r\nimport Languages from './languages-dropdown/LanguagesDropdown';\r\nimport User from './user-dropdown/UserDropdown';\r\n\r\nconst Header = ({toggleMenuSidebar}) => {\r\n    const [t] = useTranslation();\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\r\n            {/* Left navbar links */}\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <button\r\n                        onClick={() => toggleMenuSidebar()}\r\n                        type=\"button\"\r\n                        className=\"nav-link\"\r\n                    >\r\n                        <i className=\"fas fa-bars\" />\r\n                    </button>\r\n                </li>\r\n                {/* <li className=\"nav-item d-none d-sm-inline-block\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        {t('header.label.home')}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item d-none d-sm-inline-block\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        {t('header.label.contact')}\r\n                    </Link>\r\n                </li> */}\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                {/* <li className=\"nav-item\">\r\n                    <button className=\"nav-link\" type=\"button\">\r\n                        <i className=\"fas fa-search\" />\r\n                    </button>\r\n                    <div className=\"navbar-search-block\">\r\n                        <form className=\"form-inline\">\r\n                            <div className=\"input-group input-group-sm\">\r\n                                <input\r\n                                    className=\"form-control form-control-navbar\"\r\n                                    type=\"search\"\r\n                                    placeholder=\"Search\"\r\n                                    aria-label=\"Search\"\r\n                                />\r\n                                <div className=\"input-group-append\">\r\n                                    <button\r\n                                        className=\"btn btn-navbar\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        <i className=\"fas fa-search\" />\r\n                                    </button>\r\n                                    <button\r\n                                        className=\"btn btn-navbar\"\r\n                                        type=\"button\"\r\n                                        data-widget=\"navbar-search\"\r\n                                    >\r\n                                        <i className=\"fas fa-times\" />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </li> */}\r\n                {/* <Messages /> */}\r\n                {/* <Notifications /> */}\r\n                <Languages />\r\n                <User />\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {DateTime} from 'luxon';\r\nimport {version} from '../../../../package.json';\r\n\r\nconst Footer = () => {\r\n    const [t] = useTranslation();\r\n\r\n    return (\r\n        <footer className=\"main-footer\">\r\n            <strong>\r\n                <span>Copyright © {DateTime.now().toFormat('y')} </span>\r\n                <a\r\n                    href=\"https://erdkse.com\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                >\r\n                    NOKIA\r\n                </a>\r\n                <span>.</span>\r\n            </strong>\r\n            <div className=\"float-right d-none d-sm-inline-block\">\r\n                <b>{t('footer.version')}</b>\r\n                <span>&nbsp;{version}</span>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React,{useState, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {MenuItem} from '@components';\r\nimport API  from '../../../utils/apiServices';\r\n\r\nexport const MENU = [\r\n    {\r\n        name: 'menusidebar.label.poManagement',\r\n        icon: 'fa-cogs',\r\n        children: [\r\n            {\r\n                name: 'menusidebar.label.poCreation',\r\n                path: '/po/creation'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.poScope',\r\n                path: '/po/scope'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.poSitelist',\r\n                path: '/po/sitelist'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.poCustomer',\r\n                path: '/po/customer'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        name: 'menusidebar.label.masterSetting',\r\n        icon: 'fa-cogs',\r\n        children: [\r\n            {\r\n                name: 'menusidebar.label.mMaterialCategory',\r\n                path: '/master/materialcategory'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mSubMaterialCategory',\r\n                path: '/master/submaterialcategory'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mMaterial',\r\n                path: '/master/material'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mOrderType',\r\n                path: '/master/ordertype'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mDeliveryType',\r\n                path: '/master/deliverytype'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mDOP',\r\n                path: '/master/dop'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mScope',\r\n                path: '/master/scope'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mDOP2',\r\n                path: '/master/dop2'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mScope2',\r\n                path: '/master/scope2'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mSiteCondition',\r\n                path: '/master/sitecondition'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mScopeOrderType',\r\n                path: '/master/scopeordertype'\r\n            },\r\n            {\r\n                name: 'menusidebar.label.mWorkFlow',\r\n                path: '/master/workflow'\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nconst MenuSidebar = () => {\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const [menu, setMenu] = useState([]);\r\n\r\n    const menuapi=(id)=> {\r\n        API.getMenu(id).then(\r\n            result=>{\r\n                console.log('i menu',result)\r\n                setMenu(result);\r\n            }\r\n        );\r\n    } \r\n\r\n    useEffect(() => {\r\n        menuapi(user.roleId);\r\n    },[])\r\n\r\n\r\n\r\n    return (\r\n        <aside className=\"main-sidebar sidebar-nokia-primary elevation-4\">\r\n            <Link to=\"/\" className=\"brand-link\">\r\n                <img\r\n                    src=\"/img/bicon.png\"\r\n                    alt=\"BORN Logo\"\r\n                    className=\"brand-image img-circle elevation-3\"\r\n                    style={{opacity: '1'}}\r\n                />\r\n                <span className=\"brand-text font-weight-light\">\r\n                    <h2 className='pr-4' align=\"center\" style={{ color:'white' }}>BORN</h2>\r\n                </span>\r\n            </Link>\r\n            <div className=\"sidebar\">\r\n                <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\r\n                    <div className=\"image\">\r\n                        <img\r\n                            src='/img/default-profile.png'\r\n                            className=\"img-circle elevation-2\"\r\n                            alt=\"User\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <Link to=\"/profile\" className=\"d-block\">\r\n                            {user.email}\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <nav className=\"mt-2\" style={{overflowY: 'hidden'}}>\r\n                    <ul\r\n                        className=\"nav nav-pills nav-sidebar flex-column\"\r\n                        role=\"menu\"\r\n                    >\r\n                        {menu.map((menuItem) => (\r\n                            <MenuItem key={menuItem.name} menuItem={menuItem} />\r\n                        ))}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </aside>\r\n    );\r\n};\r\n\r\nexport default MenuSidebar;\r\n","import React,{ useContext } from 'react';\r\nimport {useSelector} from 'react-redux';\r\n\r\n\r\nconst CardHeader = () => {\r\n    const title = useSelector((state) => state.pagetext.cardHeader);\r\n    return (\r\n        <h2 className=\"card-title\">\r\n            <b>\r\n                {title}\r\n            </b>\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default CardHeader;\r\n","export const setDataWorkFlow = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_WORKFLOW\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataWorkFlow = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_WORKFLOW\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataWorkFlow = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_WORKFLOW\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const postDataWorkFlowSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_DATA_WORKFLOWE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const getWorkFlowId = (payload) => {\r\n    return {\r\n        type: \"GET_WORKFLOW_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataWorkFlow = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_WORKFLOW\",\r\n        payload,\r\n    };\r\n};\r\nexport const editDataWorkFlowSuccess = (payload) => {\r\n    return {\r\n        type: \"EDIT_DATA_WORKFLOW_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n  ","/* eslint-disable no-unneeded-ternary */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-empty */\r\n/* eslint-disable react/no-unstable-nested-components */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Table,Input,Button,Modal,Switch} from 'antd'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled} from '@ant-design/icons'\r\nimport Form from 'react-bootstrap/Form';\r\nimport { editDataWorkFlow, getDataWorkFlow,postDataWorkFlow } from '@app/store/action/workFlowAction';\r\n\r\nimport \"./index.css\"\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\n//Action\r\n\r\n\r\n\r\nexport default function TableWorkFlow() {\r\n    const dispatch = useDispatch()\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isActive,setIsActive] = useState(false);\r\n    const [workflowName,setWorkFlowName] = useState('');\r\n    const [workflowDesc,setWorkFlowDesc] = useState('');\r\n    const [workflowStatus,setWorkFlowStatus] = useState('');\r\n    const [active,setActive] = useState(false);\r\n\r\n    const [isModalEditVisible, setIsModalEditVisible] = useState(false);\r\n    const [id,setId] = useState('')\r\n\r\n    const dataWorkFlow = useSelector(state=>state.workFlowReducer.dataWorkFlow)\r\n    const loading = useSelector(state=>state.workFlowReducer.isLoading)\r\n    \r\n\r\n    const showModalEdit = () => {\r\n        setIsModalEditVisible(true);\r\n    };\r\n\r\n    const getId = (record) => {\r\n        setId(record)\r\n        showModalEdit()\r\n        console.log(id,'id')\r\n    }\r\n    // const handleEdit = () => {\r\n    //     getId()\r\n    //     dispatch(editDataSite({siteConditionId:id,condition:siteName}))\r\n    // }\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n    };\r\n \r\n\r\n    // const handlePost = () => {\r\n    //     dispatch(postDataSite({condition : siteName,isActive}))\r\n    // }\r\n    const post = () => {\r\n        dispatch(postDataWorkFlow({workflowName,workflowDesc,workflowStatus,IsLastApproverCheckpoint:active}))\r\n    }\r\n   \r\n    const edit = () => {\r\n        dispatch(editDataWorkFlow({WorkflowId:id,workflowName,workflowDesc,IsLastApproverCheckpoint:active}))\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        edit()\r\n        setIsModalVisible(false);\r\n        // console.log(id,'id')\r\n    }\r\n\r\n    const handleOk = () => {\r\n        \r\n        post()\r\n        setIsModalVisible(false)\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n    const handleCancelEdit = () => {\r\n        setIsModalEditVisible(false);\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title : \"Workflow Name\",\r\n            dataIndex:'workflowName',\r\n            sorter:(record1,record2)=>{\r\n                return record1.workflowName > record2.workflowName\r\n            },\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n                return record.workflowName.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            \r\n        },\r\n        {\r\n            title:'Description',\r\n            dataIndex:'workflowDesc'\r\n        },\r\n        {\r\n            title:'Status',\r\n            dataIndex:'workflowStatus'\r\n        },\r\n        {\r\n            title : \"Is Last Aprover Checkpoint\",\r\n            dataIndex:'isLastApproverCheckpoint',\r\n            width:'15%',\r\n            key: 'isLastApproverCheckpoint',\r\n            render: (e, record) => (< Switch type='switch' defaultChecked={e} />)\r\n        },\r\n        {\r\n            title : \"Is Active\",\r\n            dataIndex:'isActive',\r\n            key: 'isActive',\r\n            render: (e, record) => (< Switch type='switch' defaultChecked={e} />)\r\n        },\r\n\r\n\r\n       \r\n        {\r\n            title : \"Action\",\r\n            render:(record)=>{\r\n                return <EditOutlined onClick={(e) => getId(record.workflowId)}/>\r\n            }\r\n        },\r\n    ]\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getDataWorkFlow())\r\n    },[dispatch])\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card card-primary\">\r\n                <div className=\"card-header align-middle\">\r\n                    <h3 className=\"card-title\">Workflow</h3>\r\n                    <a title=\"create new dop\" onClick={showModal} class=\"btn btn-success float-right\">\r\n                        <i class=\"fas fa-plus\"></i>\r\n                    </a>\r\n                </div>\r\n                <Table\r\n                    // rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                    responsive\r\n                    rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                    dataSource={dataWorkFlow}\r\n                    columns={columns}\r\n                    key='siteConditionId'\r\n                    // eslint-disable-next-line react/jsx-boolean-value\r\n                    pagination={{\r\n                        \r\n                       \r\n                        pageSizeOptions: ['5','10','20','30', '40'],\r\n                        position: [\"bottomLeft\"],\r\n                        showSizeChanger: true,\r\n                      \r\n                       \r\n                        \r\n                    }}\r\n                    style={{marginTop : 36}}\r\n                    size='small'\r\n                    bordered\r\n                    loading={loading ? (true):(false)}    \r\n                \r\n                />\r\n            </div>\r\n          \r\n            <Modal \r\n                title=\"Add Workflow\" \r\n                visible={isModalVisible} \r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleOk} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={handleCancel}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Workflow Name </span>\r\n                                <input value={workflowName} onChange={(e) => setWorkFlowName(e.target.value)} placeholder='Add workflow Name' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Description </span>\r\n                                <input value={workflowDesc} onChange={(e) => setWorkFlowDesc(e.target.value)} placeholder='Add Description' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Description </span>\r\n                                <input value={workflowStatus} onChange={(e) => setWorkFlowStatus(e.target.value)} placeholder='Add Status' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Is Aproved </span>\r\n                                <div class=\"form-control col-md-9\">\r\n                                    <Form.Check \r\n                                        type=\"switch\"\r\n                                        id=\"isSite\"\r\n                                        onChange={(e) => setActive(e.target.checked)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            \r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n            <Modal \r\n                title=\"Edit Condition\" \r\n                visible={isModalEditVisible} \r\n                onCancel = {()=>{\r\n                    handleCancelEdit()\r\n                }}\r\n                footer = {[\r\n                    <Button key=\"submit\" type=\"primary\" onClick={handleEdit} >\r\n                    Submit\r\n                    </Button>,\r\n                    <Button key=\"back\" onClick={handleCancelEdit}>\r\n                    Cancel\r\n                    </Button>,\r\n                ]}\r\n            >\r\n                <div className=\"card-body\">\r\n                    <div className='row g-3'>\r\n                        <div className='col-md-12 '>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Workflow Name </span>\r\n                                <input value={workflowName} onChange={(e) => setWorkFlowName(e.target.value)} placeholder='Edit workflow Name' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Description </span>\r\n                                <input value={workflowDesc} onChange={(e) => setWorkFlowDesc(e.target.value)} placeholder='Edit Description' type=\"text\" class=\"form-control col-md-9\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                            </div>\r\n                            <div class=\"input-group mb-3\">\r\n                                <span class=\"input-group-text col-md-3\" id=\"basic-addon1\">Is Aproved </span>\r\n                                <div class=\"form-control col-md-9\">\r\n                                    <Switch\r\n                                       \r\n                                        id=\"isSite\"\r\n                                        onChange={(e) => setActive(e.target.checked)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n           \r\n        </div>\r\n        \r\n    )\r\n}\r\n","\r\nimport TableScopeOrder from '@app/pages/mScopeOrderType/table'\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport Table from './table'\r\n\r\nconst Workflow = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n \r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Workflow\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {/* <p>is loading :{isLoading}</p> */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : <Table />\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Workflow;\r\n\r\n\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-lone-blocks */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Table,Input,Menu, Dropdown, Button, Space} from 'antd'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\n\r\n\r\n\r\nexport default function TableSite() {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [wpIds,setWpids]=useState('')\r\n    const [ordetTypeIdhook,setordetTypeIdhook]=useState('')\r\n  \r\n    const dataSiteList = useSelector(state=>state.siteListDeliveryRequestReducer.data)\r\n    const wpid = useSelector(state=>state.siteListDeliveryRequestReducer.wpId)\r\n    const dataOrderTypeList = useSelector(state=>state.siteListDeliveryRequestReducer.orderList)\r\n    const ordetTypeIds = useSelector(state=>state.siteListDeliveryRequestReducer.orderTypeId)\r\n    const [selectedOt,setSelectedOt] = useState(\"\")\r\n    const [count, setCount] = useState()\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getDataSiteList())\r\n    },[dispatch,ordetTypeIdhook,ordetTypeIds]);\r\n\r\n   \r\n    const navigateTo = (path) => {\r\n        history.push(path);\r\n        //ordetTypeIds == 'SDR' ? (history.push(`/sitelist/sdrform?wpid=${wpIds}&ot=${ordetTypeIdhook}`)):( history.push(`/sitelist/siteDetail?wpid=${wpIds}&ot=${ordetTypeIdhook}`))\r\n    }\r\n\r\n    const odi = (e) => {\r\n        \r\n        console.log(\"odiiiiii:\",e);\r\n        console.log(selectedOt,\"dataOt\")\r\n        \r\n        if(e.orderTypeDetail.orderTypeId==1){\r\n            navigateTo(`/sitelist/sdrform?wpid=${wpIds}&ot=${ordetTypeIdhook}`)\r\n        }\r\n        else if(e.orderTypeDetail.orderTypeId==4){\r\n            navigateTo(`/sitelist/siteDetail?wpid=${wpIds}&ot=${ordetTypeIdhook}`)\r\n        }\r\n        // Promise.resolve()\r\n        //     .then(() => { setSelectedOt(e.orderTypeDetail.orderTypeName)})\r\n        //     .then(() => navigateTo())\r\n    }\r\n\r\n\r\n    const getId = (record,wp) => {\r\n        // dispatch(getWpId(record));\r\n        // console.log(wpId,scopeName,orderTypeId,'wpId');\r\n        console.log(\"getid\",record);\r\n        dispatch(getOrderType(record.orderTypeList))\r\n        setWpids(wp);\r\n        setordetTypeIdhook(record.orderTypeList[0].orderTypeDetail.orderTypeId)\r\n        const wpId = record.workpackageID;\r\n        const scopeName = record.scopeDetail.scopeName;\r\n        const scopeId = record.orderTypeList[0].orderTypeDetail.orderTypeId;\r\n        console.log(wpId,scopeName,scopeId,record,'wp');\r\n        // navigateTo();\r\n    } \r\n    const menuDropdown =  (\r\n        <Menu>\r\n            {dataOrderTypeList ? (dataOrderTypeList.map((e)=>(<Menu.Item>\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" onClick={()=>odi(e)}>\r\n                    {e.orderTypeDetail.orderTypeName}\r\n                </a>\r\n            </Menu.Item>))):(<p>no Data</p>)}\r\n            \r\n        </Menu>\r\n    );\r\n\r\n    const columns = [\r\n        {\r\n            title : \"No\",\r\n            render: (value, item, index) => 1 + index\r\n        },\r\n        {\r\n            title : \"Site No\",\r\n            dataIndex:'siteNo',\r\n            ...Search('siteNo'),\r\n        },\r\n        {\r\n            title : \"Site Name\",\r\n            dataIndex:'siteName',\r\n            sorter:(record1,record2)=>{\r\n                return record1.siteName > record2.siteName\r\n            },\r\n            filterDropdown: ({setSelectedKeys,selectedKeys,confirm}) => {\r\n                return <Input \r\n                    autoFocus \r\n                    placeHolder='search'\r\n                    value={selectedKeys[0]}\r\n                    onChange={(e)=>{\r\n                        setSelectedKeys(e.target.value?[e.target.value]:[])\r\n                    }}\r\n                    style={{ marginBottom: 8, display: 'block' }}\r\n                    onPressEnter={()=>{\r\n                        confirm()\r\n                    }}\r\n                    onBlur={()=>{\r\n                        confirm()\r\n                    }}\r\n                ></Input>\r\n            },\r\n            filterIcon: () => {\r\n                return <SearchOutlined/>\r\n            },\r\n            onFilter:(value,record)=>{\r\n                return record.siteName.toLowerCase().includes(value.toLowerCase())\r\n            },\r\n            \r\n        },\r\n        {\r\n            title : \"CPO No\",\r\n            dataIndex:'poDetail',\r\n            \r\n            ...Search('poDetail'),\r\n            render: item => Object.keys(item).map(k => item[k])[1]\r\n        },\r\n        {\r\n            title : \"Workpackage ID\",\r\n            dataIndex:'workpackageID',\r\n            \r\n            ...Search('workpackageID'),\r\n        },\r\n        {\r\n            title : \"Scope\",\r\n            dataIndex:'scopeDetail',\r\n            \r\n            ...Search('scopeDetail'),\r\n            render: item => Object.keys(item).map(k => item[k])[1]\r\n            \r\n            \r\n        },\r\n        {\r\n            title : \"Region\",\r\n            dataIndex:'region',\r\n            responsive: ['md'],\r\n            ...Search('region'),\r\n        },\r\n        {\r\n            title : \"Options\",\r\n            dataIndex:'',\r\n            align:'center',\r\n            render : (record,wp)=>{\r\n                return <Space direction=\"vertical\">\r\n                    <Space wrap>\r\n                        <Dropdown overlay={menuDropdown} trigger={['click']} placement=\"bottomLeft\">\r\n                            <MoreOutlined onClick={()=>getId(record,wp.workpackageID)} /> \r\n                        </Dropdown>\r\n                    </Space>\r\n                </Space>\r\n            }\r\n            \r\n        },\r\n        \r\n    \r\n    ]\r\n  \r\n    return (\r\n        <Table\r\n            // rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n            rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n            dataSource={dataSiteList}\r\n            columns={columns}\r\n            key='siteConditionId'\r\n            scroll={{ x: '100%' }}\r\n            // eslint-disable-next-line react/jsx-boolean-value\r\n            pagination={{\r\n                pageSizeOptions: ['5','10','20','30', '40'],\r\n                showSizeChanger: true,\r\n                position: [\"bottomLeft\"],\r\n            }}\r\n                    \r\n            style={{marginTop : 36}}\r\n            size='small'\r\n            bordered\r\n            // loading={loading ? (true):(false)}    \r\n                \r\n        />\r\n    )\r\n}\r\n","export const getDataSiteList = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_SITE_LIST\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const setDataSiteList = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_SITE_LIST\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const getWpId = (payload) => {\r\n    return {\r\n        type: \"SET_WP_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOdi = (payload) => {\r\n    return {\r\n        type: \"GET_ODI\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOrderType = (payload) => {\r\n    return {\r\n        type: \"GET_ORDER_TYPE\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOrderTypeId = (payload) => {\r\n    return {\r\n        type: \"GET_ORDER_TYPE_ID\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOrderRejectionPending = (payload) => {\r\n    return {\r\n        type: \"GET_ORDER_REJECTION_PENDING\",\r\n        payload,\r\n    };\r\n};\r\nexport const setOrderRejectionPending = (payload) => {\r\n    return {\r\n        type: \"SET_ORDER_REJECTION_PENDING\",\r\n        payload,\r\n    };\r\n};\r\n\r\n","import React from 'react'\r\nimport TableSite from './table'\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\n\r\nexport default function SiteListDeliveryRequestType() {\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Sitelist Delivery Request\"/>\r\n            <TableSite/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component,useState,useEffect} from 'react';\r\n\r\nimport API  from '../../utils/apiServices';\r\n\r\nimport {useDispatch,useSelector} from 'react-redux';\r\n\r\nconst siteInfo = (cpoNo , scopeName, siteNo, siteName, packageName, projectContract, region) => {\r\n    const datas = {\r\n        cpoNo: cpoNo,\r\n        scopeName: scopeName,\r\n        siteNo: siteNo,\r\n        siteName: siteName,\r\n        packageName: packageName,\r\n        projectContract: projectContract,\r\n        region: region\r\n    }\r\n    return datas;\r\n}\r\n\r\nconst boqRef = (workpackageId , materialCode, materialDesc, refQTY) => {\r\n    const datas = {\r\n        workpackageId :  workpackageId ,\r\n        materialCode :  materialCode ,\r\n        materialDesc :  materialDesc ,\r\n        refQTY : refQTY\r\n    }\r\n    return datas;\r\n}\r\n\r\nconst siteInfoMO = (siteNo \r\n    , siteName\r\n    , region\r\n    , zone\r\n    , workpackageId\r\n    , packageName\r\n    , cpoNo\r\n    , projectName) => {\r\n    const datas = {\r\n        siteNo: siteNo,\r\n        siteName: siteName,\r\n        region: region,\r\n        zone: zone,\r\n        workpackageId: workpackageId,\r\n        packageName: packageName,\r\n        cpoNo: cpoNo,\r\n        projectName: projectName\r\n    }\r\n    return datas;\r\n}\r\n\r\nconst orderDetail = (\r\n    orderDetailId\r\n    ,inventoryCode\r\n    ,ordertype\r\n    ,requestTypeName\r\n    ,boqCheck\r\n    ,stockCheck\r\n    ,standardWFID\r\n    ,boqDeltaWFID\r\n    ,formPath\r\n    ,ctName\r\n    ,siteCondition\r\n    ,deliveryType\r\n    ,packetType\r\n    ,recipientOrDismantledBy \r\n    ,requesterName\r\n    ,requestDate\r\n    ,expectedDeliveryDate) =>{\r\n    const datas ={\r\n        orderDetailId  :    orderDetailId\r\n        ,inventoryCode  :    inventoryCode\r\n        ,ordertype  :    ordertype\r\n        ,requestTypeName  :    requestTypeName\r\n        ,boqCheck  :    boqCheck\r\n        ,stockCheck  :    stockCheck\r\n        ,standardWFID  :    standardWFID\r\n        ,boqDeltaWFID  :    boqDeltaWFID\r\n        ,formPath  :    formPath\r\n        ,ctName  :    ctName\r\n        ,siteCondition  :    siteCondition\r\n        ,deliveryType  :    deliveryType\r\n        ,packetType  :    packetType\r\n        ,recipientOrDismantledBy   :    recipientOrDismantledBy \r\n        ,requesterName  :    requesterName\r\n        ,requestDate  :    requestDate\r\n        ,expectedDeliveryDate  :    expectedDeliveryDate\r\n    }\r\n    return datas;\r\n}\r\n\r\nconst CreateDataDismantleForm = {\r\n    siteInfo\r\n    ,orderDetail\r\n    ,siteInfoMO\r\n    ,boqRef\r\n}\r\n\r\nexport default CreateDataDismantleForm;","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Row, Col,Card, Typography, Input, Space,\r\n    Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Switch,\r\n    message } from 'antd';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport Divider from '@mui/material/Divider';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport CreateDataDismantle from './DataGenerator';\r\nimport moment from 'moment';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst DismantleForm = (props) => {\r\n    const customURL = window.location.href;\r\n    const params = new URLSearchParams(customURL.split('?')[1])\r\n    const { Title } = Typography;\r\n    const wpid = params.get('wpid');\r\n    const orderTypeId = params.get('ot');\r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n    const [cpoNo,setCpoNo] = useState(\"\");\r\n    const [generalScope,setGeneralScope] = useState(\"\");\r\n    const [siteID,setSiteID] = useState(\"\");\r\n    const [siteName,setSiteName] = useState(\"\");\r\n    const [packageName,setPackageName] = useState(\"\");\r\n    const [packageStatus,setPackageStatus] = useState(\"\");\r\n    const [sowIPM,setSOWIPM] = useState(\"\");\r\n    const [wBS,setWBS] = useState(\"\");\r\n    const [projectContract,setProjectContract] = useState(\"\");\r\n    const [region,setRegion] = useState(\"\");\r\n    const [ddlInventoryCode,setDDLInventoryCode] = useState([]);\r\n    const [ddlRequestBase,setDDLRequestBase] = useState([]);\r\n    const [ddlSiteLocation,setDDLSiteLocation] = useState([]);\r\n    const [ddlCTName,setDDLCTName] = useState([]);\r\n    const [ddlOrigin,setDDLOrigin] = useState([]);\r\n    const [ddlDestination,setDDLDestination] = useState([]);\r\n    const [ddlPacketType,setDDLPacketType] = useState([]);\r\n    const [ddlSubcon,setDDLSubcon] = useState([]);\r\n    const [ddlSiteCondition,setDDLSiteCondition] = useState([]);\r\n    const current = new Date();\r\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\r\n    \r\n    const history = useHistory();\r\n    const [selectedInvCode,setSelectedInvCode] = useState('');\r\n    const [selectedSiteLocation,setSelectedSiteLocation] = useState('');\r\n    const [selectedRequestBase,setSelectedRequestBase] = useState('');\r\n    const [selectedCTName,setSelectedCTName] = useState('');\r\n    const [selectedOrigin,setSelectedOrigin] = useState('');\r\n    const [selectedDestination,setSelectedDestination] = useState('');\r\n    const [selectedPacketType,setSelectedPacketType] = useState('');\r\n    const [selectedSubcon,setSelectedSubcon] = useState('');\r\n    const [selectedSiteCondition,setSelectedSiteCondition] = useState('');\r\n    const [deliveryDate,setDeliveryDate] = useState('');\r\n    const [siteAddress,setSiteAddress] = useState('');\r\n\r\n    const navigateTo = (path) => {\r\n        history.push(path)\r\n    }\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const getSiteInfo = () => {\r\n        API.getSiteInfo(wpid).then(\r\n            result=>{\r\n                const data = [CreateDataDismantle.siteInfo(\r\n                    result.poDetail.cpoNo\r\n                    ,result.scopeDetail.scopeName\r\n                    ,result.siteNo\r\n                    ,result.siteName\r\n                    ,result.packageName\r\n                    ,result.packageName\r\n                    ,result.region)]\r\n                setSiteInfo(data);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getInventoryDDL = () => {\r\n        API.getInventoryActiveList().then(\r\n            result=>{\r\n                console.log(\"inventory\",result);\r\n                setDDLInventoryCode(result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getRequestBaseDDL = () => {\r\n        API.getRequestBase(orderTypeId).then(\r\n            result=>{\r\n                console.log(\"rb\",result);\r\n                setDDLRequestBase(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getSiteLocationDDL = () => {\r\n        API.getSiteLocation().then(\r\n            result=>{\r\n                setDDLSiteLocation(result);\r\n                console.log(\"netype\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getCTNameDDL = (invcodeid) => {\r\n        API.getCTName(invcodeid).then(\r\n            result=>{\r\n                setDDLCTName(result);\r\n                console.log(\"CTNAMeDDL\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOriginDDL = () => {\r\n        API.getOrigin(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLOrigin(result);\r\n                console.log(\"ORIGIN\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getDestination = () => {\r\n        API.getDestination(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLDestination(result);\r\n                console.log(\"Destination\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getPacketType = () => {\r\n        API.getPacketType(orderTypeId).then(\r\n            result=>{\r\n                setDDLPacketType(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    const getSubcon = () => {\r\n        API.getSubcon(orderTypeId).then(\r\n            result=>{\r\n                setDDLSubcon(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getSiteCondition = () => {\r\n        API.getSiteCondition(orderTypeId).then(\r\n            result=>{\r\n                setDDLSiteCondition(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'PO NO/ RO No',\r\n            dataIndex: 'cpoNo',\r\n            key: 'cpoNo',\r\n        },\r\n        {\r\n            title: 'General Scope',\r\n            dataIndex: 'scopeName',\r\n            key: 'scopeName',\r\n        },\r\n        {\r\n            title: 'Site No',\r\n            dataIndex: 'siteNo',\r\n            key: 'siteNo',\r\n        },\r\n        {\r\n            title: 'Site Name',\r\n            dataIndex: 'siteName',\r\n            key: 'siteName',\r\n        },\r\n        {\r\n            title: 'Package Name',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Project Contract',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Region',\r\n            dataIndex: 'region',\r\n            key: 'region',\r\n        },\r\n    ];\r\n\r\n    function handleInvDDLChange(e){\r\n        console.log(\"handleInvDDLChange\",e); \r\n        setSelectedInvCode(e);\r\n        getCTNameDDL(e);\r\n    }\r\n\r\n    function range(start, end) {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current < moment().add(2,'d');\r\n    }\r\n\r\n    const postDismantleForm = () => {\r\n        const body = (\r\n            {\r\n                \"workpackageid\":wpid,            \r\n                \"InvCodeId\":selectedInvCode,\r\n                \"orderTypeId\":orderTypeId,\r\n                \"requestTypeId\":selectedRequestBase,\r\n                \"subconId\":selectedSubcon,\r\n                \"originId\":selectedOrigin,        \r\n                \"destinationId\":selectedDestination,        \r\n                \"siteConditionId\":selectedSiteCondition,\r\n                \"CTId\":selectedCTName,\r\n                \"packetTypeId\":selectedPacketType,\r\n                \"neTypeId\" : selectedSiteLocation,\r\n                \"siteAddress\": siteAddress,\r\n                \"expectedDeliveryDate\":deliveryDate,\r\n                \"requestBy\": user.uid\r\n            }\r\n        )\r\n        console.log(\"dismantle body\",body);\r\n        API.postDismantleForm(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    navigateTo(`/sitelist/materialorder?odi=${result.returnVal}`)\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function btnConfirm(){\r\n        if(selectedRequestBase==''||selectedInvCode==''||\r\n            selectedSiteLocation==''||selectedCTName==''||\r\n            selectedOrigin==''||selectedDestination==''||\r\n            selectedPacketType==''||deliveryDate==''){\r\n                \r\n            message.error('Please Complete Form');\r\n        }\r\n        else{\r\n            postDismantleForm();\r\n        }\r\n    }\r\n\r\n    function btnCancel(){\r\n        navigateTo(\"/mm/sitelistdr\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('wpid:',wpid,\"ordertype:\",orderTypeId)\r\n        getSiteInfo();\r\n        getInventoryDDL();\r\n        getRequestBaseDDL();\r\n        getSiteLocationDDL();\r\n        getOriginDDL();\r\n        getDestination();\r\n        getPacketType();\r\n        getSubcon();\r\n        getSiteCondition();\r\n    },[wpid,orderTypeId])\r\n\r\n    const CardTitle = (title) => (\r\n        <Title level={5}>\r\n            {title}\r\n        </Title>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Dismantle Form\"/>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header align-middle\">\r\n                            <h3 className=\"card-title\">Site Info</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <Table columns={columns} scroll={{ x: '100%' }} pagination={false} dataSource={siteInfo} />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Card hoverable title={CardTitle(\"Order Detail\")}>\r\n                        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                            <Form\r\n                                labelCol={{ span: 5 }}\r\n                                wrapperCol={{ span: 18 }}\r\n                                layout=\"horizontal\"\r\n                            >\r\n                                <Form.Item label=\"Order Type\">\r\n                                    <Input disabled value=\"PMR\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Inventory Code\">\r\n                                    <Select \r\n                                        onChange={(e) => handleInvDDLChange(e)}\r\n                                        placeholder=\"Select an option\"\r\n                                    >\r\n                                        {/* <Select.Option value={0}>-- SELECT --</Select.Option> */}\r\n                                        {\r\n                                            ddlInventoryCode.map(inv =>  <Select.Option value={inv.invCodeId}> \r\n                                                {inv.invCode}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Request Base\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedRequestBase(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlRequestBase.map(rbs =>  <Select.Option value={rbs.requestTypeId}> \r\n                                                {rbs.requestTypeName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site A/NE - Site B/FE\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteLocation(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteLocation.map(slc =>  <Select.Option value={slc.neTypeId}> \r\n                                                {slc.neType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"CT Name\">\r\n                                    {\r\n                                        selectedInvCode == '' ?  <Select status=\"warning\" disabled placeholder=\"Please Select Inventory Code\">\r\n                                        </Select>\r\n                                            :\r\n                                            <Select \r\n                                                onChange={(e) => setSelectedCTName(e)} \r\n                                                placeholder=\"Select an option\">\r\n                                                {\r\n                                                    ddlCTName.map(slc =>  <Select.Option value={slc.ctId}> \r\n                                                        {slc.ctName}</Select.Option>)\r\n                                                }\r\n                                            </Select>\r\n                                    }\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Condition\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteCondition(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteCondition.map(slc =>  <Select.Option value={slc.siteConditionId}> \r\n                                                {slc.condition}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Origin\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedOrigin(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlOrigin.map(org =>  <Select.Option value={org.dopId}> \r\n                                                {org.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Destination\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedDestination(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlDestination.map(dst =>  <Select.Option value={dst.dopId}> \r\n                                                {dst.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"SubCon\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedSubcon(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSubcon.map(dst =>  <Select.Option value={dst.subconId}> \r\n                                                {dst.subconName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item label=\"Packet Type\" rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}>\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedPacketType(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlPacketType.map(dst =>  <Select.Option value={dst.packetTypeId}> \r\n                                                {dst.packetType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Address\">\r\n                                    <Input.TextArea \r\n                                        onChange={(e) => setSiteAddress(e.target.value)}  \r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Delivery Date\" rules={[{ required: true, message: 'Missing Inventory Code' }]}>\r\n                                    <DatePicker\r\n                                        format=\"YYYY-MM-DD\"\r\n                                        disabledDate={disabledDate}\r\n                                        onChange={(e) => setDeliveryDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                                        // disabledDate={current && current < moment().endOf('day')}\r\n                                        // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                                    />\r\n                                </Form.Item>\r\n                                {/* <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">Confirm</Button>\r\n                                    <Button type=\"danger\">Cancel</Button>\r\n                                </Form.Item> */}\r\n                            </Form>\r\n                            <Divider orientation=\"center\" />\r\n                            <Row>\r\n                                <Col span={20}>\r\n                                    <Row>\r\n                                        <Col span={3}>Requester</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Request Date</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{date}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Phone No</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col span={4}> \r\n                                    <Space direction=\"horizontal\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" onClick={btnConfirm}>Confirm</Button>\r\n                                        <Button type=\"danger\" onClick={btnCancel}>Cancel</Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DismantleForm;","/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Row, Col,Card, Typography, Input, Space,\r\n    Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Switch,\r\n    message } from 'antd';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport Divider from '@mui/material/Divider';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport CreateDataDismantle from './DataGenerator';\r\nimport moment from 'moment';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst DismantleFormEdit = (props) => {\r\n    const customURL = window.location.href;\r\n    const params = new URLSearchParams(customURL.split('?')[1])\r\n    const { Title } = Typography;\r\n    const odi = params.get('odi');\r\n    \r\n    \r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n    \r\n    const [loading,setLoading] = useState(false);\r\n    const [orderDetail,setOrderDetail] = useState([]);\r\n    const [orderTypeId, setOrderTypeId] = useState('');\r\n    const [wpid, setWPID] = useState('');\r\n\r\n    const [ddlInventoryCode,setDDLInventoryCode] = useState([]);\r\n    const [ddlRequestBase,setDDLRequestBase] = useState([]);\r\n    const [ddlSiteLocation,setDDLSiteLocation] = useState([]);\r\n    const [ddlCTName,setDDLCTName] = useState([]);\r\n    const [ddlOrigin,setDDLOrigin] = useState([]);\r\n    const [ddlDestination,setDDLDestination] = useState([]);\r\n    const [ddlPacketType,setDDLPacketType] = useState([]);\r\n    const [ddlSubcon,setDDLSubcon] = useState([]);\r\n    const [ddlSiteCondition,setDDLSiteCondition] = useState([]);\r\n    const current = new Date();\r\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\r\n    \r\n    const history = useHistory();\r\n    const [selectedInvCode,setSelectedInvCode] = useState('');\r\n    const [selectedSiteLocation,setSelectedSiteLocation] = useState('');\r\n    const [selectedRequestBase,setSelectedRequestBase] = useState('');\r\n    const [selectedCTName,setSelectedCTName] = useState('');\r\n    const [selectedOrigin,setSelectedOrigin] = useState('');\r\n    const [selectedDestination,setSelectedDestination] = useState('');\r\n    const [selectedPacketType,setSelectedPacketType] = useState('');\r\n    const [selectedSubcon,setSelectedSubcon] = useState('');\r\n    const [selectedSiteCondition,setSelectedSiteCondition] = useState('');\r\n    const [deliveryDate,setDeliveryDate] = useState('');\r\n    const [siteAddress,setSiteAddress] = useState('');\r\n\r\n    const navigateTo = (path) => {\r\n        history.push(path)\r\n    }\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const getOrderDetail = async (odiparam) =>{\r\n        setLoading(true);\r\n        API.getOrderDetailEdit(odiparam).then(\r\n            result=>{\r\n                setWPID(result[0].workpackageId);\r\n                setOrderTypeId(result[0].orderTypeId);\r\n                setOrderDetail(result);\r\n                setLoading(false);\r\n                console.log(\"order detail edit:\",result,result[0].workpackageId,orderTypeId )\r\n            }\r\n        )\r\n    }\r\n\r\n    const getSiteInfo = () => {\r\n        API.getSiteInfo(wpid).then(\r\n            result=>{\r\n                const data = [CreateDataDismantle.siteInfo(\r\n                    result.poDetail.cpoNo\r\n                    ,result.scopeDetail.scopeName\r\n                    ,result.siteNo\r\n                    ,result.siteName\r\n                    ,result.packageName\r\n                    ,result.packageName\r\n                    ,result.region)]\r\n                setSiteInfo(data);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getInventoryDDL = async () => {\r\n        API.getInventoryActiveList().then(\r\n            result=>{\r\n                console.log(\"inventory\",result);\r\n                setDDLInventoryCode(result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getRequestBaseDDL = async () => {\r\n        console.log(\"requestbase\",orderTypeId)\r\n        API.getRequestBase(orderTypeId).then(\r\n            result=>{\r\n                console.log(\"rb\",result);\r\n                setDDLRequestBase(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getSiteLocationDDL = async () => {\r\n        API.getSiteLocation().then(\r\n            result=>{\r\n                setDDLSiteLocation(result);\r\n                console.log(\"netype\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getCTNameDDL = (invcodeid) => {\r\n        API.getCTName(invcodeid).then(\r\n            result=>{\r\n                setDDLCTName(result);\r\n                console.log(\"CTNAMeDDL\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOriginDDL = () => {\r\n        API.getOrigin(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLOrigin(result);\r\n                console.log(\"ORIGIN\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getDestination = () => {\r\n        API.getDestination(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLDestination(result);\r\n                console.log(\"Destination\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getPacketType = () => {\r\n        API.getPacketType(orderTypeId).then(\r\n            result=>{\r\n                setDDLPacketType(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    const getSubcon = () => {\r\n        API.getSubcon(orderTypeId).then(\r\n            result=>{\r\n                setDDLSubcon(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getSiteCondition = () => {\r\n        API.getSiteCondition(orderTypeId).then(\r\n            result=>{\r\n                setDDLSiteCondition(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'PO NO/ RO No',\r\n            dataIndex: 'cpoNo',\r\n            key: 'cpoNo',\r\n        },\r\n        {\r\n            title: 'General Scope',\r\n            dataIndex: 'requestTypeName',\r\n            key: 'scopeName',\r\n        },\r\n        {\r\n            title: 'Site No',\r\n            dataIndex: 'siteNo',\r\n            key: 'siteNo',\r\n        },\r\n        {\r\n            title: 'Site Name',\r\n            dataIndex: 'siteName',\r\n            key: 'siteName',\r\n        },\r\n        {\r\n            title: 'Package Name',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Project Contract',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Region',\r\n            dataIndex: 'region',\r\n            key: 'region',\r\n        },\r\n    ];\r\n\r\n    function handleInvDDLChange(e){\r\n        console.log(\"handleInvDDLChange\",e); \r\n        setSelectedInvCode(e);\r\n        getCTNameDDL(e);\r\n    }\r\n\r\n    function range(start, end) {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current < moment().add(2,'d');\r\n    }\r\n\r\n    const postDismantleForm = () => {\r\n        const body = (\r\n            {\r\n                \"workpackageid\":wpid,            \r\n                \"InvCodeId\":selectedInvCode,\r\n                \"orderTypeId\":orderTypeId,\r\n                \"requestTypeId\":selectedRequestBase,\r\n                \"subconId\":selectedSubcon,\r\n                \"originId\":selectedOrigin,        \r\n                \"destinationId\":selectedDestination,        \r\n                \"siteConditionId\":selectedSiteCondition,\r\n                \"CTId\":selectedCTName,\r\n                \"packetTypeId\":selectedPacketType,\r\n                \"neTypeId\" : selectedSiteLocation,\r\n                \"siteAddress\": siteAddress,\r\n                \"expectedDeliveryDate\":deliveryDate,\r\n                \"requestBy\": user.uid\r\n            }\r\n        )\r\n        console.log(\"dismantle body\",body);\r\n        API.postDismantleForm(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    navigateTo(`/sitelist/materialorder?odi=${result.returnVal}`)\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function btnConfirm(){\r\n        if(selectedRequestBase==''||selectedInvCode==''||\r\n            selectedSiteLocation==''||selectedCTName==''||\r\n            selectedOrigin==''||selectedDestination==''||\r\n            selectedPacketType==''||deliveryDate==''){\r\n                \r\n            message.error('Please Complete Form');\r\n        }\r\n        else{\r\n            postDismantleForm();\r\n        }\r\n    }\r\n\r\n    function btnCancel(){\r\n        navigateTo(\"/mm/sitelistdr\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        getOrderDetail(odi);\r\n        // getSiteInfo();\r\n        getInventoryDDL();\r\n        getRequestBaseDDL();\r\n        getSiteLocationDDL();\r\n        getOriginDDL();\r\n        getDestination();\r\n        getPacketType();\r\n        getSubcon();\r\n        getSiteCondition();\r\n        console.log('wpid:',wpid,\"ordertype:\",orderTypeId)\r\n        \r\n    },[wpid,orderTypeId])\r\n\r\n    const CardTitle = (title) => (\r\n        <Title level={5}>\r\n            {title}\r\n        </Title>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Dismantle Form Edit\"/>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header align-middle\">\r\n                            <h3 className=\"card-title\">Site Info</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <Table columns={columns} scroll={{ x: '100%' }} pagination={false} dataSource={orderDetail} />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Card hoverable title={CardTitle(\"Order Detail\")}>\r\n                        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                            <Form\r\n                                labelCol={{ span: 5 }}\r\n                                wrapperCol={{ span: 18 }}\r\n                                layout=\"horizontal\"\r\n                            >\r\n                                <Form.Item label=\"Order Type\">\r\n                                    <Input disabled value=\"PMR\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Inventory Code\">\r\n                                    <Select \r\n                                        onChange={(e) => handleInvDDLChange(e)}\r\n                                        placeholder=\"Select an option\"\r\n                                    >\r\n                                        {/* <Select.Option value={0}>-- SELECT --</Select.Option> */}\r\n                                        {\r\n                                            ddlInventoryCode.map(inv =>  <Select.Option value={inv.invCodeId}> \r\n                                                {inv.invCode}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Request Base\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedRequestBase(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlRequestBase.map(rbs =>  <Select.Option value={rbs.requestTypeId}> \r\n                                                {rbs.requestTypeName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site A/NE - Site B/FE\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteLocation(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteLocation.map(slc =>  <Select.Option value={slc.neTypeId}> \r\n                                                {slc.neType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"CT Name\">\r\n                                    {\r\n                                        selectedInvCode == '' ?  <Select status=\"warning\" disabled placeholder=\"Please Select Inventory Code\">\r\n                                        </Select>\r\n                                            :\r\n                                            <Select \r\n                                                onChange={(e) => setSelectedCTName(e)} \r\n                                                placeholder=\"Select an option\">\r\n                                                {\r\n                                                    ddlCTName.map(slc =>  <Select.Option value={slc.ctId}> \r\n                                                        {slc.ctName}</Select.Option>)\r\n                                                }\r\n                                            </Select>\r\n                                    }\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Condition\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteCondition(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteCondition.map(slc =>  <Select.Option value={slc.siteConditionId}> \r\n                                                {slc.condition}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Origin\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedOrigin(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlOrigin.map(org =>  <Select.Option value={org.dopId}> \r\n                                                {org.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Destination\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedDestination(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlDestination.map(dst =>  <Select.Option value={dst.dopId}> \r\n                                                {dst.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"SubCon\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedSubcon(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSubcon.map(dst =>  <Select.Option value={dst.subconId}> \r\n                                                {dst.subconName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item label=\"Packet Type\" rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}>\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedPacketType(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlPacketType.map(dst =>  <Select.Option value={dst.packetTypeId}> \r\n                                                {dst.packetType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Address\">\r\n                                    <Input.TextArea \r\n                                        onChange={(e) => setSiteAddress(e.target.value)}  \r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Delivery Date\" rules={[{ required: true, message: 'Missing Inventory Code' }]}>\r\n                                    <DatePicker\r\n                                        format=\"YYYY-MM-DD\"\r\n                                        disabledDate={disabledDate}\r\n                                        onChange={(e) => setDeliveryDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                                        // disabledDate={current && current < moment().endOf('day')}\r\n                                        // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                                    />\r\n                                </Form.Item>\r\n                                {/* <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">Confirm</Button>\r\n                                    <Button type=\"danger\">Cancel</Button>\r\n                                </Form.Item> */}\r\n                            </Form>\r\n                            <Divider orientation=\"center\" />\r\n                            <Row>\r\n                                <Col span={20}>\r\n                                    <Row>\r\n                                        <Col span={3}>Requester</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Request Date</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{date}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Phone No</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col span={4}> \r\n                                    <Space direction=\"horizontal\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" onClick={btnConfirm}>Confirm</Button>\r\n                                        <Button type=\"danger\" onClick={btnCancel}>Cancel</Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default DismantleFormEdit;","/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-script-url */\r\n/* eslint-disable react/jsx-no-script-url */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport React,{useState, useEffect} from 'react'\r\nimport {Table, Row, Col,Card, Typography, Input, Space, Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    InputNumber ,\r\n    DatePicker,\r\n    TreeSelect,\r\n    Popconfirm,\r\n    Switch,\r\n    message,\r\n    Divider ,\r\n    Tabs,\r\n    Tooltip,\r\n    Modal } from 'antd'\r\nimport { DownloadOutlined,PlusOutlined,FileExcelOutlined,CloseOutlined, EditOutlined,DeleteOutlined,CheckOutlined  } from '@ant-design/icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger'\r\nimport API  from '../../utils/apiServices';\r\nimport exportFromJSON from 'export-from-json'\r\nimport moment from 'moment';\r\nimport DataGenerator from './DataGenerator';\r\nimport {IconButton, TextField}  from '@mui/material/';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport \"./style.css\";\r\n\r\nexport default function MaterialOrder() {\r\n    \r\n    const user = useSelector((state) => state.auth.user);\r\n    const { Option } = Select;\r\n    const customURL = window.location.href;\r\n    const params = new URLSearchParams(customURL.split('?')[1])\r\n    const odiParam = params.get('odi');\r\n    const exportType =  exportFromJSON.types.xls;\r\n\r\n    const [selectedButton,setSelectedButton] = useState(true);\r\n    const [orderDetailData,setOrderDetailData] = useState([]);\r\n    const [orderDetailMaterial,setOrderDetailMaterial] = useState([]);\r\n    const [orderDetailMaterialExcluded,setOrderDetailMaterialExcluded] = useState([]);\r\n    const [materialChoosed,setMaterialChoosed] = useState([]);\r\n    const [materialChoosedEdit,setMaterialChoosedEdit] = useState([]);\r\n    const [reqQTY, setReqQTY] = useState('');\r\n\r\n    const { TabPane } = Tabs;\r\n\r\n    const { Title } = Typography;\r\n  \r\n    const [isModalAddMaterial, setIsModalAddMaterial] = useState(false);\r\n    const [isModalEditMaterial, setIsModalEditMaterial] = useState(false);\r\n    const [siteNo, setSiteNo] = useState('');\r\n    const [wpid, setWPID] = useState('');\r\n    const [boqRef, setBOQRef] = useState('');\r\n    const [stockCheck, setStockCheck] = useState(false);\r\n    const [orderTypeId, setOrderTypeId] = useState('');\r\n    const history = useHistory();\r\n\r\n    const [selectedMaterialId,setSelectedMaterialId] = useState('');\r\n    const [selectedMaterialCode,setSelectedMaterialCode] = useState('');\r\n    const [selectedMaterialDesc,setSelectedMaterialDesc] = useState('');\r\n    const [selectedUOM,setSelectedUOM] = useState('');\r\n    const [selectedQTYReq,setSelectedQTYReq] = useState('');\r\n    const [selectedQTYRef,setSelectedQTYRef] = useState('');\r\n    const [selectedBalance,setSelectedBalance] = useState('');\r\n    const [selectedSite,setSelectedSite] = useState('');\r\n    const [selectedOrderStatus,setSelectedOrderStatus] = useState('');\r\n\r\n    const navigateTo = (path) => {\r\n        history.push(path)\r\n    }\r\n    const getOrderDetailMaterial=(odi)=>{\r\n        API.getOrderDetailMaterial(odi).then(\r\n            result=>{\r\n                setOrderDetailMaterial(result);\r\n            }\r\n        )\r\n    }\r\n    const handleEditMaterial = (data) => {\r\n        setSelectedMaterialId(data.orderMaterialId);\r\n        setSelectedMaterialCode(data.materialCode);\r\n        setSelectedMaterialDesc(data.materialDesc);\r\n        setSelectedUOM(data.uom);\r\n        setSelectedQTYRef(data.refQTY);\r\n        setSelectedQTYReq(data.reqQTY);\r\n        setSelectedBalance(data.availableQTY);\r\n        setSelectedOrderStatus(data.orderStatus);\r\n        setIsModalEditMaterial(true);\r\n        console.log(\"edit data\", data);\r\n    }\r\n\r\n    const handleDeleteMaterial = (data) => {\r\n        if (window.confirm('Are you sure you want to delete this material ?')) {\r\n            console.log(\"edit data\", data);\r\n            const body=(\r\n                {\r\n                    \"orderDetailId\":odiParam,\r\n                    \"reqQty\":data.reqQTY,\r\n                    \"LMBY\":user.uid,\r\n                    \"stockCheck\":false,\r\n                    \"neType\":data.site\r\n                }\r\n            )\r\n            console.log(\"delete material\",body)\r\n            API.deleteMaterialOrderRequest(data.orderMaterialId).then(\r\n                result=>{\r\n                    if(result.status==\"success\"){\r\n                        toast.success(result.message)\r\n                        getOrderDetailMaterial(odiParam);\r\n                    }\r\n                    else{\r\n                        toast.error(result.message)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const handleChangeNeType=(value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    const handleChangeQTY=(value) => {\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    const columnsMaterialOrder =[\r\n        {\r\n            title:\"Item Code\",\r\n            dataIndex:\"materialCode\",\r\n            key:\"orderMaterialId\"\r\n        },\r\n        {\r\n            title:\"Material Desc\",\r\n            dataIndex:\"materialDesc\",\r\n            key:\"orderMaterialId\",\r\n        },\r\n        {\r\n            title:\"UOM\",\r\n            dataIndex:\"uom\",\r\n            key:\"orderMaterialId\",\r\n        },\r\n        {\r\n            title:\"QTY Ref\",\r\n            dataIndex:'refQTY',\r\n            key:\"orderMaterialId\",\r\n        },\r\n        {\r\n            title:\"QTY Req\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <b>{record.reqQTY}</b>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        \r\n        {\r\n            title:\"Balance\",\r\n            dataIndex:\"balanceQTY\",\r\n            key:\"orderMaterialId\",\r\n\r\n        },\r\n        {\r\n            title:\"Site\",\r\n            dataIndex:\"site\",\r\n            key:\"orderMaterialId\",\r\n        },\r\n        {\r\n            title:\"Order Status\",\r\n            dataIndex:\"orderStatus\",\r\n            key:\"orderMaterialId\",\r\n        },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <Tooltip title=\"Edit Req Quantity\">\r\n                            <EditOutlined onClick={() => handleEditMaterial(record)} />\r\n                        </Tooltip>\r\n                        {record.isBoqRef?\r\n                            null\r\n                            :\r\n                            <Tooltip title=\"Delete Material\">\r\n                                <DeleteOutlined onClick={() => handleDeleteMaterial(record)} />\r\n                            </Tooltip>\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    const columnsOrderDetail =[\r\n        {\r\n            title:\"Inventory Code\",\r\n            dataIndex:\"inventoryCode\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Order Type\",\r\n            dataIndex:\"orderType\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Request Type\",\r\n            dataIndex:\"requestTypeName\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"CT Name\",\r\n            dataIndex:'ctName',\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Site Condition\",\r\n            dataIndex:\"siteCondition\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Delivery Type\",\r\n            dataIndex:\"deliveryType\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Packet Type\",\r\n            dataIndex:\"packetType\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Subcon\",\r\n            dataIndex:\"recipientOrDismantledBy\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Requester\",\r\n            dataIndex:\"requesterName\",\r\n            key:\"orderDetailId\"\r\n        },\r\n        {\r\n            title:\"Request Date\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.requestDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title:\"Expected Delivery Date\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.expectedDeliveryDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        \r\n    ]\r\n    \r\n    const handleAddMaterial = (data) => {\r\n        console.log(\"handleAddplus\",data)\r\n        setMaterialChoosed(data);\r\n    }\r\n\r\n    const onFinishAddMaterial = (values) => {\r\n        if(stockCheck==true){\r\n            if(values.balance < values.reqQTY){\r\n                toast.error(\"req qty exceeds balance\")\r\n            }\r\n        }\r\n        const body=(\r\n            {\r\n                \"orderDetailId\":odiParam,\r\n                \"materialCode\":values.materialCode,\r\n                \"reqQty\":values.reqQTY,\r\n                \"LMBY\":user.uid,\r\n                \"stockCheck\":false,\r\n                \"neType\":values.neType\r\n            }\r\n        )\r\n        console.log(\"submit material\",body)\r\n        API.postAddMaterial(body).then(\r\n            result=>{\r\n                if(result.status==\"success\"){\r\n                    toast.success(result.message)\r\n                    setIsModalAddMaterial(false);\r\n                    setMaterialChoosed([]);\r\n                    getOrderDetailMaterial(odiParam);\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                    setIsModalAddMaterial(false);\r\n                    setMaterialChoosed([]);\r\n                }\r\n            }\r\n        )\r\n    };\r\n    \r\n    const onFinishFailedAddMaterial = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onFinishFailedEditMaterial = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const onFinishEditMaterial = (values) => {\r\n        const body=(\r\n            {\r\n                \"orderMaterialId\":values.orderMaterialId,\r\n                \"reqQty\":values.reqQTY,\r\n                \"LMBY\":user.uid,\r\n                \"stockCheck\":false\r\n            }\r\n        )\r\n        console.log(\"edit material\",values)\r\n        API.putEditQtyMaterial(body).then(\r\n            result=>{\r\n                if(result.status==\"success\"){\r\n                    toast.success(result.message)\r\n                    setIsModalEditMaterial(false);\r\n                    setMaterialChoosed([]);\r\n                    getOrderDetailMaterial(odiParam);\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                    setIsModalEditMaterial(false);\r\n                    setMaterialChoosed([]);\r\n                }\r\n            }\r\n        )\r\n    };\r\n\r\n    const columnsMaterialListExcluded =[\r\n        {\r\n            title:\"ID\",\r\n            render: (value, item, index) => 1 + index\r\n        }, \r\n        {\r\n            title:\"Material Code\",\r\n            dataIndex:\"materialCode\",\r\n            key:\"materialCode\"\r\n        },\r\n        {\r\n            title:\"Subcategory Name\",\r\n            dataIndex:\"subCategoryName\",\r\n            key:\"subCategoryName\"\r\n        }, \r\n        {\r\n            title:\"Material Desc\",\r\n            dataIndex:\"materialDesc\",\r\n            key:\"materialDesc\"\r\n        },\r\n        // {\r\n        //     title:\"NE Type\",\r\n        //     render:(record)=>{\r\n        //         return (\r\n        // <Select defaultValue=\"NE\" style={{ width: 120 }} onChange={handleChangeNeType} disabled>\r\n        //     <Option value=\"NE\">NE</Option>\r\n        //     <Option value=\"FE\">FE</Option>\r\n        // </Select>\r\n        //         )\r\n        //     }\r\n        // },\r\n        // {\r\n        //     title:\"QTY\",\r\n        //     render:(record)=>{\r\n        //         return (\r\n        //             <InputNumber min={1} defaultValue={1} onChange={(e)=>handleChangeQTY(e)} disabled />\r\n        //         )\r\n        //     }\r\n        // },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <PlusOutlined  onClick={(e) => handleAddMaterial(record)} />\r\n                    </Space>\r\n                )\r\n            }\r\n        } \r\n    ]\r\n\r\n    const columnsMaterialListExcludedStockCheck =[\r\n        {\r\n            title:\"ID\",\r\n            render: (value, item, index) => 1 + index\r\n        }, \r\n        {\r\n            title:\"Material Code\",\r\n            dataIndex:\"materialCode\",\r\n            key:\"materialCode\"\r\n        },\r\n        {\r\n            title:\"Subcategory Name\",\r\n            dataIndex:\"subCategoryName\",\r\n            key:\"subCategoryName\"\r\n        }, \r\n        {\r\n            title:\"Material Desc\",\r\n            dataIndex:\"materialDesc\",\r\n            key:\"materialDesc\"\r\n        },\r\n        {\r\n            title:\"Balance\",\r\n            dataIndex:\"balance\",\r\n            key:\"materialDesc\"\r\n        },\r\n        // {\r\n        //     title:\"NE Type\",\r\n        //     render:(record)=>{\r\n        //         return (\r\n        // <Select defaultValue=\"NE\" style={{ width: 120 }} onChange={handleChangeNeType} disabled>\r\n        //     <Option value=\"NE\">NE</Option>\r\n        //     <Option value=\"FE\">FE</Option>\r\n        // </Select>\r\n        //         )\r\n        //     }\r\n        // },\r\n        // {\r\n        //     title:\"QTY\",\r\n        //     render:(record)=>{\r\n        //         return (\r\n        //             <InputNumber min={1} defaultValue={1} onChange={(e)=>handleChangeQTY(e)} disabled />\r\n        //         )\r\n        //     }\r\n        // },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <PlusOutlined  onClick={(e) => handleAddMaterial(record)} />\r\n                    </Space>\r\n                )\r\n            }\r\n        } \r\n    ]\r\n\r\n    const showModalAddMaterial = () => {\r\n        setIsModalAddMaterial(true);\r\n        API.getMaterialListExcludeOrdered(odiParam).then(\r\n            result=>{\r\n                setOrderDetailMaterialExcluded(result);\r\n                console.log(result);\r\n            }\r\n        )\r\n    };\r\n    \r\n    const handleOk = () => {\r\n        setIsModalAddMaterial(false);\r\n        setIsModalEditMaterial(false);\r\n        setMaterialChoosed([]);\r\n        setMaterialChoosedEdit([]);\r\n    };\r\n    \r\n    const handleCancel = () => {\r\n        setIsModalAddMaterial(false);\r\n        setIsModalEditMaterial(false);\r\n        setMaterialChoosed([]);\r\n        setMaterialChoosedEdit([]);\r\n    };\r\n    const handleOkEdit = () => {\r\n        setSelectedMaterialCode('');\r\n        setSelectedMaterialDesc('');\r\n        setIsModalEditMaterial(false);\r\n    };\r\n    const handleCancelEdit = () => {\r\n        setSelectedMaterialCode('');\r\n        setSelectedMaterialDesc('');\r\n        setIsModalEditMaterial(false);\r\n    };\r\n\r\n    const getOrderDetail=(odi)=>{\r\n        API.getOrderDetailForm(odi).then(\r\n            result=>{\r\n                setOrderDetailData(result);\r\n                setWPID(result[0].workpackageId);\r\n                setSiteNo(result[0].siteNo);\r\n                setStockCheck(result[0].stockCheck);\r\n                setOrderTypeId(result[0].orderTypeId);\r\n                console.log('orderdetailform',result);\r\n            }\r\n        )\r\n    }\r\n   \r\n    const handleDownloadBtn=()=>{\r\n        API.getBOQRefGetList(odiParam).then(\r\n            result=>{\r\n                const data = result.map((rs)=>DataGenerator.boqRef(\r\n                    rs.workpackageId \r\n                    , rs.materialCode\r\n                    , rs.materialDesc\r\n                    , rs.refQTY))\r\n                const fileName = `boqactref_${siteNo}_${wpid}`;\r\n                exportFromJSON({ data, fileName, exportType });\r\n            }\r\n        )\r\n    }\r\n   \r\n    const expandedRowRender = () => {\r\n        const columnsSiteInfo =[\r\n            {\r\n                title:\"Site No\",\r\n                dataIndex:\"siteNo\",\r\n            },\r\n            {\r\n                title:\"Site Name\",\r\n                dataIndex:\"siteName\",\r\n            },\r\n            {\r\n                title:\"Region\",\r\n                dataIndex:\"region\",\r\n            },\r\n            {\r\n                title:\"Zone\",\r\n                dataIndex:'zone',\r\n            },\r\n            {\r\n                title:\"WorkpackageId\",\r\n                dataIndex:\"workpackageId\",\r\n            },\r\n            {\r\n                title:\"Package Name\",\r\n                dataIndex:\"packageName\",\r\n            },\r\n            {\r\n                title:\"CPO No\",\r\n                dataIndex:\"cpoNo\",\r\n            },\r\n            {\r\n                title:\"Project Name\",\r\n                dataIndex:\"projectName\",\r\n            }\r\n        ]\r\n    \r\n        return (\r\n            <Card title=\"Site Info\"  hoverable>\r\n                <Table \r\n                    columns={columnsSiteInfo} \r\n                    dataSource={orderDetailData} \r\n                    pagination={false} \r\n                    bordered\r\n                />\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    const handleSaveDraft = () => {\r\n        const body =(\r\n            {\r\n                \"id\":odiParam,\r\n                \"customSuccessMessage\":\"Order Request saved successfully\",\r\n                \"customErrMessage\":\"Error while attempting to save this order request, please try again!\"    \r\n            }\r\n        )\r\n        API.putMaterialOrderDraft(body).then(\r\n            result=>{\r\n                if(result.status==\"success\"){\r\n                    toast.success(result.message)\r\n                    navigateTo('/mm/orderrequestdraft')\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n\r\n    }\r\n\r\n    const handleSubmitDirect = () => {\r\n        API.postMaterialOrderDirectSubmit(odiParam).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\"){\r\n                    toast.success(result.message);\r\n                    navigateTo('/mm/sitelistdr')\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleBookSubmit = () => {\r\n        API.postMaterialOrderBookSubmit(odiParam).then(\r\n            result=>{\r\n                console.log(result);\r\n                if(result.status==\"success\"){\r\n                    toast.success(result.message);\r\n                }\r\n                else{\r\n                    toast.error(result.message);\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const handleEditOrderDetail = () => {\r\n        navigateTo(`/sitelist/dismantleedit?odi=${odiParam}`)\r\n    }\r\n    // eslint-disable-next-line react/no-unstable-nested-components\r\n    useEffect(() => {\r\n        getOrderDetail(odiParam);\r\n        getOrderDetailMaterial(odiParam);\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Material Order Form\"/>\r\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                <Card hoverable>\r\n                    <Row>\r\n                        <Col md={16} sm={12} >\r\n                            <Title level={5}>Order Detail</Title>\r\n                        </Col>\r\n                        <Col md={8} sm={12} >\r\n                            <div className='float-right'>\r\n                                <Tooltip title=\"Edit Order Detail\">\r\n                                    <IconButton size=\"small\" color=\"primary\" onClick={handleEditOrderDetail}>\r\n                                        <EditOutlined />\r\n                                    </IconButton>\r\n                                </Tooltip>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Table \r\n                        scroll={{ x: '100%' }} \r\n                        size=\"small\"  \r\n                        expandable={{ expandedRowRender }}\r\n                        columns={columnsOrderDetail} \r\n                        dataSource={orderDetailData} \r\n                        pagination={false} \r\n                        bordered/>\r\n                </Card>\r\n                <Row gutter={16}>\r\n                    <Col md={24} sm={24} >\r\n                        <Card hoverable>\r\n                            <Row>\r\n                                <Col md={16} sm={24} >\r\n                                    <Title level={5}>Material Order List</Title>\r\n                                </Col>\r\n                                <Col md={8} sm={24} >\r\n                                    <div className='float-right'>\r\n                                        <Tooltip title=\"Add Material\">\r\n                                            <IconButton size=\"small\" color=\"primary\" onClick={showModalAddMaterial}>\r\n                                                <PlusOutlined />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip title=\"Download BOQ Ref\">\r\n                                            <IconButton size=\"small\" color=\"success\" onClick={handleDownloadBtn} >\r\n                                                <FileExcelOutlined />\r\n                                            </IconButton>\r\n                                            {/* <Button type=\"primary\" icon={<FileExcelOutlined />} onClick={handleDownloadBtn} /> */}\r\n                                        </Tooltip>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                            <Space direction=\"vertical\" style={{ width: '100%' }} >\r\n                                <Table \r\n                                    className=\"components-table-demo-nested\"\r\n                                    columns={columnsMaterialOrder} \r\n                                    scroll={{ x: '100%' }} \r\n                                    dataSource={orderDetailMaterial} \r\n                                    size=\"small\"\r\n                                    pagination={false} \r\n                                />\r\n                                <Divider />\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <div className='float-right'>\r\n                                            <Space>\r\n                                                <Button type=\"default\" htmlType=\"submit\" onClick={handleSaveDraft}>\r\n                                            Save as Draft\r\n                                                </Button>\r\n                                                {stockCheck ? <Button type=\"primary\" htmlType=\"submit\" onClick={handleBookSubmit}>\r\n                                            Book and Submit\r\n                                                </Button> :\r\n                                                    <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmitDirect}>\r\n                                                Submit\r\n                                                    </Button>\r\n                                                }\r\n                                            </Space>\r\n                                        </div>\r\n                                    \r\n                                    </Col>\r\n                                </Row>\r\n                            </Space>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Space>\r\n            <Modal title=\"Add Material\" \r\n                visible={isModalAddMaterial} \r\n                onOk={handleOk} \r\n                onCancel={handleCancel}\r\n                footer={null}\r\n            >\r\n                {materialChoosed.length == 0 ? \r\n                    <Table \r\n                        scroll={{ x: '100%' }} \r\n                        size=\"small\"  \r\n                        columns={stockCheck? columnsMaterialListExcludedStockCheck : columnsMaterialListExcluded} \r\n                        dataSource={orderDetailMaterialExcluded} \r\n                        pagination={false} \r\n                        bordered/>    :\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{\r\n                            'materialCode':materialChoosed.materialCode,\r\n                            'materialDesc': materialChoosed.materialDesc,\r\n                            'subCategoryName': materialChoosed.subCategoryName,\r\n                            'neType': \"NE\",\r\n                            'balance': materialChoosed.balance,\r\n                            'reqQTY' : 1\r\n                        }}\r\n                        onFinish={onFinishAddMaterial}\r\n                        onFinishFailed={onFinishFailedAddMaterial}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item\r\n                            label=\"Material Code\"\r\n                            name=\"materialCode\"\r\n                        >\r\n                            <Input disabled/>\r\n                        </Form.Item>\r\n                  \r\n                        <Form.Item\r\n                            label=\"Material Desc\"\r\n                            name=\"materialDesc\"                            \r\n                        >\r\n                            <Input disabled/>\r\n                        </Form.Item>\r\n                  \r\n                        <Form.Item\r\n                            label=\"Subcategory Name\"\r\n                            name=\"subCategoryName\"\r\n\r\n                        >\r\n                            <Input disabled/>\r\n                        </Form.Item>\r\n                  \r\n                        <Form.Item \r\n                            label=\"NE Type\"\r\n                            name=\"neType\"\r\n                        >\r\n                            <Select style={{ width: 120 }} onChange={handleChangeNeType} disabled>\r\n                                <Option value=\"NE\">NE</Option>\r\n                                <Option value=\"FE\">FE</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                        \r\n                        {stockCheck ? <Form.Item \r\n                            label=\"Balance\"\r\n                            name=\"balance\"\r\n                        >\r\n                            <InputNumber disabled />\r\n                        </Form.Item> :\r\n                            null}\r\n\r\n                        <Form.Item \r\n                            label=\"Req QTY\"\r\n                            name=\"reqQTY\"\r\n                            rules={[{ required: true, message: 'Please input req qty!' }]}\r\n                        >\r\n                            <InputNumber />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                            <Space>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Add Material\r\n                                </Button>\r\n                            </Space>\r\n                        </Form.Item>\r\n                    </Form>\r\n                }\r\n\r\n            </Modal>\r\n\r\n\r\n            <Modal title=\"Edit Material\" \r\n                visible={isModalEditMaterial} \r\n                onOk={handleOkEdit} \r\n                onCancel={handleCancelEdit}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n            >\r\n                {/* <TextField\r\n                    disabled\r\n                    id=\"outlined-disabled\"\r\n                    label=\"Disabled\"\r\n                    defaultValue={selectedMaterialCode}\r\n                /> */}\r\n                <Form\r\n                    name=\"basic\"\r\n                    labelCol={{ span: 8 }}\r\n                    wrapperCol={{ span: 16 }}\r\n                    initialValues={{\r\n                        'orderMaterialId': selectedMaterialId,\r\n                        'materialCode': selectedMaterialCode,\r\n                        'materialDesc': selectedMaterialDesc,\r\n                        'uOM': selectedUOM,\r\n                        'qtyRef': selectedQTYRef,\r\n                        'reqQTY': selectedQTYReq,\r\n                        'balance': selectedBalance,\r\n                        'orderStatus': selectedOrderStatus,\r\n                        'neType': \"NE\",\r\n                    }}\r\n                    onFinish={onFinishEditMaterial}\r\n                    onFinishFailed={onFinishFailedEditMaterial}\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        hidden\r\n                        label=\"Material Code\"\r\n                        name=\"orderMaterialId\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Material Code\"\r\n                        name=\"materialCode\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                  \r\n                    <Form.Item\r\n                        label=\"Material Desc\"\r\n                        name=\"materialDesc\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                  \r\n                    <Form.Item\r\n                        label=\"UOM\"\r\n                        name=\"uOM\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"QTY Ref\"\r\n                        name=\"qtyRef\"\r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        label=\"Balance\"\r\n                        name=\"balance\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n                  \r\n                    <Form.Item \r\n                        label=\"Site\"\r\n                        name=\"neType\"\r\n                    >\r\n                        <Select style={{ width: 120 }} onChange={handleChangeNeType} disabled>\r\n                            <Option value=\"NE\">NE</Option>\r\n                            <Option value=\"FE\">FE</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        label=\"Order Status\"\r\n                        name=\"orderStatus\"\r\n                            \r\n                    >\r\n                        <Input disabled/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item \r\n                        label=\"Req QTY\"\r\n                        name=\"reqQTY\"\r\n                        rules={[{ required: true, message: 'Please input req qty!' }]}\r\n                    >\r\n                        <InputNumber />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                        <Space>\r\n                                \r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                            </Button>\r\n                        </Space>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","export const getDataSiteInfo = (payload) => {\r\n    return {\r\n        type: \"GET_DATA_SITE_INFO\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const setDataSiteInfo = (payload) => {\r\n    return {\r\n        type: \"SET_DATA_SITE_INFO\",\r\n        payload,\r\n    };\r\n};\r\n  \r\n\r\nexport const getMaterialOrderDetail = (payload) => {\r\n    return {\r\n        type: \"GET_MATERIAL_ORDER_DETAIL\",\r\n        payload,\r\n    };\r\n};\r\nexport const setMaterialOrderDetail = (payload) => {\r\n    return {\r\n        type: \"SET_MATERIAL_ORDER_DETAIL\",\r\n        payload,\r\n    };\r\n};\r\nexport const getLsp = (payload) => {\r\n    return {\r\n        type: \"GET_LSP\",\r\n        payload,\r\n    };\r\n};\r\nexport const setLsp = (payload) => {\r\n    return {\r\n        type: \"SET_LSP\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDeliveryList = (payload) => {\r\n    return {\r\n        type: \"GET_DELIVERY_LIST\",\r\n        payload,\r\n    };\r\n};\r\nexport const setDeliveryList = (payload) => {\r\n    return {\r\n        type: \"SET_DELIVERY_LIST\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDeliveryTransport = (payload) => {\r\n    return {\r\n        type: \"GET_DELIVERY_TRANSPORT\",\r\n        payload,\r\n    };\r\n};\r\nexport const setDeliveryTransport = (payload) => {\r\n    return {\r\n        type: \"SET_DELIVERY_TRANSPORT\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDeliveryMode = (payload) => {\r\n    return {\r\n        type: \"GET_DELIVERY_MODE\",\r\n        payload,\r\n    };\r\n};\r\nexport const setDeliveryMode = (payload) => {\r\n    return {\r\n        type: \"SET_DELIVERY_MODE\",\r\n        payload,\r\n    };\r\n};\r\nexport const postLogistikFormSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_LOGISTIK_FORM_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const postLogistikForm = (payload) => {\r\n    return {\r\n        type: \"POST_LOGISTIK_FORM\",\r\n        payload,\r\n    };\r\n};\r\nexport const postAsDraft = (payload) => {\r\n    return {\r\n        type: \"POST_AS_DRAFT\",\r\n        payload,\r\n    };\r\n};\r\nexport const postAsDraftSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_AS_DRAFT_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getIdDelivery = (payload) => {\r\n    return {\r\n        type: \"GET_ID_DELIVERY\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOdi = (payload) => {\r\n    return {\r\n        type: \"GET_ODI\",\r\n        payload,\r\n    };\r\n};\r\nexport const getIdTaskPending = (payload) => {\r\n    return {\r\n        type: \"GET_ID_TASK_PENDING\",\r\n        payload,\r\n    };\r\n};\r\nexport const getLogisticPending = (payload) => {\r\n    return {\r\n        type: \"GET_LOGISTIK_PENDING\",\r\n        payload,\r\n    };\r\n};\r\nexport const setLogistikPending = (payload) => {\r\n    return {\r\n        type: \"SET_LOGISTIK_PENDING\",\r\n        payload,\r\n    };\r\n};\r\n\r\n","/* eslint-disable indent */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport {\r\n    getDataSiteInfo,\r\n    getDeliveryList,\r\n    getDeliveryMode,\r\n    getDeliveryTransport,\r\n    getIdDelivery,\r\n    getLsp,\r\n    getMaterialOrderDetail,\r\n    postAsDraft,\r\n    postLogistikForm,\r\n    postLogistikFormSuccess\r\n} from \"@app/store/action/logistikFormAction\"\r\nimport {getDataSite} from \"@app/store/action/siteConditionAction\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    Table,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Space,\r\n    Typography,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Tabs,\r\n    Button,\r\n    Switch,\r\n    Modal\r\n   \r\n} from \"antd\"\r\nimport HeaderChanger from \"@app/components/cardheader/HeaderChanger\"\r\nimport moment from \"moment\"\r\nimport \"./style.css\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function LogisticForm() {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const {Title} = Typography\r\n    const [selectedButton, setSelectedButton] = useState(true)\r\n    const {TabPane} = Tabs\r\n    const [wh, setWh] = useState(\"\")\r\n    const [deliveryRequest, setDeliveryRequest] = useState(\"\")\r\n    const [deliveryTransport, setDeliveryTransport] = useState(\"\")\r\n    const [delivMode, setDeliveMode] = useState(\"\")\r\n    const [modeTransport, setModeTransport] = useState(\"\")\r\n    const [page, setPage] = useState(1)\r\n    const [remarks, setRemarks] = useState(\"\")\r\n    const [note,setNote] = useState(\"\")\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isModalCancelVisible, setIsModalCancelVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getDataSiteInfo())\r\n        dispatch(getMaterialOrderDetail())\r\n        dispatch(getLsp())\r\n        dispatch(getDeliveryList())\r\n        dispatch(getDeliveryMode())\r\n    }, [dispatch])\r\n\r\n    const lsp = useSelector((state) => state.logistikFormReducer.dataLsp)\r\n    const deliveryList = useSelector(\r\n        (state) => state.logistikFormReducer.detaDeliveryList\r\n    )\r\n    const idDeliveryRequest = useSelector(\r\n        (state) => state.logistikFormReducer.idDelivery\r\n    )\r\n    const deliveryMode = useSelector(\r\n        (state) => state.logistikFormReducer.detaDeliveryMode\r\n    )\r\n    const materialOrder = useSelector(\r\n        (state) => state.logistikFormReducer.dataOrderDetail\r\n    )\r\n    const dataSite = useSelector(\r\n        (state) => state.logistikFormReducer.dataSiteInfo\r\n    )\r\n    const DataDeliveryTransport = useSelector(state=> state.logistikFormReducer.detaDeliveryTransport)\r\n    const dataOdi = useSelector(state=> state.logistikFormReducer.odi)\r\n    const dataStats = useSelector(state=>state.logistikFormReducer.stats.status)\r\n    const dataStatsDraft = useSelector(state=>state.logistikFormReducer.statsDraft.status)\r\n\r\n   \r\n    const index2 = deliveryRequest\r\n\r\n    const handleDeliveryChange = (e) => {\r\n        setDeliveryRequest(e)\r\n        dispatch(getIdDelivery(e))\r\n        dispatch(getDeliveryTransport())\r\n    };\r\n\r\n    const handlePost = () => {\r\n         dispatch(postLogistikForm({\"orderDetailId\":dataOdi,\"whTeamId\":wh,\"cmrId\":deliveryRequest,\"transportModeId\":modeTransport,\"transportTeamId\":deliveryTransport,\"deliveryModeId\":delivMode,\"note\":note}))\r\n    \r\n        if( dataStats == 200){\r\n            history.push('/sitelist/logistic')\r\n         \r\n        }\r\n\r\n    };\r\n\r\n   const saveDraft = () => {\r\n        dispatch(postAsDraft({\"orderDetailId\":dataOdi,\"remarks\":remarks}))\r\n        if( dataStats == 200){\r\n            history.push('/sitelist/logistic')\r\n           \r\n        }\r\n    };\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n        console.log(isModalVisible);\r\n    };\r\n    const cancelNavigate = () => {\r\n        history.push('/sitelist/logistic')\r\n    };\r\n    const showModalCancel = () => {\r\n        setIsModalCancelVisible(true);\r\n        setIsModalVisible(false)\r\n        console.log(isModalVisible);\r\n    };\r\n    const cancelModal = () => {\r\n        setIsModalVisible(false);\r\n        console.log(isModalVisible);\r\n    };\r\n    const cancelModal2 = () => {\r\n        setIsModalCancelVisible(false);\r\n        console.log(isModalVisible);\r\n    };\r\n    const columns = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n\r\n        {\r\n            title: \"PO No/RO No\",\r\n            dataIndex: \"cpoNo\"\r\n        },\r\n        {\r\n            title: \"General Scope\",\r\n            dataIndex: \"requestTypeName\"\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\"\r\n        },\r\n\r\n        {\r\n            title: \"Package Name\",\r\n            dataIndex: \"packageName\"\r\n        },\r\n        {\r\n            title: \"Project Contract\",\r\n            dataIndex: \"projectName\"\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\"\r\n        }\r\n    ]\r\n\r\n    const columnsMaterial = [\r\n        {\r\n            title: \"Material Code\",\r\n            dataIndex: \"materialCode\"\r\n        },\r\n        {\r\n            title: \"Material Desc\",\r\n            dataIndex: \"materialDesc\"\r\n        },\r\n        {\r\n            title: \"Ref QTY\",\r\n            dataIndex: \"refQTY\"\r\n        },\r\n        {\r\n            title: \"Req QTY\",\r\n            dataIndex: \"reqQTY\"\r\n        },\r\n\r\n        {\r\n            title: \"UOM\",\r\n            dataIndex: \"uom\"\r\n        },\r\n        {\r\n            title: \"Site\",\r\n            dataIndex: \"site\"\r\n        }\r\n    ]\r\n    const CardTitle = (title) => <Title level={5}>{title}</Title>\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Logistic Form\" />\r\n            <Col span={24}>\r\n                <div className=\"card card-primary\">\r\n                <Card hoverable title={CardTitle(\"Site Info\")}>\r\n                    {/* <div className=\"card-header align-middle\">\r\n                        <h3 className=\"card-title\">Site Info</h3>\r\n                    </div> */}\r\n                    <div className=\"card-body\">\r\n                        <Table\r\n                            columns={columns}\r\n                            pagination={false}\r\n                            dataSource={dataSite}\r\n                        />\r\n                    </div>\r\n                    </Card>\r\n                </div>\r\n            </Col>\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Card hoverable title={CardTitle(\"Order Request Detail\")}>\r\n                        <Tabs defaultActiveKey=\"1\" centered={false}>\r\n                            <TabPane tab=\"Order Request Detail\" key=\"1\">\r\n                                {dataSite.length == 0 ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <Card\r\n                                        hoverable\r\n                                        title={CardTitle(\"Order Request Detail\")}\r\n                                    >\r\n                                        <Form\r\n                                            labelCol={{span: 8}}\r\n                                            wrapperCol={{span: 14}}\r\n                                            layout=\"horizontal\"\r\n                                        >\r\n                                            <Form.Item label=\"Order Type\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value={\r\n                                                        dataSite[0].orderType\r\n                                                    }\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Inventory Code\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value={\r\n                                                        dataSite[0]\r\n                                                            .inventoryCode\r\n                                                    }\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Request Base\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value={\r\n                                                        dataSite[0]\r\n                                                            .requestTypeName\r\n                                                    }\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Site Location\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value={\r\n                                                        dataSite[0]\r\n                                                            .siteCondition\r\n                                                    }\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"CT Name\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value=\"Near End (NE)\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Origin\">\r\n                                                <Input disabled value=\"Site\" />\r\n                                            </Form.Item>\r\n                                            <Form.Item label=\"Destination\">\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value=\"DOP Semarang\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"SOW\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input\r\n                                                    disabled\r\n                                                    value=\"CWH Cikarang\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                            <Form.Item\r\n                                                label=\"Delivery Date\"\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message:\r\n                                                            \"Missing Inventory Code\"\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled value={\r\n                                                    moment( dataSite[0]\r\n                                                            .expectedDeliveryDate).format(\"YYYY-MM-DD\")\r\n                                                       \r\n                                                    } />\r\n                                            </Form.Item>\r\n                                            {/* <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">Confirm</Button>\r\n                                    <Button type=\"danger\">Cancel</Button>\r\n                                </Form.Item> */}\r\n                                        </Form>\r\n                                    </Card>\r\n                                )}\r\n                            </TabPane>\r\n                            <TabPane tab=\"Material Order\" key=\"2\">\r\n                                <Card hoverable title={CardTitle(\"Matrial Order\")}>\r\n                                    <Table\r\n                                        scroll={{x: \"100%\"}}\r\n                                        bordered\r\n                                        columns={columnsMaterial}\r\n                                        pagination={false}\r\n                                        dataSource={materialOrder}\r\n                                    />\r\n                                </Card>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </Card>\r\n                </Col>\r\n                <Col span={12}>\r\n                    <Card hoverable title={CardTitle(\"Logistik Form\")}>\r\n                        <Form\r\n                            labelCol={{span: 9}}\r\n                            wrapperCol={{span: 13}}\r\n                            layout=\"horizontal\"\r\n                        >\r\n                            <Form.Item label=\"WH Team\">\r\n                                <Select\r\n                                    onChange={(e) => setWh(e)}\r\n                                    placeholder=\"Select an option\"\r\n                                >\r\n                                    {lsp.map((inv) => (\r\n                                        <Select.Option value={inv.subconId}>\r\n                                            {inv.subconName}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Delivery Request\">\r\n                                <Select\r\n                                    onChange={(e) => handleDeliveryChange(e)}\r\n                                    placeholder=\"Select an option\"\r\n                                >\r\n                                    {deliveryList.map((inv) => (\r\n                                        <Select.Option value={inv.cdmrId}>\r\n                                            {inv.cdmrName}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Delivery Request Transport\">\r\n                                {deliveryRequest == \"\" ? (\r\n                                    <Select\r\n                                        status=\"warning\"\r\n                                        disabled\r\n                                        placeholder=\"Please Select Delivery Request Type\"\r\n                                    ></Select>\r\n                                ) : (\r\n                                    <Select\r\n                                        onChange={(e) => setModeTransport(e)}\r\n                                        placeholder=\"Select an option\"\r\n                                    >\r\n                                        {DataDeliveryTransport.map((e)=>(\r\n                                            <Select.Option value={e.transportModeId}>\r\n                                                {e.transportMode}\r\n                                            </Select.Option>\r\n                                        ))}\r\n                                    </Select>\r\n                                )}\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Transport Team\">\r\n                                <Select\r\n                                    onChange={(e) => setDeliveryTransport(e)}\r\n                                    placeholder=\"Select an option\"\r\n                                >\r\n                                    {lsp.map((inv) => (\r\n                                        <Select.Option value={inv.subconId}>\r\n                                            {inv.subconName}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Mode Of Transport\">\r\n                                <Select\r\n                                    onChange={(e) => setDeliveMode(e)}\r\n                                    placeholder=\"Select an option\"\r\n                                >\r\n                                    {\r\n                                    deliveryMode.map((inv) => (\r\n                                        <Select.Option value={inv.deliveryModeId}>\r\n                                            {inv.deliveryMode}\r\n                                        </Select.Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item label=\"Note\">\r\n                            <TextArea rows={4} onChange={(e) => setNote(e)}/>\r\n                            </Form.Item>\r\n                        </Form>\r\n                        \r\n                        <div className=\"float-right\">\r\n                            <Col span={4} md={8} sm={24}>\r\n                                <Space direction=\"horizontal\">\r\n                                    <Button\r\n                                        type=\"danger\"\r\n                                        onClick={() =>\r\n                                           showModalCancel()\r\n                                        }\r\n                                    >\r\n                                        Order Request Cancel\r\n                                    </Button>\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        onClick={() =>\r\n                                            showModal()\r\n                                        }\r\n                                    >\r\n                                        Confirm\r\n                                    </Button>\r\n                                    <Button\r\n                                       \r\n                                        htmlType=\"submit\"\r\n                                        onClick={() =>\r\n                                            cancelNavigate()\r\n                                        }\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                </Space>\r\n                            </Col>\r\n                        </div>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Modal title=\"Confirm Order Request\" visible={isModalVisible}  onCancel={cancelModal} \r\n            footer={[\r\n                <Button key=\"back\"  onClick={cancelModal}>\r\n                Cancel\r\n                </Button>,\r\n                <Button key=\"submit\" type=\"primary\" onClick={handlePost} >\r\n                Submit\r\n                </Button>,\r\n                \r\n            ]} >\r\n                <Typography>Are you sure you want to confirm  ?\r\n</Typography>\r\n      \r\n            </Modal>\r\n            <Modal title=\"Cancel Order Request\" visible={isModalCancelVisible}  onCancel={cancelModal2} \r\n            footer={\r\n                remarks.length <= 10 ? ( [\r\n                \r\n                \r\n                    <Button disabled key=\"back\" type=\"danger\" onClick={saveDraft}>\r\n                    Reject\r\n                    </Button>,\r\n                    <Button key=\"submit\"  onClick={cancelModal2} >\r\n                    Close\r\n                    </Button>,\r\n                    \r\n                ]):( [\r\n                \r\n                \r\n                    <Button key=\"back\" type=\"danger\" onClick={saveDraft}>\r\n                    Reject\r\n                    </Button>,\r\n                    <Button key=\"submit\"  onClick={cancelModal2} >\r\n                    Close\r\n                    </Button>,\r\n                    \r\n                ])\r\n               } >\r\n                <Typography>Reason Of Cancelation :\r\n</Typography>\r\n<TextArea rows={4} onChange={(e) => setRemarks(e.target.value)}/>\r\n      \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useEffect,useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {Table} from 'antd'\r\nimport { getIdTaskPending, getLogisticPending, getOdi } from '@app/store/action/logistikFormAction'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled} from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom'\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger'\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\n\r\nexport default function Logistic() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [page,setPage] = useState(1)\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getLogisticPending())\r\n    },[]) \r\n\r\n    const dataPending = useSelector(state => state.logistikFormReducer.dataLogisticPending)\r\n    const dataIdTaskPending = useSelector(state => state.logistikFormReducer.idTaskPending)\r\n\r\n    const navigateTo = () => {\r\n      \r\n        history.push(`/sitelist/logistikform?odi=${dataIdTaskPending}`)\r\n    }\r\n\r\n    const handleEdit =(record) => {\r\n        dispatch(getOdi(record))\r\n        dispatch(getIdTaskPending(record))\r\n        navigateTo()\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title:'No',\r\n            key:\"index\",\r\n            render:(value, item, index) => (page )  + index\r\n        },\r\n        {\r\n            title:'Request No',\r\n            dataIndex:'requestNo',\r\n            ...Search('requestNo'),\r\n        },\r\n        {\r\n            title:'Order Type',\r\n            dataIndex:'orderType',\r\n            ...Search('orderType'),\r\n        },\r\n        {\r\n            title:'Site No',\r\n            dataIndex:'siteNo',\r\n            ...Search('siteNo'),\r\n        },\r\n        {\r\n            title:'Origin',\r\n            dataIndex:'originName',\r\n            ...Search('originName'),\r\n        },\r\n        {\r\n            title:'Destination',\r\n            dataIndex:'destinationName',\r\n            ...Search('destinationName'),\r\n        },\r\n        {\r\n            title:'Site Name',\r\n            dataIndex:'siteName',\r\n            ...Search('siteName'),\r\n        },\r\n        {\r\n            title:'Region',\r\n            dataIndex:'region',\r\n            ...Search('region'),\r\n        },\r\n        {\r\n            title:'Scope Name',\r\n            dataIndex:'scopeName',\r\n            ...Search('scopeName'),\r\n        },\r\n        {\r\n            title:'Scope Detail',\r\n            dataIndex:'scopeDetail',\r\n            ...Search('scopeDetail'),\r\n        },\r\n        {\r\n            title:'Delivery Type',\r\n            dataIndex:'deliveryType',\r\n            ...Search('deliveryDate'),\r\n        },\r\n        {\r\n            title:'Action',\r\n            render:(record)=>{\r\n                return <EditOutlined onClick={() => handleEdit(record.orderDetailId)}/>\r\n            }\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n\r\n            <HeaderChanger title=\"Logistic Task Pending\"/>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={dataPending}\r\n                scroll={{ x: '100%' }}\r\n               \r\n                pagination={{\r\n                    pageSizeOptions: ['5','10','20','30', '40'],\r\n                    showSizeChanger: true,\r\n                    position: [\"bottomLeft\"],\r\n                }}\r\n                    \r\n                style={{marginTop : 36}}\r\n                size='small'\r\n                bordered\r\n            />\r\n        \r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getAprovalPending = (payload) => {\r\n    return {\r\n        type: \"GET_APROVAL_PENDING\",\r\n        payload,\r\n    };\r\n};\r\nexport const setAprovalPending = (payload) => {\r\n    return {\r\n        type: \"SET_APROVAL_PENDING\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOrderDetail = (payload) => {\r\n    return {\r\n        type: \"GET_ORDER_REQUEST_DETAIL\",\r\n        payload,\r\n    };\r\n};\r\nexport const setOrderDetail = (payload) => {\r\n    return {\r\n        type: \"SET_ORDER_REQUEST_DETAIL\",\r\n        payload,\r\n    };\r\n};\r\nexport const getMaterial = (payload) => {\r\n    return {\r\n        type: \"GET_MATERIAL\",\r\n        payload,\r\n    };\r\n};\r\nexport const setMaterial = (payload) => {\r\n    return {\r\n        type: \"SET_MATERIAL\",\r\n        payload,\r\n    };\r\n};\r\nexport const getLog = (payload) => {\r\n    return {\r\n        type: \"GET_LOG\",\r\n        payload,\r\n    };\r\n};\r\nexport const setLog = (payload) => {\r\n    return {\r\n        type: \"SET_LOG\",\r\n        payload,\r\n    };\r\n};\r\nexport const postAprove = (payload) => {\r\n    return {\r\n        type: \"POST_APROVE\",\r\n        payload,\r\n    };\r\n};\r\nexport const postAproveSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_APROVE_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const postReject = (payload) => {\r\n    return {\r\n        type: \"POST_REJECT\",\r\n        payload,\r\n    };\r\n};\r\nexport const postRejectSuccess = (payload) => {\r\n    return {\r\n        type: \"POST_REJECT_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOdi = (payload) => {\r\n    return {\r\n        type: \"GET_ODI\",\r\n        payload,\r\n    };\r\n};\r\nexport const getSno = (payload) => {\r\n    return {\r\n        type: \"GET_SNO\",\r\n        payload,\r\n    };\r\n};","import {getAprovalPending, getSno,getOdi} from \"@app/store/action/aprovalTaskPendingAction\"\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {Table} from \"antd\"\r\nimport {EditOutlined} from \"@ant-design/icons\"\r\nimport {useHistory} from \"react-router-dom\"\r\nimport HeaderChanger from \"@app/components/cardheader/HeaderChanger\"\r\n\r\n\r\nexport default function TableAproval() {\r\n    const dispatch = useDispatch()\r\n\r\n    const history = useHistory()\r\n    const [page, setPage] = useState(1)\r\n    const [odi, setOdi] = useState(\"\")\r\n    const [sno, setSno] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        dispatch(getAprovalPending())\r\n    }, [])\r\n\r\n    const navigateTo = () => {\r\n        history.push(`/sitelist/aprovaltaskpendingform`)\r\n    }\r\n\r\n    const handleEdit = (record, e) => {\r\n        setOdi(record)\r\n        setSno(e)\r\n        dispatch(getOdi(record))\r\n        dispatch(getSno(e))\r\n        navigateTo()\r\n    }\r\n\r\n    const dataAproval = useSelector(\r\n        (state) => state.aprovalTaskPendingReducer.dataAprovalPending\r\n    )\r\n\r\n    const columns = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Request No\",\r\n            dataIndex: \"requestNo\"\r\n        },\r\n        {\r\n            title: \"Order Type\",\r\n            dataIndex: \"orderType\"\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\"\r\n        },\r\n        {\r\n            title: \"Origin\",\r\n            dataIndex: \"originName\"\r\n        },\r\n        {\r\n            title: \"Destination\",\r\n            dataIndex: \"destinationName\"\r\n        },\r\n        {\r\n            title: \"Site Name\",\r\n            dataIndex: \"siteName\"\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Scope Name\",\r\n            dataIndex: \"scopeName\"\r\n        },\r\n        {\r\n            title: \"Scope Detail\",\r\n            dataIndex: \"scopeDetail\"\r\n        },\r\n        {\r\n            title: \"Delivery Type\",\r\n            dataIndex: \"deliveryType\"\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            render: (record, e) => {\r\n                return (\r\n                    <EditOutlined\r\n                        onClick={() => handleEdit(record.orderDetailId, e.sno)}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n           \r\n            <HeaderChanger title=\"Approval Task Pending\"/>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={dataAproval}\r\n                scroll={{x: \"100%\"}}\r\n                pagination={{\r\n                    pageSizeOptions: [\"5\", \"10\", \"20\", \"30\", \"40\"],\r\n                    showSizeChanger: true,\r\n                    position: [\"bottomLeft\"]\r\n                }}\r\n                style={{marginTop: 36}}\r\n                size=\"small\"\r\n                bordered\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react/no-unstable-nested-components */\r\nimport React, {useEffect, useState} from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    Table,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Space,\r\n    Typography,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Tabs,\r\n    Button,\r\n    Switch,\r\n    Modal\r\n} from \"antd\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport moment from 'moment'\r\nimport HeaderChanger from \"@app/components/cardheader/HeaderChanger\"\r\nimport { getLog, getMaterial, getOrderDetail, postAprove,postReject,getOdi,getSno } from \"@app/store/action/aprovalTaskPendingAction\"\r\n\r\nconst { TextArea } = Input;\r\n\r\nexport default function AprovalTaskPendingForm() {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    \r\n    const [page, setPage] = useState(1)\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [isModalRejectVisible, setIsModalRejectVisible] = useState(false);\r\n    const [remarks, setRemarks] = useState(\"\")\r\n    const {Title} = Typography\r\n    const {TabPane} = Tabs\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetail())\r\n        dispatch(getMaterial())\r\n        dispatch(getLog())\r\n    }, [])\r\n\r\n    const dataOrderDetail = useSelector(state=>state.aprovalTaskPendingReducer.dataOrderRequestDetail)\r\n    const dataMaterialOrder = useSelector(state=>state.aprovalTaskPendingReducer.dataMaterial)\r\n    const dataLogOrder = useSelector(state=>state.aprovalTaskPendingReducer.dataLog)\r\n    const dataSno = useSelector(state=>state.aprovalTaskPendingReducer.sno)\r\n    const dataUserId = useSelector(state=>state.auth.user.uid)\r\n    const dataStats = useSelector(state=>state.aprovalTaskPendingReducer.stats.status)\r\n    const dataStats2 = useSelector(state=>state.aprovalTaskPendingReducer.statsReject.status)\r\n\r\n    const showModal = () => {\r\n        setIsModalVisible(true);\r\n       \r\n    };\r\n   \r\n    const showModalReject = () => {\r\n        setIsModalRejectVisible(true);\r\n       \r\n       \r\n    };\r\n    const cancelModal = () => {\r\n        setIsModalVisible(false);\r\n    }\r\n    const cancelModal2 = () => {\r\n        setIsModalRejectVisible(false);\r\n    }\r\n\r\n    const handleAproval = () => {\r\n        dispatch(postAprove({\"sno\":dataSno,\"LMBY\":dataUserId}))\r\n        if(dataStats == \"success\"){\r\n            history.push('/sitelist/aprovaltaskpending')\r\n        }\r\n        dispatch(getOdi(\"\"))\r\n        dispatch(getSno(\"\"))\r\n    }\r\n    const handleReject = () => {\r\n        dispatch(postReject({\"sno\":dataSno,\"LMBY\":dataUserId,\"reasonOfRejection\":remarks}))\r\n        if(dataStats2 == \"success\"){\r\n            history.push('/sitelist/aprovaltaskpending')\r\n        }\r\n        dispatch(getOdi(\"\"))\r\n        dispatch(getSno(\"\"))\r\n    \r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"PO No/RO No\",\r\n            dataIndex: \"cpoNo\"\r\n        },\r\n        {\r\n            title: \"General Scope\",\r\n            dataIndex: \"requestTypeName\"\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\"\r\n        },\r\n\r\n        {\r\n            title: \"Package Name\",\r\n            dataIndex: \"packageName\"\r\n        },\r\n        {\r\n            title: \"Project Contract\",\r\n            dataIndex: \"projectName\"\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\"\r\n        }\r\n    ]\r\n    const columnsMaterial = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Category\",\r\n            dataIndex: \"site\"\r\n        },\r\n        {\r\n            title: \"Item Code\",\r\n            dataIndex: \"materialCode\"\r\n        },\r\n\r\n        {\r\n            title: \"Item Desc\",\r\n            dataIndex: \"materialDesc\"\r\n        },\r\n        {\r\n            title: \"BOQ Ref QTY\",\r\n            dataIndex: \"refQTY\"\r\n        },\r\n        {\r\n            title: \"Delta QTY\",\r\n            dataIndex: \"reqQTY\"\r\n        }\r\n    ]\r\n    const columnsLog = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Incoming Date\",\r\n            dataIndex: \"incomingDate\"\r\n        },\r\n        {\r\n            title: \"Execute Date\",\r\n            dataIndex: \"executeDate\"\r\n        },\r\n\r\n        {\r\n            title: \"Execute By\",\r\n            dataIndex: \"executedBy\"\r\n        },\r\n        {\r\n            title: \"Event Desc\",\r\n            dataIndex: \"taskName\"\r\n        },\r\n        {\r\n            title: \"Remarks\",\r\n            dataIndex: \"remarks\"\r\n        }\r\n    ]\r\n    const columnsOrderDetail = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Order Type\",\r\n            dataIndex: \"orderType\"\r\n        },\r\n        {\r\n            title: \"Delivery Type\",\r\n            dataIndex: \"deliveryType\"\r\n            \r\n        },\r\n        {\r\n            title: \"Inventory Code\",\r\n            dataIndex: \"inventoryCode\"\r\n        },\r\n       \r\n        {\r\n            title: \"Site Location\",\r\n            dataIndex: \"siteCondition\"\r\n        },\r\n        {\r\n            title: \"CT Name\",\r\n            dataIndex: \"ctName\"\r\n        },\r\n        {\r\n            title: \"Site Name\",\r\n            dataIndex: \"siteName\"\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Zone\",\r\n            dataIndex: \"zone\"\r\n        },\r\n        {\r\n            title: \"Requester\",\r\n            dataIndex: \"requesterName\"\r\n        },\r\n        {\r\n            title: \"Request Date\",\r\n            dataIndex: \"requestDate\",\r\n            render : (text) =>{return(\r\n                <p>{moment(text).format(\"YYYY-MM-DD\")}</p>\r\n            )}\r\n        },\r\n        {\r\n            title: \"Delivery Date\",\r\n            dataIndex: \"expectedDeliveryDate\",\r\n            render : (text) =>{return(\r\n                <p>{moment(text).format(\"YYYY-MM-DD\")}</p>\r\n            )}\r\n        },\r\n\r\n       \r\n      \r\n    ]\r\n    \r\n    // eslint-disable-next-line react/jsx-no-undef\r\n    const CardTitle = (title) => <Title level={5}>{title}</Title>\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Aproval Task Pending Form\" />\r\n            <Col span={24}>\r\n                <div className=\"card card-primary\">\r\n                   \r\n                    <div className=\"card-body\">\r\n                        <Table columns={columns} pagination={false} dataSource={dataOrderDetail} />\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <Card hoverable >\r\n                    <Tabs defaultActiveKey=\"1\" centered={false}>\r\n                        <TabPane tab=\"Order Request Detail\" key=\"1\">\r\n                            <Card title={CardTitle(\"Order Request\")}>\r\n                                <div className=\"card-body\">\r\n                                    <Table\r\n                                        columns={columnsOrderDetail}\r\n                                        pagination={false}\r\n                                        dataSource={dataOrderDetail}\r\n                                    />\r\n                                </div>\r\n                            </Card>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Material Order\" key=\"2\">\r\n                            <Card title={CardTitle(\"Material Order\")}>\r\n                                <div className=\"card-body\">\r\n                                    <Table\r\n                                        columns={columnsMaterial}\r\n                                        pagination={false}\r\n                                        dataSource={dataMaterialOrder}\r\n                                    />\r\n                                </div>\r\n                            </Card>\r\n                        </TabPane>\r\n                        <TabPane tab=\"Log\" key=\"3\">\r\n                            <Card title={CardTitle(\"Log\")}>\r\n                                <div className=\"card-body\">\r\n                                    <Table\r\n                                        columns={columnsLog}\r\n                                        pagination={false}\r\n                                        dataSource={dataLogOrder}\r\n                                    />\r\n                                </div>\r\n                            </Card>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                    <div className=\"float-right mt-4\">\r\n                        <Col span={4} md={8} sm={24}>\r\n                            <Space direction=\"horizontal\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    htmlType=\"submit\"\r\n                                    onClick={() => showModal()}\r\n                                >\r\n                            Aprove\r\n                                </Button>\r\n                                <Button\r\n                                    type=\"danger\"\r\n                                    onClick={() => showModalReject()}\r\n                                >\r\n                            Reject\r\n                                </Button>\r\n                            </Space>\r\n                        </Col>\r\n                    </div>\r\n                </Card>\r\n            </Col>\r\n      \r\n            <Modal title=\"Approve Task\" style={{borderRadius:\"4px\"}} visible={isModalVisible}  onCancel={cancelModal} \r\n                footer={[\r\n                    <Button key=\"back\"  onClick={cancelModal}>\r\n                Cancel\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\"  onClick={handleAproval}>\r\n                Submit\r\n                    </Button>,\r\n                \r\n                ]} >\r\n                <Typography>Are you sure you want to Aprove?\r\n                </Typography>\r\n      \r\n            </Modal>\r\n            <Modal title=\"Material List\" visible={isModalRejectVisible}  onCancel={cancelModal2} \r\n                footer={\r\n                    remarks.length <= 10 ? ( [\r\n                    \r\n                        <Button disabled key=\"back\" type=\"danger\" onClick={handleReject} >\r\n                    Reject\r\n                        </Button>,\r\n                        <Button key=\"submit\"  onClick={cancelModal2} >\r\n                    Close\r\n                        </Button>,\r\n                    \r\n                    ]):( [\r\n                    \r\n                        <Button key=\"back\" type=\"danger\" onClick={handleReject} >\r\n                    Reject\r\n                        </Button>,\r\n                        <Button key=\"submit\"  onClick={cancelModal2} >\r\n                    Close\r\n                        </Button>,\r\n                    \r\n                    ])}\r\n            >\r\n                <Typography>Reason Of Cancelation :\r\n                </Typography>\r\n                <TextArea rows={4} onChange={(e) => setRemarks(e.target.value)} placeHolder=\"Min 10 Characters\"/>\r\n      \r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-lone-blocks */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Table\r\n    ,Input\r\n    ,Menu\r\n    ,Dropdown\r\n    ,Button\r\n    ,Space,\r\n    Tooltip} from 'antd'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\n\r\nexport default function TableSite() {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [wpIds,setWpids]=useState('')\r\n    const navigateTo = (path) => {\r\n        history.push(path)\r\n    }\r\n    const [orderRequestDraft,setOrderRequestDraft] = useState('');\r\n\r\n    const handleEditRequest=(data)=>{\r\n        navigateTo(`/sitelist/materialorder?odi=${data.orderDetailId}`)\r\n    }\r\n\r\n    const columnsOrderRequestDraft =[\r\n        {\r\n            title:\"CPO No\",\r\n            dataIndex:\"cpoNo\",\r\n            key:\"cpoNo\",\r\n            ...Search('cpoNo'),\r\n        },\r\n        {\r\n            title:\"Site No\",\r\n            dataIndex:\"siteNo\",\r\n            key:\"siteNo\",\r\n            ...Search('siteNo'),\r\n        },\r\n        {\r\n            title:\"Site Name\",\r\n            dataIndex:\"siteName\",\r\n            key:\"siteName\",\r\n            ...Search('siteName'),\r\n        },\r\n        {\r\n            title:\"Region\",\r\n            dataIndex:\"region\",\r\n            key:\"region\",\r\n            ...Search('region'),\r\n\r\n        },\r\n        {\r\n            title:\"Zone\",\r\n            dataIndex:'zone',\r\n            key:\"zone\",\r\n            ...Search('zone'),\r\n        },\r\n        {\r\n            title:\"Order Type\",\r\n            dataIndex:\"orderType\",\r\n            key:\"orderType\",\r\n            ...Search('orderType'),\r\n        },\r\n        {\r\n            title:\"Origin Name\",\r\n            dataIndex:\"originName\",\r\n            key:\"originName\",\r\n            ...Search('originName'),\r\n        },\r\n        {\r\n            title:\"Destination Name\",\r\n            dataIndex:\"destinationName\",\r\n            key:\"destinationName\"\r\n            ,...Search('destinationName'),\r\n        },\r\n        {\r\n            title:\"Request Type\",\r\n            dataIndex:\"requestTypeName\",\r\n            key:\"requestTypeName\",\r\n            ...Search('requestTypeName'),\r\n        },\r\n        {\r\n            title:\"Expected Delivery Date\",\r\n            ...Search('expectedDeliveryDate'),\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.expectedDeliveryDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title:\"Requester\",\r\n            dataIndex:\"requesterName\",\r\n            key:\"requesterName\",\r\n            ...Search('requesterName'),\r\n        },\r\n        {\r\n            title:\"Request Date\",\r\n            ...Search('requestDate'),\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.requestDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            align:\"center\",\r\n            fixed:'right',\r\n            width:40,\r\n            render:(record)=>{\r\n                return (\r\n                    <Tooltip title=\"Edit Draft\">\r\n                        <EditOutlined onClick={() => handleEditRequest(record)} />\r\n                    </Tooltip>\r\n                )\r\n            }\r\n        },\r\n        \r\n    ]\r\n\r\n    const getOrderRequestDraft=()=>{\r\n        API.getOrderRequestDraft().then(\r\n            result=>{\r\n                console.log(\"order request draft\", result);\r\n                setOrderRequestDraft(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderRequestDraft();\r\n    },[dispatch]);\r\n\r\n       \r\n\r\n    return (\r\n        <Table\r\n            // rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n            //rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n            dataSource={orderRequestDraft}\r\n            columns={columnsOrderRequestDraft}\r\n            key='siteConditionId'\r\n            scroll={{ x: '100%' }}\r\n            // eslint-disable-next-line react/jsx-boolean-value\r\n            pagination={{\r\n                pageSizeOptions: ['5','10','20','30', '40'],\r\n                showSizeChanger: true,\r\n                position: [\"bottomLeft\"],\r\n            }}\r\n                    \r\n            style={{marginTop : 36}}\r\n            size='small'\r\n            bordered\r\n            // loading={loading ? (true):(false)}    \r\n                \r\n        />\r\n    )\r\n}\r\n","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport TableOrderRequestDraft from './table' ;\r\n\r\nconst POCreation = () => {\r\n\r\n    useEffect(() => {\r\n        //getDOP();\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Order Request Draft\"/>\r\n            <TableOrderRequestDraft/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default POCreation;\r\n","/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-console */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-lone-blocks */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable prefer-destructuring */\r\n/* eslint-disable react/no-unstable-nested-components */\r\n\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Table,Input,Menu, Dropdown, Button, Space} from 'antd'\r\nimport {EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport moment from 'moment'\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport { getOdi, getOrderRejectionPending } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\n\r\n\r\nexport default function OrderRejectionPendingList() {\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory();\r\n    const [page,setPage] = useState(1)\r\n  \r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderRejectionPending())\r\n        \r\n    },[dispatch]);\r\n\r\n    const dataRejection = useSelector(state=>state.siteListDeliveryRequestReducer.dataOrderRejection)\r\n    const dataOdi = useSelector(state=>state.siteListDeliveryRequestReducer.odi)\r\n\r\n  \r\n  \r\n \r\n    \r\n    const handleEdit=(e)=>{\r\n        dispatch(getOdi(e))\r\n        history.push(`/sitelist/dismantleedit?odi=${dataOdi}`)\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title:'No',\r\n            key:\"index\",\r\n            render:(value, item, index) => (page )  + index\r\n        },\r\n        {\r\n            title : \"Request No\",\r\n            dataIndex:'requestNo',\r\n          \r\n        },\r\n        {\r\n            title : \"Order Type\",\r\n            dataIndex:'orderType',\r\n          \r\n            \r\n        },\r\n        {\r\n            title : \"Origin\",\r\n            dataIndex:'originName',\r\n            \r\n         \r\n         \r\n        },\r\n        {\r\n            title : \"Destination\",\r\n            dataIndex:'destinationName',\r\n            \r\n        \r\n        },\r\n        {\r\n            title : \"Site Name\",\r\n            dataIndex:'siteName',\r\n            \r\n        \r\n          \r\n            \r\n            \r\n        },\r\n        {\r\n            title : \"Region\",\r\n            dataIndex:'region',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"Work Package ID\",\r\n            dataIndex:'workpackageid',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"Scope Name\",\r\n            dataIndex:'scopeName',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"Scope Detail\",\r\n            dataIndex:'scopeDetail',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"Reason Of Rejection\",\r\n            dataIndex:'reasonOfRejection',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"Rejected By\",\r\n            dataIndex:'rejectedBy',\r\n        \r\n       \r\n        },\r\n        {\r\n            title : \"incoming Date\",\r\n            dataIndex:'incomingDate',\r\n            render:(text)=>{\r\n                return(\r\n                    <p>{moment(text).format(\"YYYY-MM-DD\")}</p>\r\n                )\r\n            }\r\n       \r\n        },\r\n        {\r\n            title : \"Options\",\r\n            dataIndex:'',\r\n            align:'center',\r\n            render : (e)=>{\r\n                return <EditOutlined onClick={()=>handleEdit(e.orderDetailId)}/>\r\n            }\r\n            \r\n        },\r\n \r\n        \r\n    \r\n    ]\r\n  \r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Order Rejection Pending List\"/>\r\n            <Table\r\n            // rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                rowClassName={(record, index) => index % 2 === 0 ? 'table-row-light' :  'table-row-dark'}\r\n                dataSource={dataRejection}\r\n                columns={columns}\r\n                key='siteConditionId'\r\n                scroll={{ x: '100%' }}\r\n                // eslint-disable-next-line react/jsx-boolean-value\r\n                pagination={{\r\n                    pageSizeOptions: ['5','10','20','30', '40'],\r\n                    showSizeChanger: true,\r\n                    position: [\"bottomLeft\"],\r\n                }}\r\n                    \r\n                style={{marginTop : 36}}\r\n                size='small'\r\n                bordered\r\n                // loading={loading ? (true):(false)}    \r\n                \r\n            />\r\n        </div>\r\n       \r\n    )\r\n}\r\n","export const getDataPending = (payload) => {\r\n    return {\r\n        type: \"GET_TASK_PENDING\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const setDataPending = (payload) => {\r\n    return {\r\n        type: \"SET_TASK_PENDING\",\r\n        payload,\r\n    };\r\n};\r\n  \r\nexport const getDataOnProgress = (payload) => {\r\n    return {\r\n        type: \"GET_TASK_ON_PROGRESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const setDataOnProgress = (payload) => {\r\n    return {\r\n        type: \"SET_TASK_ON_PROGRESS\",\r\n        payload,\r\n    };\r\n};\r\nexport const getDataDone = (payload) => {\r\n    return {\r\n        type: \"GET_TASK_DONE\",\r\n        payload,\r\n    };\r\n};\r\nexport const setDataDone = (payload) => {\r\n    return {\r\n        type: \"SET_TASK_DONE\",\r\n        payload,\r\n    };\r\n};\r\nexport const getOdi = (payload) => {\r\n    return {\r\n        type: \"GET_ODI\",\r\n        payload,\r\n    };\r\n};\r\nexport const getLsp = (payload) => {\r\n    return {\r\n        type: \"GET_LSP\",\r\n        payload,\r\n    };\r\n};\r\nexport const getPud = (payload) => {\r\n    return {\r\n        type: \"GET_PUD\",\r\n        payload,\r\n    };\r\n};\r\nexport const getSubcon = (payload) => {\r\n    return {\r\n        type: \"GET_SUBCON\",\r\n        payload,\r\n    };\r\n};\r\nexport const setSubcon = (payload) => {\r\n    return {\r\n        type: \"SET_SUBCON\",\r\n        payload,\r\n    };\r\n};\r\n\r\n\r\n\r\n\r\n","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport React,{useEffect, useState} from 'react'\r\nimport {\r\n    Table,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Space,\r\n    Typography,\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Tabs,\r\n    Button,\r\n    Switch,\r\n    Modal,\r\n    Tooltip,\r\n    DatePicker\r\n} from \"antd\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { getDataDone, getDataOnProgress, getDataPending,getLsp,getOdi,getPud } from '@app/store/action/taskAssignmentPendingAction'\r\nimport moment from \"moment\"\r\nimport Search from '@app/components/searchcolumn/SearchColumn'\r\nimport API from \"../../utils/apiServices\"\r\nimport { CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { toast } from 'react-toastify';\r\nimport {IconButton, TextField}  from '@mui/material/';\r\n\r\n\r\nexport default function TableTaskSummary(props) {\r\n    const dispatch = useDispatch()\r\n    const {TabPane} = Tabs\r\n    const {Title} = Typography\r\n    const [page,setPage] = useState(1)\r\n    const [isModalVisible,setIsModalVisible] = useState(false)\r\n    const [isModalOnProgressVisible,setIsModalonProgressVisible] = useState(false)\r\n    const [isModalRescheduleVisible,setIsModalRescheduleVisible] = useState(false)\r\n    const [isModalCancelVisible,setIsModalCancelVisible] = useState(false)\r\n    const [selectedOdi,setSelectedOdi] = useState(\"\")\r\n    const [selectedLsp,setSelectedLsp]= useState(\"\")\r\n    const [selectedPd,setSelectedPd]= useState(\"\")\r\n    const [sconTaskPending,setSconTaskPending] = useState([]);\r\n    const [subcon,setSubcon]= useState([])\r\n    const [taskOnProgress,setTaskOnProgress] = useState([])\r\n    const [selecteSconId,setSelectedSconId] = useState(\"\")\r\n    const [selectedEngineer,setSelectedEngineer] = useState(\"\")\r\n    const [selectedReAssignedEngineer,setSelectedReAssignedEngineer] = useState(\"\")\r\n    const [selectedWpId,setSelectedWpId] = useState(\"\")\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [rescheduleDate,setRescheduleDate] = useState('');\r\n    const [selectedTaskSchedule,setSelectedTaskSchedule] = useState(\"\")\r\n    const [selectedTransDelegateId,setSelectedtransDelegateId] = useState(\"\")\r\n   \r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current < moment().add(2,'d');\r\n    }\r\n    \r\n    const getSconTaskPending = () => {\r\n        API.getSconTaskPending().then(\r\n            result=>{\r\n                setSconTaskPending(result);\r\n                console.log(\"scontaskpendnig\",result);\r\n            }\r\n        )\r\n    }\r\n    const getSconEngineer = (sconid, wpid) => {\r\n     \r\n        API.getSconEngineer(sconid, wpid).then(\r\n            result=>{\r\n              \r\n                setSubcon(result);\r\n                console.log(\"getScon\",result);\r\n            }\r\n        )\r\n    }\r\n    const getSconOnProgress = () => {\r\n     \r\n        API.getSconTaskOnProgress().then(\r\n            result=>{\r\n              \r\n                setTaskOnProgress(result);\r\n                console.log(\"getTaskOnProgress\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n        \r\n    const onFinishAssigntask = (data) => {\r\n        console.log(\"datasubmitassign\", data)\r\n        const body = (\r\n            {\r\n                \"orderdetailId\": selectedOdi,\r\n                \"transferTo\": selectedEngineer,\r\n                \"transferBy\": user.uid  \r\n            }\r\n        )\r\n        console.log(body,\"body\")\r\n        API.postAssignEngineer(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n                // TaskPendingTable(false);\r\n                // \r\n            }\r\n        )\r\n    }\r\n    const onFinishReAssigntask = (data) => {\r\n        console.log(\"datasubmitRessign\", data)\r\n        const body = (\r\n            {\r\n                \"transDelegateId\": selectedTransDelegateId,\r\n                \"transferTo\": selectedReAssignedEngineer,\r\n                \"transferBy\": user.uid  \r\n            }\r\n        )\r\n        console.log(body,\"body\")\r\n        API.postReAssignmentEngineer(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n    }\r\n    const onFinishRequestReschedule = (data) => {\r\n        // console.log(\"datasubmitreschedule\", rescheduleDate)\r\n        const body = (\r\n            {\r\n                \"taskScheduleId\":selectedTaskSchedule,\r\n                \"proposeScheduleDate\": rescheduleDate,\r\n                \"proposedBy\":user.uid,\r\n                \"subconId\":selecteSconId,\r\n                \"proposeReason\":data.reason\r\n            }\r\n        )\r\n        API.putRequestReschedule(body).then(\r\n            result=>{\r\n                console.log('reqres', result)\r\n                // TaskPendingTable(false);\r\n                window.location.reload();\r\n            }\r\n        )\r\n    }\r\n    const onFinishCancelTask = (data) => {\r\n        // console.log(\"datasubmitreschedule\", rescheduleDate)\r\n        const body = (\r\n            {\r\n                \"transDelegateId\":selectedTransDelegateId,\r\n                \"orderdetailId\":selectedOdi,\r\n                \"transferBy\":user.uid\r\n\r\n            }\r\n        )\r\n        API.postCancelTask(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    window.location.reload();\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const showModal = (data) => {\r\n        setIsModalVisible(true)\r\n        setSelectedOdi(data.orderDetailId)\r\n        setSelectedLsp(data.lspName)\r\n        setSelectedPd(data.pickupOrDeliveryDate)\r\n        setSelectedSconId(data.subconId)\r\n        setSelectedWpId(data.workpackageid)\r\n        getSconEngineer(data.subconId,data.workpackageid)\r\n        setSelectedtransDelegateId(data.transDelegateId)\r\n      \r\n        \r\n    }\r\n    const showModalOnProgress = (data) => {\r\n        setIsModalonProgressVisible(true)\r\n        setSelectedEngineer(data.assignedTo)\r\n        getSconEngineer(data.subconId,data.workpackageid)\r\n        setSelectedtransDelegateId(data.transDelegateId)\r\n        setSelectedOdi(data.orderDetailId)\r\n      \r\n        \r\n    }\r\n   \r\n    const showModalReschedule = (data) => {\r\n        setIsModalRescheduleVisible(true)\r\n        \r\n        setSelectedTaskSchedule(data.taskScheduleId)\r\n        setSelectedSconId(data.subconId)\r\n    }\r\n    const hideModal = () => {\r\n        setIsModalVisible(false)\r\n    }\r\n    const hideModalonProgress = () => {\r\n        setIsModalonProgressVisible(false)\r\n    }\r\n    const hideModalReschedule = () => {\r\n        setIsModalRescheduleVisible(false)\r\n    }\r\n    const showModalCancel = (data) => {\r\n        setIsModalCancelVisible(true)\r\n        setSelectedtransDelegateId(data.transDelegateId)\r\n        setSelectedOdi(data.orderdetailId)\r\n    }\r\n    const hideModalCancel = () => {\r\n        setIsModalCancelVisible(false)\r\n    }\r\n    const stateDataPending =  useSelector(state=>state.taskAssignmentSummaryReducer.dataPending) \r\n    const stateDataOnProgress =  useSelector(state=>state.taskAssignmentSummaryReducer.dataOnProgress) \r\n  \r\n   \r\n    useEffect(() => {\r\n        getSconTaskPending()\r\n        getSconOnProgress()\r\n    }, [])\r\n    const scheduleStatuss = sconTaskPending.map(e=>e.scheduleStatus)\r\n    const cobaConsole = ()=>{\r\n        console.log(scheduleStatuss,'coba fata')\r\n    }\r\n\r\n    const columnsAssigmentPending = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Request No\",\r\n            dataIndex: \"requestNo\",\r\n            ...Search(\"requestNo\")\r\n        },\r\n        {\r\n            title: \"Order Type\",\r\n            dataIndex: \"orderType\",\r\n            ...Search(\"orderType\")\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\",\r\n            ...Search(\"siteNo\")\r\n        },\r\n\r\n        {\r\n            title: \"Origin\",\r\n            dataIndex: \"originName\",\r\n            ...Search(\"originName\")\r\n        },\r\n        {\r\n            title: \"Destination\",\r\n            dataIndex: \"destinationName\",\r\n            ...Search(\"destinationName\")\r\n        },\r\n        {\r\n            title: \"Site Name\",\r\n            dataIndex: \"siteName\",\r\n            ...Search(\"siteName\")\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\",\r\n            ...Search(\"region\")\r\n        },\r\n        {\r\n            title: \"Work Pakgae ID\",\r\n            dataIndex: \"workpackageid\",\r\n            ...Search(\"workpackageid\")\r\n        },\r\n        {\r\n            title: \"Scope Name\",\r\n            dataIndex: \"scopeName\",\r\n            ...Search(\"scopeName\")\r\n        },\r\n        {\r\n            title: \"Pickup Date\",\r\n            \r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.pickupOrDeliveryDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search(\"pickupOrDeliveryDate\")\r\n        },\r\n        // {\r\n        //     title: \"Assign To\",\r\n        //     dataIndex: \"assignedTo\",\r\n        //     ...Search(\"assignedTo\")\r\n        // },\r\n        {\r\n            title: \"Incoming Date\",\r\n            dataIndex: \"incomingDate\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(stateDataPending.incomingDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search(\"incomingDate\")\r\n        },\r\n        // {\r\n        //     title: \"Task Status\",\r\n        //     dataIndex: \"taskStatus\",\r\n        //     ...Search(\"taskStatus\")\r\n        // },\r\n        \r\n        {\r\n            title: \"Action\",\r\n            render:(record)=>{\r\n                return (\r\n                    <div>\r\n                        {record.scheduleStatus==\"newpropose\" ? <p style={{ color:'red' }}>Propose New Schedule Request</p>\r\n                            :\r\n                            <Space>\r\n                                <Tooltip title=\"Assign Task\">\r\n                                    <UserAddOutlined  onClick={() => showModal(record)} />\r\n                                </Tooltip>\r\n                                {!record.requestReschedule?\r\n                                    null\r\n                                    :\r\n                                    record.dayToGo <= -2 ?\r\n                                        <Tooltip title=\"Request Reschedule\">\r\n                                            <CalendarTwoTone onClick={() => showModalReschedule(record)} />\r\n                                        </Tooltip> :\r\n                                        <Tooltip color='#f50' title=\"Cannot request reschedule, day to go h-1 or higher\">\r\n                                            <CalendarTwoTone />\r\n                                        </Tooltip>\r\n                                }\r\n                                <Tooltip title=\"Cancel Task\">\r\n                                    <CloseSquareTwoTone twoToneColor=\"#FF0000\" onClick={() => showModalCancel(record)} />\r\n                                </Tooltip>\r\n                            </Space>\r\n                        }\r\n                    </div>\r\n                    \r\n                   \r\n                )\r\n            }\r\n            \r\n            // render:(record)=>{\r\n               \r\n            //     return (\r\n            //         <Space>\r\n            //             {\r\n            //                 record.scheduleStatus == \"newpropose\" ? <p style={{ color:'red' }}>waiting new propose schedule approval</p>\r\n            //                 :\r\n                            \r\n            //             }\r\n            //             <Tooltip title=\"Assign Task\">\r\n            //                 <UserAddOutlined style={{fontSize:\"16px\"}} onClick={()=>showModal(record)} />\r\n            //             </Tooltip>\r\n              \r\n                      \r\n            //             {!record.requestReschedule?\r\n            //                 null\r\n            //                 :\r\n            //                 record.dayToGo <= -2 ?\r\n                    \r\n            //                     <Tooltip title=\"Request Reschedule\" style={{fontSize:\"16px\"}} onClick={()=>showModalReschedule(record)}>\r\n            //                         <CalendarTwoTone style={{fontSize:\"16px\"}} />\r\n            //                     </Tooltip>:\r\n            //                     <Tooltip color='#f50' title=\"Cannot request reschedule, day to go h-1 or higher\">\r\n            //                         <IconButton color=\"#0000\">\r\n            //                             <CalendarTwoTone style={{fontSize:16}} />\r\n            //                         </IconButton>\r\n            //                         <CalendarTwoTone style={{fontSize:16}} />\r\n            //                     </Tooltip>\r\n            //             }\r\n                    \r\n            //             <Tooltip title=\"Cancel Task\">\r\n            //                 <CloseSquareTwoTone twoToneColor=\"#FF0000\" style={{fontSize:\"16px\"}} onClick={()=>showModalCancel(record)}/>\r\n            //             </Tooltip>\r\n            //         </Space>\r\n\r\n                  \r\n            //     )\r\n            // }\r\n        },\r\n    ]\r\n    const columnsAssigmentOnProgress = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Request No\",\r\n            dataIndex: \"requestNo\",\r\n            ...Search(\"requestNo\")\r\n        },\r\n        {\r\n            title: \"Order Type\",\r\n            dataIndex: \"orderType\",\r\n            ...Search(\"orderType\")\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\",\r\n            ...Search(\"siteNo\")\r\n        },\r\n\r\n        {\r\n            title: \"Origin\",\r\n            dataIndex: \"originName\",\r\n            ...Search(\"originName\")\r\n        },\r\n        {\r\n            title: \"Destination\",\r\n            dataIndex: \"destinationName\",\r\n            ...Search(\"destinationName\")\r\n        },\r\n        {\r\n            title: \"Site Name\",\r\n            dataIndex: \"siteName\",\r\n            ...Search(\"siteName\")\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\",\r\n            ...Search(\"region\")\r\n        },\r\n        {\r\n            title: \"Work Pakgae ID\",\r\n            dataIndex: \"workpackageid\",\r\n            ...Search(\"workpackageid\")\r\n        },\r\n        {\r\n            title: \"Scope Name\",\r\n            dataIndex: \"scopeName\",\r\n            ...Search(\"scopeName\")\r\n        },\r\n        {\r\n            title: \"Pickup Date\",\r\n            dataIndex: \"pickupOrDeliveryDate\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(stateDataOnProgress.pickupOrDeliveryDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search(\"pickupOrDeliveryDate\")\r\n        },\r\n        {\r\n            title: \"Assign To\",\r\n            dataIndex: \"assignedTo\",\r\n            ...Search(\"assignedTo\")\r\n        },\r\n        {\r\n            title: \"Incoming Date\",\r\n            dataIndex: \"incomingDate\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(stateDataOnProgress.incomingDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search(\"incomingDate\")\r\n        },\r\n        {\r\n            title: \"Task Status\",\r\n            dataIndex: \"taskStatus\",\r\n            ...Search(\"taskStatus\")\r\n        },\r\n        \r\n        {\r\n            title: \"Action\",\r\n            dataIndex: \"\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <Tooltip title=\"Assign Task\">\r\n                            <UserAddOutlined style={{fontSize:\"16px\"}} onClick={()=> showModalOnProgress(record)}  />\r\n                        </Tooltip>\r\n                  \r\n                          \r\n                      \r\n                        <Tooltip title=\"Cancel Task\">\r\n                            <CloseSquareTwoTone twoToneColor=\"#FF0000\" style={{fontSize:\"16px\"}} onClick={()=>showModalCancel(record)}/>\r\n                        </Tooltip>\r\n                    </Space>\r\n                )\r\n            }\r\n        },\r\n    ]\r\n    const columnsAssigmentOnDone = [\r\n        {\r\n            title: \"No\",\r\n            key: \"index\",\r\n            render: (value, item, index) => page + index\r\n        },\r\n        {\r\n            title: \"Request No\",\r\n            dataIndex: \"cpoNo\"\r\n        },\r\n        {\r\n            title: \"Order Type\",\r\n            dataIndex: \"requestTypeName\"\r\n        },\r\n        {\r\n            title: \"Site No\",\r\n            dataIndex: \"siteNo\"\r\n        },\r\n\r\n        {\r\n            title: \"Origin\",\r\n            dataIndex: \"originName\"\r\n        },\r\n        {\r\n            title: \"Destination\",\r\n            dataIndex: \"destinationName\"\r\n        },\r\n        {\r\n            title: \"Site Name\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Region\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Work Pakgae ID\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Scope Name\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Pickup Date\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Assign To\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Assign Date\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Task Status\",\r\n            dataIndex: \"region\"\r\n        },\r\n        {\r\n            title: \"Task Complete Date\",\r\n            dataIndex: \"region\"\r\n        },\r\n    ]\r\n    const CardTitle = (title) => <Title level={5}>{title}</Title>\r\n\r\n   \r\n    return (\r\n        <div>\r\n            <Tabs defaultActiveKey=\"1\" centered={false}>\r\n                <TabPane tab=\"Assignment Pending\" key=\"1\">\r\n                    <Card title={CardTitle(\"Assignment Pending\")}>\r\n                        <div >\r\n                            <Table\r\n                                columns={columnsAssigmentPending}\r\n                           \r\n                                dataSource={sconTaskPending}\r\n                                scroll={{x: \"100%\"}}\r\n                                size=\"large\"\r\n                                pagination={{\r\n                                    pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                                    showSizeChanger: true,\r\n                                    position: [\"bottomLeft\"],\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </TabPane>\r\n                <TabPane tab=\"Assignment On Progress\" key=\"2\">\r\n                    <Card title={CardTitle(\"Assignment On Progress\")}>\r\n                        <div >\r\n                            <Table\r\n                                columns={columnsAssigmentOnProgress}\r\n                                pagination={{\r\n                                    pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                                    showSizeChanger: true,\r\n                                    position: [\"bottomLeft\"],\r\n                                }}\r\n                                dataSource={taskOnProgress}\r\n                                scroll={{x: \"100%\"}}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </TabPane>\r\n                <TabPane tab=\"Assignment Done\" key=\"3\">\r\n                    <Card title={CardTitle(\"Assignment Done\")}>\r\n                        <div >\r\n                            <Table\r\n                                columns={columnsAssigmentOnDone}\r\n                                pagination={{\r\n                                    pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                                    showSizeChanger: true,\r\n                                    position: [\"bottomLeft\"],\r\n                                }}\r\n                                dataSource={taskOnProgress}\r\n                                scroll={{x: \"100%\"}}\r\n                            />\r\n                        </div>\r\n                    </Card>\r\n                </TabPane>\r\n            </Tabs>\r\n            <Modal visible={isModalVisible} onCancel={hideModal}\r\n                footer={[\r\n                    <Button key=\"back\"  onClick={hideModal}>\r\n                Cancel\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\"  onClick={onFinishAssigntask}>\r\n                Assign\r\n                    </Button>,\r\n                \r\n                ]}\r\n            >\r\n                <div> <Card  title={CardTitle(\"Assign Task Form\")}>\r\n                    <Form\r\n                        labelCol={{span: 9}}\r\n                        wrapperCol={{span: 13}}\r\n                        layout=\"horizontal\"\r\n                    >\r\n                        <Form.Item label=\"LSP Name\">\r\n                            <Typography>{selectedLsp}</Typography>\r\n                        </Form.Item>\r\n                        <Form.Item label=\" Pick Up Date\">\r\n                            <Typography>{moment(selectedPd).format(\"YYYY-MM-DD\")}</Typography>\r\n                        </Form.Item>\r\n                        <Form.Item label=\"WH Team\">\r\n                            <Select\r\n                                onChange={(e)=>setSelectedEngineer(e)}\r\n                                placeholder=\"Select an option\"\r\n                            >\r\n                                {subcon.length == undefined ? (<></>):(\r\n                                    subcon.map(e=><Select.Option value={e.userId}  >{e.fullname}</Select.Option>) \r\n                            \r\n                                )}\r\n                               \r\n                              \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n                </div>\r\n            </Modal>\r\n            <Modal visible={isModalOnProgressVisible} onCancel={hideModalonProgress}\r\n                footer={[\r\n                    <Button key=\"back\"  onClick={hideModalonProgress}>\r\n                Close\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" onClick={onFinishReAssigntask}>\r\n                Assign\r\n                    </Button>,\r\n                \r\n                ]}\r\n            >\r\n                <div> <Card  title={CardTitle(\"Re-Assign Task Form\")}>\r\n                    <Form\r\n                        labelCol={{span: 9}}\r\n                        wrapperCol={{span: 13}}\r\n                        layout=\"horizontal\"\r\n                    >\r\n                        <Form.Item label=\"Current PIC\">\r\n                            <Typography>{selectedEngineer}</Typography>\r\n                        </Form.Item>\r\n                       \r\n                        <Form.Item label=\"Re-Assign To\">\r\n                            <Select\r\n                                onChange={(e)=>setSelectedReAssignedEngineer(e)}\r\n                                placeholder=\"Select an option\"\r\n                            >\r\n                                {subcon.length == undefined ? (<></>):(\r\n                                    subcon.map(e=><Select.Option value={e.userId}  >{e.fullname}</Select.Option>) \r\n                            \r\n                                )}\r\n                               \r\n                              \r\n                            </Select>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Card>\r\n                </div>\r\n            </Modal>\r\n            <Modal visible={isModalRescheduleVisible} onCancel={hideModalReschedule}\r\n                footer={[\r\n                    <Button key=\"back\"  onClick={hideModalReschedule}>\r\n            Cancel\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\"  onClick={onFinishRequestReschedule}>\r\n            Submit\r\n                    </Button>,\r\n            \r\n                ]}>\r\n                <div> <Card  title={CardTitle(\"Assign Task Form\")}>\r\n                    <Form\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        initialValues={{\r\n                            'taskScheduleId': selectedTaskSchedule,\r\n                            'subconId': selecteSconId,\r\n                        //'pickupDate': moment(props.pickupDate).format(\"YYYY-MM-DD\"),\r\n                        // remember: true\r\n                        }}\r\n                   \r\n                   \r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item\r\n                        // hidden\r\n                            label=\"taskScheduleId\"\r\n                            name=\"taskScheduleId\"\r\n                        >\r\n                            <Input disabled/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                        // hidden\r\n                            label=\"subconId\"\r\n                            name=\"subconId\"\r\n                        >\r\n                            <Input disabled/>\r\n                        </Form.Item>\r\n            \r\n                        <Form.Item\r\n                            label=\"Propose Date\"\r\n                            name=\"proposeDate\"\r\n                            rules={[{ required: true, message: 'Please input Propose Date!' }]}\r\n                        >\r\n                            <DatePicker\r\n                                format=\"YYYY-MM-DD\"\r\n                                disabledDate={disabledDate}\r\n                                onChange={(e) => setRescheduleDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                            // disabledDate={current && current < moment().endOf('day')}\r\n                            // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                            />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            label=\"Reason\"\r\n                            name=\"reason\"\r\n                            rules={[{ required: true, message: 'Please Input Reason!' }]}\r\n                        >\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                  \r\n                    </Form>\r\n                </Card>\r\n                </div>\r\n            </Modal>\r\n            <Modal visible={isModalCancelVisible} onCancel={hideModalCancel}\r\n                footer={[\r\n                    <Button key=\"back\"  onClick={hideModalCancel}>\r\n            Cancel\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\"  onClick={onFinishCancelTask}>\r\n            Submit\r\n                    </Button>,\r\n            \r\n                ]}>\r\n                <div> <Card  title={CardTitle(\"Assign Task Form\")}>\r\n                    <p>\r\n                Are you sure you want to Cancel this task? \r\n                    </p>\r\n                    <p>\r\n                (task will be no longer available once it canceled)\r\n                    </p>\r\n                </Card>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger'\r\nimport TableTaskSummary from '@app/pages/SconTaskSummary/table'\r\n\r\nexport default function SconTaskSummary() {\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Task Assignment Summary\"/>\r\n            <TableTaskSummary/>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Select,Modal,Form,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\nimport { CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\nimport TaskPendingTable from './Table';\r\n\r\nconst ModalAssigntask = (props) => {\r\n    const { Option } = Select;\r\n    const [subconEngineer, setSubconEngineer] = useState('');\r\n    const [selectedEngineer, setSelectedEngineer] = useState(0);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [isAssignTask, setIsAssigntask] = useState(false)\r\n\r\n    const getSubconEngineer = (sconid, wpid) => {\r\n        API.getSconEngineer(sconid,wpid).then(\r\n            result=>{\r\n                console.log('sconEngineermodal', result)\r\n                setSubconEngineer(result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const onFinishAssigntask = (data) => {\r\n        console.log(\"datasubmitassign\", data)\r\n        const body = (\r\n            {\r\n                \"orderdetailId\": props.orderdetailid,\r\n                \"transferTo\": data.assignTo,\r\n                \"transferBy\": user.uid  \r\n            }\r\n        )\r\n        API.postAssignEngineer(body).then(\r\n            result=>{\r\n                console.log('sconpost', result)\r\n                // TaskPendingTable(false);\r\n                window.location.reload();\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleOkAssignTask = () => {\r\n        \r\n    }\r\n\r\n    const handleCancelAssignTask = () => {\r\n        \r\n    }\r\n\r\n    const onFinishFailedAssigntask = () =>{\r\n\r\n    }\r\n    const handleChangeEngineer = (data) =>{\r\n        setSelectedEngineer(data);\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"sini\")\r\n        getSubconEngineer(props.sconid,props.wpid)\r\n        setIsAssigntask(props.isAssignTask)\r\n    },[props.sconid,props.wpid,props.lspName,props.orderdetailid,props.isassigntask])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{\r\n                'orderDetailId': props.orderdetailid,\r\n                'lspName': props.lspName,\r\n                'pickupDate': moment(props.pickupDate).format(\"YYYY-MM-DD\"),\r\n                // remember: true\r\n            }}\r\n            onFinish={onFinishAssigntask}\r\n            onFinishFailed={onFinishFailedAssigntask}\r\n            autoComplete=\"off\"\r\n        >\r\n            <Form.Item\r\n                hidden\r\n                label=\"orderDetailId\"\r\n                name=\"orderDetailId\"\r\n            >\r\n                <Input disabled/>\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                label=\"LSP Name\"\r\n                name=\"lspName\"\r\n                \r\n            >\r\n                <Input disabled/>\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Pickup Date\"\r\n                name=\"pickupDate\"\r\n                \r\n            >\r\n                <Input disabled/>\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"Assign To\" name=\"assignTo\">\r\n                <Select \r\n                    onChange={(e) => handleChangeEngineer(e)}\r\n                    placeholder=\"Select Engineer\"\r\n                >\r\n                    { subconEngineer.length==0 ? <Select.Option > \r\n                    </Select.Option>:\r\n                        subconEngineer.map(eng =>  <Select.Option value={eng.userId}> \r\n                            {eng.fullname}</Select.Option>)\r\n                    }\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                <Space>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n                    </Button>\r\n                </Space>\r\n            </Form.Item>\r\n        </Form>\r\n        // <p>Hello Task Assignment sconid : {props.sconid}|wpid : {props.wpid}</p>\r\n    )\r\n\r\n}\r\n\r\nexport default ModalAssigntask","/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {DatePicker,Select,Modal,Form,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\nimport { CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\nimport TaskPendingTable from './Table';\r\n\r\nconst ModalRequestReschedule = (props) => {\r\n    const { Option } = Select;\r\n    const [subconEngineer, setSubconEngineer] = useState('');\r\n    const [selectedEngineer, setSelectedEngineer] = useState(0);\r\n    const user = useSelector((state) => state.auth.user);\r\n    const [isAssignTask, setIsAssigntask] = useState(false)\r\n    const [rescheduleDate,setRescheduleDate] = useState('');\r\n   \r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current < moment().add(2,'d');\r\n    }\r\n    const onFinishRequestReschedule = (data) => {\r\n        // console.log(\"datasubmitreschedule\", rescheduleDate)\r\n        const body = (\r\n            {\r\n                \"taskScheduleId\":data.taskScheduleId,\r\n                \"proposeScheduleDate\": rescheduleDate,\r\n                \"proposedBy\":user.uid,\r\n                \"subconId\":data.subconId,\r\n                \"proposeReason\":data.reason\r\n            }\r\n        )\r\n        API.putRequestReschedule(body).then(\r\n            result=>{\r\n                console.log('reqres', result)\r\n                // TaskPendingTable(false);\r\n                window.location.reload();\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleOkAssignTask = () => {\r\n        \r\n    }\r\n\r\n    const handleCancelAssignTask = () => {\r\n        \r\n    }\r\n\r\n    const onFinishFailedRequestReschedule = () =>{\r\n\r\n    }\r\n\r\n    const handleChangeEngineer = (data) =>{\r\n        setSelectedEngineer(data);\r\n        console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n    },[props.subconId,props.taskScheduleId])\r\n\r\n    return (\r\n        <Form\r\n            name=\"basic\"\r\n            labelCol={{ span: 8 }}\r\n            wrapperCol={{ span: 16 }}\r\n            initialValues={{\r\n                'taskScheduleId': props.taskScheduleId,\r\n                'subconId': props.subconId,\r\n            //'pickupDate': moment(props.pickupDate).format(\"YYYY-MM-DD\"),\r\n            // remember: true\r\n            }}\r\n            onFinish={onFinishRequestReschedule}\r\n            onFinishFailed={onFinishFailedRequestReschedule}\r\n            autoComplete=\"off\"\r\n        >\r\n            <Form.Item\r\n            // hidden\r\n                label=\"taskScheduleId\"\r\n                name=\"taskScheduleId\"\r\n            >\r\n                <Input disabled/>\r\n            </Form.Item>\r\n            <Form.Item\r\n            // hidden\r\n                label=\"subconId\"\r\n                name=\"subconId\"\r\n            >\r\n                <Input disabled/>\r\n            </Form.Item>\r\n            \r\n            <Form.Item\r\n                label=\"Propose Date\"\r\n                name=\"proposeDate\"\r\n                rules={[{ required: true, message: 'Please input Propose Date!' }]}\r\n            >\r\n                <DatePicker\r\n                    format=\"YYYY-MM-DD\"\r\n                    disabledDate={disabledDate}\r\n                    onChange={(e) => setRescheduleDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                // disabledDate={current && current < moment().endOf('day')}\r\n                // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                />\r\n            </Form.Item>\r\n            <Form.Item\r\n                label=\"Reason\"\r\n                name=\"reason\"\r\n                rules={[{ required: true, message: 'Please Input Reason!' }]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                <Space>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n                    </Button>\r\n                </Space>\r\n            </Form.Item>\r\n        </Form>\r\n        // <p>Hello Task Assignment sconid : {props.subconId}|wpid : {props.taskScheduleId}</p>\r\n    )\r\n\r\n}\r\n\r\nexport default ModalRequestReschedule","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Select,Form,Modal,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\nimport { CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport ModalTaskAssignment from './ModalAssignTask'\r\nimport ModalRequestReschedule from './ModalRequestReschedule'\r\n\r\nconst TaskPendingTable = ({isAssignTaskModal}) => {\r\n    const { Option } = Select;\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [sconTaskPending,setSconTaskPending] = useState([]);\r\n    const [isAssignTask, setIsAssignTask] = useState(false);\r\n    const [isReschedule, setIsReschedule] = useState(false);\r\n    const [isCancelTask, setIsCancelTask] = useState(false);\r\n    const [selectedSconId, setSelectedSconId] = useState('');\r\n    const [selectedWPID, setSelectedWPID] = useState('');\r\n    const [lspName, setLspName] = useState('');\r\n    const [selectedOrderDetailId, setSelectedOrderDetailId] = useState('');\r\n    const [selectedTaskScheduleId, setSelectedTaskScheduleId] = useState('');\r\n    const [selectedTransDelegateId, setSelectedTransDelegateId] = useState('');\r\n    const [pickupDate, setPickupDate] = useState('');\r\n    const [cancelLoading, setCancelLoading] = useState(false);\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const getSconTaskPending = () => {\r\n        setIsLoading(true);\r\n        API.getSconTaskPending().then(\r\n            result=>{\r\n                setSconTaskPending(result);\r\n                setIsLoading(false);\r\n                console.log(\"scontaskpendnig\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleAssignTask = (data) =>{\r\n        console.log(\"assign data:\",data);\r\n        setSelectedWPID(data.workpackageid);\r\n        setSelectedSconId(data.subconId);\r\n        setLspName(data.subconName);\r\n        setPickupDate(data.pickupOrDeliveryDate);\r\n        setSelectedOrderDetailId(data.orderDetailId);\r\n        \r\n        // getSubconEngineer(data.subconId,data.workpackageid);\r\n        setIsAssignTask(true);\r\n    }\r\n\r\n    const handleOkAssignTask = () =>{\r\n        setIsAssignTask(false);\r\n    }\r\n    const handleCancelAssignTask = () =>{\r\n        setIsAssignTask(false);\r\n    }\r\n    \r\n    const handleCancelCancelTask = () =>{\r\n        setIsCancelTask(false);\r\n    }\r\n    const handleOkRequestReschedule = () =>{\r\n        setIsReschedule(false);\r\n    }\r\n    const handleCancelRequestReschedule = () =>{\r\n        setIsReschedule(false);\r\n    }\r\n\r\n    const handleRequestSchedule = (data) =>{\r\n        setIsReschedule(true);\r\n        setSelectedSconId(data.subconId);\r\n        setSelectedTaskScheduleId(data.taskScheduleId);\r\n        console.log(data);\r\n    }\r\n    const handleCancelTask = (data) =>{\r\n        setIsCancelTask(true);\r\n        setSelectedTransDelegateId(data.transDelegateId);\r\n        setSelectedOrderDetailId(data.orderDetailId);\r\n        console.log(data);\r\n    }\r\n\r\n    const handleOKCancelTask = () =>{\r\n        setCancelLoading(true);\r\n        const body = (\r\n            {\r\n                \"transDelegateId\":selectedTransDelegateId,\r\n                \"orderdetailId\":selectedOrderDetailId,\r\n                \"transferBy\": user.uid  \r\n            }\r\n        )\r\n        // console.log(\"okcancel:\",body)\r\n        API.postCancelTask(body).then(\r\n            result=>{\r\n                setCancelLoading(false);\r\n                setIsCancelTask(false);\r\n                getSconTaskPending();\r\n                console.log(result)\r\n            }\r\n        )\r\n\r\n        // setIsCancelTask(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title : \"No\",\r\n            render: (value, item, index) => 1 + index\r\n        },\r\n        {\r\n            title : \"Request No\",\r\n            dataIndex:'requestNo',\r\n            ...Search('requestNo'),\r\n        },\r\n        {\r\n            title : \"Order Type\",\r\n            dataIndex:'orderType',\r\n            ...Search('requestNo'),\r\n        },\r\n        {\r\n            title : \"Site No\",\r\n            dataIndex:'siteNo',\r\n            ...Search('siteNo'),\r\n        },\r\n        {\r\n            title : \"Origin\",\r\n            dataIndex:'originName',\r\n            ...Search(''),\r\n        },\r\n        {\r\n            title : \"Destination\",\r\n            dataIndex:'destinationName',\r\n            ...Search(''),\r\n        },\r\n        {\r\n            title : \"Site Name\",\r\n            dataIndex:'siteName',\r\n            responsive: ['md'],\r\n            ...Search('siteName'),\r\n        },\r\n        {\r\n            title : \"Region\",\r\n            dataIndex:'region',\r\n            ...Search('region'),\r\n        },\r\n        {\r\n            title : \"Workpackage Id\",\r\n            dataIndex:'workpackageid',\r\n            ...Search('workpackageid'),\r\n        },\r\n        {\r\n            title : \"Scope Name\",\r\n            dataIndex:'scopeName',\r\n            ...Search('scopeName'),\r\n        },\r\n        {\r\n            title : \"Scope Detail\",\r\n            dataIndex:'packageName',\r\n            ...Search('packageName'),\r\n        },\r\n        {\r\n            title : \"Assigned By\",\r\n            dataIndex:'assignedBy',\r\n            ...Search('assignedBy'),\r\n        },\r\n        {\r\n            title : \"Pickup Date\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.pickupOrDeliveryDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search('pickupOrDeliveryDate'),\r\n        },\r\n        {\r\n            title : \"Incoming Date\",\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.incomingDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search('incomingDate'),\r\n        },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            fixed:'right',\r\n            render:(record)=>{\r\n                return (\r\n                    <div>\r\n                        {record.scheduleStatus==\"newpropose\" ? <p style={{ color:'red' }}>Propose New Schedule Request</p>\r\n                            :\r\n                            <Space>\r\n                                <Tooltip title=\"Assign Task\">\r\n                                    <UserAddOutlined  onClick={() => handleAssignTask(record)} />\r\n                                </Tooltip>\r\n                                {!record.requestReschedule?\r\n                                    null\r\n                                    :\r\n                                    record.dayToGo <= -2 ?\r\n                                        <Tooltip title=\"Request Reschedule\">\r\n                                            <CalendarTwoTone onClick={() => handleRequestSchedule(record)} />\r\n                                        </Tooltip> :\r\n                                        <Tooltip color='#f50' title=\"Cannot request reschedule, day to go h-1 or higher\">\r\n                                            <CalendarTwoTone />\r\n                                        </Tooltip>\r\n                                }\r\n                                <Tooltip title=\"Cancel Task\">\r\n                                    <CloseSquareTwoTone twoToneColor=\"#FF0000\" onClick={() => handleCancelTask(record)} />\r\n                                </Tooltip>\r\n                            </Space>\r\n                        }\r\n                    </div>\r\n                    \r\n                   \r\n                )\r\n            }\r\n            \r\n        },\r\n        \r\n    \r\n    ]\r\n\r\n    useEffect(() => {\r\n        getSconTaskPending();\r\n    },[])\r\n\r\n    return(\r\n        isLoading ?   \r\n            <Row justify=\"center\">\r\n                <Col span={1}>    \r\n                    <Spin />\r\n                </Col>\r\n            </Row>  \r\n            :\r\n            <><Table\r\n                scroll={{ x: '100%' }}\r\n                size=\"small\"\r\n                // expandable={{ expandedRowRender }}\r\n                columns={columns}\r\n                dataSource={sconTaskPending}\r\n                pagination={{\r\n                    pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                    showSizeChanger: true,\r\n                    position: [\"bottomLeft\"],\r\n                }}\r\n                bordered />\r\n            <Modal title=\"Assign Task\"\r\n                visible={isAssignTask}\r\n                onOk={handleOkAssignTask}\r\n                onCancel={handleCancelAssignTask}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n            >\r\n                <ModalTaskAssignment orderdetailid={selectedOrderDetailId} wpid={selectedWPID} sconid={selectedSconId} lspName={lspName} pickupDate={pickupDate} />\r\n            </Modal>\r\n            <Modal title=\"Request Reschedule\"\r\n                visible={isReschedule}\r\n                onOk={handleOkRequestReschedule}\r\n                onCancel={handleCancelRequestReschedule}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n            >\r\n                <ModalRequestReschedule subconId={selectedSconId} taskScheduleId={selectedTaskScheduleId} />\r\n\r\n            </Modal>\r\n            <Modal title=\"Cancel Task\"\r\n                visible={isCancelTask}\r\n                onOk={handleOKCancelTask}\r\n                onCancel={handleCancelCancelTask}\r\n                confirmLoading={cancelLoading}\r\n                destroyOnClose={true}\r\n            >\r\n                <p>\r\n                Are you sure you want to Cancel this task? \r\n                </p>\r\n                <p>\r\n                (task will be no longer available once it canceled)\r\n                </p>\r\n\r\n            </Modal>\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nexport default TaskPendingTable;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TaskPendingTable from './Table'\r\n\r\nconst SconTaskPending = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Subcon Task Pending\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : \r\n                <TaskPendingTable/>\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SconTaskPending;","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Select,Form,Modal,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\n\r\nimport API  from '../../utils/apiServices';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\n\r\n\r\nconst TableInventoryReport = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inventoryReport,setInventoryReport] = useState([]);\r\n\r\n\r\n    const getInventoryReport = () => {\r\n        setIsLoading(true);\r\n        API.getInventoryReport().then(\r\n            result=>{\r\n                setInventoryReport(result);\r\n                setIsLoading(false);\r\n                console.log(\"scontaskpendnig\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title : \"No\",\r\n            render: (value, item, index) => 1 + index\r\n        },\r\n        {\r\n            title : \"Project\",\r\n            dataIndex:'project',\r\n            ...Search('project'),\r\n        },\r\n        {\r\n            title : \"WHCode\",\r\n            dataIndex:'whCode',\r\n            ...Search('whCode'),\r\n        },\r\n        {\r\n            title : \"Warehouse/DOP\",\r\n            dataIndex:'warehouseName',\r\n            ...Search('warehouseName'),\r\n        },\r\n        {\r\n            title : \"Material Code\",\r\n            dataIndex:'materialCode',\r\n            ...Search('materialCode'),\r\n        },\r\n        {\r\n            title : \"Material Desc\",\r\n            dataIndex:'materialDesc',\r\n            ...Search('materialDesc'),\r\n        },\r\n        {\r\n            title : \"UOM\",\r\n            dataIndex:'uom',\r\n            responsive: ['md'],\r\n            ...Search('uom'),\r\n        },\r\n        {\r\n            title : \"Region\",\r\n            dataIndex:'region',\r\n            ...Search('region'),\r\n        },\r\n        {\r\n            title : \"Inbound QTY\",\r\n            dataIndex:'inboundQty',\r\n            ...Search('inboundQty'),\r\n        },\r\n        {\r\n            title : \"Stock (OnHand)\",\r\n            dataIndex:'onHandQty',\r\n            ...Search('onHandQty'),\r\n        },\r\n        {\r\n            title : \"Requested EMORE\",\r\n            dataIndex:'bookedQty',\r\n            ...Search('bookedQty'),\r\n        },\r\n        {\r\n            title : \"Outbond QTY\",\r\n            dataIndex:'outboundQty',\r\n            ...Search('outboundQty'),\r\n        },\r\n        {\r\n            title:\"Balance (FREE QTY)\",\r\n            dataIndex:'balanceQty',\r\n            ...Search('balanceQty'),\r\n            key:\"balanceQty\",\r\n            \r\n        },\r\n        \r\n    \r\n    ]\r\n\r\n    useEffect(() => {\r\n        getInventoryReport();\r\n    },[])\r\n\r\n    return(\r\n        isLoading ?   \r\n            <Row justify=\"center\">\r\n                <Col span={1}>    \r\n                    <Spin />\r\n                </Col>\r\n            </Row>  \r\n            :\r\n            <Table\r\n                scroll={{ x: '100%' }}\r\n                size=\"small\"\r\n                // expandable={{ expandedRowRender }}\r\n                columns={columns}\r\n                dataSource={inventoryReport}\r\n                pagination={{\r\n                    pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                    showSizeChanger: true,\r\n                    position: [\"bottomLeft\"],\r\n                }}\r\n                bordered />\r\n\r\n            \r\n    )\r\n}\r\n\r\nexport default TableInventoryReport;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TableInventoryReport from './Table'\r\n\r\nconst InventoryReport = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Inventory Report\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : \r\n                <TableInventoryReport/>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InventoryReport;","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Typography,Popconfirm,Select,Upload,message,Form,Modal,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\nimport {PlusOutlined, CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined,DeleteTwoTone,UploadOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport {IconButton, TextField}  from '@mui/material/';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport exportFromJSON from 'export-from-json'\r\n\r\nconst TableInboundUpload = () => {\r\n    const { Option } = Select;\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [inboundUploadFile,setInboundUploadFile] = useState([]);\r\n    const [isReviseFile, setIsReviseFile] = useState(false);\r\n    const [isUploadFile, setIsUploadFile] = useState(false);\r\n    const [errorLog,setErrorLog] = useState([])\r\n    const [fileUpload, setFileUpload] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [inbFileId, setInbFileId] = useState(0);\r\n    const [fileName, setFileName] = useState('');\r\n    const { Title } = Typography;\r\n\r\n    const props = {\r\n        onRemove: () => {\r\n            setFileUpload(null);\r\n            return fileUpload\r\n        },\r\n        beforeUpload: file => {\r\n            setFileUpload(file);\r\n            return false;\r\n        },\r\n        fileUpload,\r\n    };\r\n\r\n\r\n    const getInboundUploadFileList = () => {\r\n        setIsLoading(true);\r\n        API.getInboundUploadFile().then(\r\n            result=>{\r\n                setInboundUploadFile(result);\r\n                setIsLoading(false);\r\n                console.log(\"scontaskpendnig\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    function getErrorLog(id,fileNames){\r\n\r\n        API.getInboundErrorList(id).then(\r\n            result=>{\r\n                console.log('i am error log Scope',result)\r\n                \r\n                setErrorLog(result);\r\n                const data = result;\r\n                //const data = result.map((rs)=>CreateDataPOScope.errorLog(rs.workpackageID , rs.phase, rs.packageName, rs.region, rs.dataStatus))\r\n                const exportType =  exportFromJSON.types.xls;\r\n                const fileNameDownload = `errorlog_${fileNames}`;\r\n                exportFromJSON({ data, fileNameDownload, exportType });\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleUploadFile = (id,filenameparam) =>\r\n    {\r\n        setInbFileId(id);\r\n        setFileName(filenameparam);\r\n        console.log(\"inbfileid: \", filenameparam);\r\n        setIsReviseFile(true);\r\n    }\r\n    const handleDeleteFile = (id) =>\r\n    {\r\n        if (window.confirm('Are you sure you want to delete this file ?')) {\r\n            console.log(id)\r\n            API.deleteInboundFile(id).then(\r\n                result=>{\r\n                    console.log(\"handledelete\",result)\r\n                    if(result.status==\"success\"){\r\n                        getInboundUploadFileList();\r\n                        message.success(result.message)\r\n                    }\r\n                    else{\r\n                        getInboundUploadFileList();\r\n                        message.error(result.message)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        // API.deleteInboundFile(id).then(\r\n        //     result=>{\r\n        //         console.log(\"handledelete\",result)\r\n        //         if(result.status==\"success\"){\r\n        //             message.success(\"Delete Success\")\r\n        //         }\r\n        //     }\r\n        // )\r\n    }\r\n    const handleOkReviseFile = () =>\r\n    {\r\n        setIsReviseFile(false);\r\n    }\r\n    const handleCancelReviseFile = () =>\r\n    {\r\n        \r\n        setIsReviseFile(false);\r\n    }\r\n    const handleOkFile = () =>\r\n    {\r\n        setIsUploadFile(false);\r\n    }\r\n    const handleCancelFile = () =>\r\n    {\r\n        \r\n        setIsUploadFile(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title : \"No\",\r\n            width : 50,\r\n            render: (value, item, index) => 1 + index\r\n        },\r\n        {\r\n            title : \"File Name\",\r\n            dataIndex:'fileName',\r\n            ...Search('fileName'),\r\n        },\r\n        {\r\n            title : \"Upload Date\",\r\n            dataIndex:'uploadedDate',\r\n            width: 120,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.uploadedDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search('uploadedDate'),\r\n        },\r\n        {\r\n            title : \"Upload By\",\r\n            dataIndex:'uploadedBy',\r\n            width: 150,\r\n            ...Search('uploadedBy'),\r\n        },\r\n        {\r\n            title : \"Status\",\r\n            dataIndex:'executeStatus',\r\n            width: 100,\r\n            ...Search('executeStatus'),\r\n        },\r\n        {\r\n            title:\"Err Message\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            ellipsis: true,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        {!record.rowlogCount > 0 ?\r\n                            <p style={{ color:'red' }}>{record.errMessage}</p>\r\n                            :\r\n                            <Tooltip title=\"Download Log\">\r\n                                <IconButton\r\n                                    aria-label=\"expand row\"\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={() => getErrorLog(record.inbFileId,record.fileName)}\r\n                                >\r\n                                    <SimCardDownloadIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n            \r\n        },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        {record.executeStatus==\"Failed\" ? \r\n                            \r\n                            <><Tooltip title=\"Upload File\">\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color=\"primary\"\r\n                                    aria-label=\"upload file\"\r\n                                    component=\"span\"\r\n                                    onClick={() => handleUploadFile(record.inbFileId, record.fileName)}>\r\n                                    <UploadOutlined />\r\n                                </IconButton>\r\n                            </Tooltip><Tooltip title=\"Delete File\">\r\n                                <DeleteTwoTone twoToneColor=\"#FF0000\" onClick={() => handleDeleteFile(record.inbFileId)} />\r\n                            </Tooltip></> :\r\n                            null\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n            \r\n        },\r\n        \r\n    \r\n    ]\r\n\r\n    const handleUpload = () => {\r\n        setUploading(true)\r\n        \r\n        API.postReviseInboundFile(inbFileId,fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    getInboundUploadFileList()\r\n                    setIsReviseFile(false);\r\n                    // window.location.reload()\r\n                    message.success('upload successfully.');\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    setIsReviseFile(false);\r\n                    getInboundUploadFileList()\r\n                    message.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n    const handleUploadFileNew = () => {\r\n        setUploading(true)\r\n        \r\n        API.postInboundFile(fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    getInboundUploadFileList()\r\n                    setIsUploadFile(false);\r\n                    // window.location.reload()\r\n                    toast.success('upload successfully.');\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    setIsUploadFile(false);\r\n                    getInboundUploadFileList()\r\n                    toast.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleShowAdd = () =>{\r\n        setIsUploadFile(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInboundUploadFileList();\r\n    },[])\r\n\r\n    return(\r\n        isLoading ?   \r\n            <Row justify=\"center\">\r\n                <Col span={1}>    \r\n                    <Spin />\r\n                </Col>\r\n            </Row>  \r\n            :\r\n            <>\r\n                <Row>\r\n                    <Col md={16} sm={24} >\r\n                        <Title level={5}>Inbound File List</Title>\r\n                    </Col>\r\n                    <Col md={8} sm={24} >\r\n                        <div className='float-right'>\r\n                            <Tooltip title=\"Add Material\">\r\n                                <IconButton size=\"small\" color=\"primary\" onClick={handleShowAdd}>\r\n                                    <PlusOutlined />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Table\r\n                    scroll={{ x: '100%' }}\r\n                    size=\"small\"\r\n                    // expandable={{ expandedRowRender }}\r\n                    columns={columns}\r\n                    dataSource={inboundUploadFile}\r\n                    pagination={{\r\n                        pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                        showSizeChanger: true,\r\n                        position: [\"bottomLeft\"],\r\n                    }}\r\n                    bordered />\r\n                <Modal title=\"Upload Revise File\"\r\n                    visible={isReviseFile}\r\n                    onOk={handleOkReviseFile}\r\n                    onCancel={handleCancelReviseFile}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <div>\r\n                        <p>Existing File Name : {fileName}</p>\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUpload}\r\n                            disabled={fileUpload == null}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Upload File\"\r\n                    visible={isUploadFile}\r\n                    onOk={handleOkFile}\r\n                    onCancel={handleCancelFile}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <div>\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUploadFileNew}\r\n                            disabled={fileUpload == null}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nexport default TableInboundUpload;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TableInboundUpload from './Table'\r\n\r\nconst InboundUpload = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Inbound Upload\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : \r\n                <TableInboundUpload/>\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InboundUpload;","/* eslint-disable no-nested-ternary */\r\n/* eslint-disable import/no-cycle */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport { getDataSiteList,getWpId,getOrderType,getOrderTypeId } from '@app/store/action/siteListDeliveryRequestAction';\r\nimport React,{useEffect,useState} from 'react'\r\nimport {toast} from 'react-toastify';\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport {Typography,Popconfirm,Select,Upload,message,Form,Modal,Table, Input,Menu, Dropdown, Button, Space, Spin, Row, Col,Tooltip  } from 'antd'\r\nimport {PlusOutlined, CloseSquareTwoTone ,CloseSquareOutlined,CalendarTwoTone,UserAddOutlined, EditOutlined,DeleteOutlined,SearchOutlined,CheckCircleFilled,MoreOutlined,DeleteTwoTone,UploadOutlined } from '@ant-design/icons'\r\nimport { useHistory } from 'react-router-dom';\r\nimport API  from '../../utils/apiServices';\r\nimport {IconButton, TextField}  from '@mui/material/';\r\nimport Search from '@app/components/searchcolumn/SearchColumn';\r\nimport moment from 'moment';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport SimCardDownloadIcon from '@mui/icons-material/SimCardDownload';\r\nimport exportFromJSON from 'export-from-json'\r\n\r\nconst TableInboundUpload = () => {\r\n    const { Option } = Select;\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [outboundUploadFile,setOutboundUploadFile] = useState([]);\r\n    const [isReviseFile, setIsReviseFile] = useState(false);\r\n    const [isUploadFile, setIsUploadFile] = useState(false);\r\n    const [errorLog,setErrorLog] = useState([])\r\n    const [fileUpload, setFileUpload] = useState(null);\r\n    const [uploading, setUploading] = useState(false);\r\n    const [inbFileId, setInbFileId] = useState(0);\r\n    const [fileName, setFileName] = useState('');\r\n    const { Title } = Typography;\r\n\r\n    const props = {\r\n        onRemove: () => {\r\n            setFileUpload(null);\r\n            return fileUpload\r\n        },\r\n        beforeUpload: file => {\r\n            setFileUpload(file);\r\n            return false;\r\n        },\r\n        fileUpload,\r\n    };\r\n\r\n\r\n    const getOutboundUploadFileList = () => {\r\n        setIsLoading(true);\r\n        API.getOutboundUploadFile().then(\r\n            result=>{\r\n                setOutboundUploadFile(result)\r\n                setIsLoading(false);\r\n                console.log(\"scontaskpendnig\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    function getErrorLog(id,fileNames){\r\n\r\n        API.getOutboundErrorList(id).then(\r\n            result=>{\r\n                console.log('i am error log Scope',result)\r\n                \r\n                setErrorLog(result);\r\n                const data = result;\r\n                //const data = result.map((rs)=>CreateDataPOScope.errorLog(rs.workpackageID , rs.phase, rs.packageName, rs.region, rs.dataStatus))\r\n                const exportType =  exportFromJSON.types.xls;\r\n                const fileNameDownload = `errorlog_${fileNames}`;\r\n                exportFromJSON({ data, fileNameDownload, exportType });\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleUploadFile = (id,filenameparam) =>\r\n    {\r\n        setInbFileId(id);\r\n        setFileName(filenameparam);\r\n        console.log(\"inbfileid: \", filenameparam);\r\n        setIsReviseFile(true);\r\n    }\r\n    const handleDeleteFile = (id) =>\r\n    {\r\n        if (window.confirm('Are you sure you want to delete this file ?')) {\r\n            console.log(id)\r\n            API.deleteOutboundFile(id).then(\r\n                result=>{\r\n                    console.log(\"handledelete\",result)\r\n                    if(result.status==\"success\"){\r\n                        getOutboundUploadFileList();\r\n                        message.success(result.message)\r\n                    }\r\n                    else{\r\n                        getOutboundUploadFileList();\r\n                        message.error(result.message)\r\n                    }\r\n                }\r\n            )\r\n        }\r\n        // API.deleteInboundFile(id).then(\r\n        //     result=>{\r\n        //         console.log(\"handledelete\",result)\r\n        //         if(result.status==\"success\"){\r\n        //             message.success(\"Delete Success\")\r\n        //         }\r\n        //     }\r\n        // )\r\n    }\r\n    const handleOkReviseFile = () =>\r\n    {\r\n        setIsReviseFile(false);\r\n    }\r\n    const handleCancelReviseFile = () =>\r\n    {\r\n        \r\n        setIsReviseFile(false);\r\n    }\r\n    const handleOkFile = () =>\r\n    {\r\n        setIsUploadFile(false);\r\n    }\r\n    const handleCancelFile = () =>\r\n    {\r\n        \r\n        setIsUploadFile(false);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title : \"No\",\r\n            width : 50,\r\n            render: (value, item, index) => 1 + index\r\n        },\r\n        {\r\n            title : \"File Name\",\r\n            dataIndex:'fileName',\r\n            ...Search('fileName'),\r\n        },\r\n        {\r\n            title : \"Upload Date\",\r\n            dataIndex:'uploadedDate',\r\n            width: 120,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        <p>{moment(record.uploadedDate).format(\"YYYY-MM-DD\")}</p>\r\n                    </Space>\r\n                )\r\n            },\r\n            ...Search('uploadedDate'),\r\n        },\r\n        {\r\n            title : \"Upload By\",\r\n            dataIndex:'uploadedBy',\r\n            width: 150,\r\n            ...Search('uploadedBy'),\r\n        },\r\n        {\r\n            title : \"Status\",\r\n            dataIndex:'executeStatus',\r\n            width: 100,\r\n            ...Search('executeStatus'),\r\n        },\r\n        {\r\n            title:\"Err Message\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            ellipsis: true,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        {!record.rowlogCount > 0 ?\r\n                            <p style={{ color:\"red\" }}>{record.errMessage}</p>\r\n                            :\r\n                            <Tooltip title=\"Download Log\">\r\n                                <IconButton\r\n                                    aria-label=\"expand row\"\r\n                                    size=\"small\"\r\n                                    color=\"error\"\r\n                                    onClick={() => getErrorLog(record.inbFileId,record.fileName)}\r\n                                >\r\n                                    <SimCardDownloadIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n            \r\n        },\r\n        {\r\n            title:\"Action\",\r\n            key:\"orderMaterialId\",\r\n            align:'center',\r\n            fixed: 'right',\r\n            width: 100,\r\n            render:(record)=>{\r\n                return (\r\n                    <Space>\r\n                        {record.executeStatus==\"Failed\" ? \r\n                            <><Tooltip title=\"Upload File\">\r\n                                <IconButton\r\n                                    size='small'\r\n                                    color=\"primary\"\r\n                                    aria-label=\"upload file\"\r\n                                    component=\"span\"\r\n                                    onClick={() => handleUploadFile(record.inbFileId, record.fileName)}>\r\n                                    <UploadOutlined />\r\n                                </IconButton>\r\n                            </Tooltip><Tooltip title=\"Delete File\">\r\n                                <DeleteTwoTone twoToneColor=\"#FF0000\" onClick={() => handleDeleteFile(record.inbFileId)} />\r\n                            </Tooltip></>:null\r\n                        }\r\n                    </Space>\r\n                )\r\n            }\r\n            \r\n        },\r\n        \r\n    \r\n    ]\r\n\r\n    const handleUpload = () => {\r\n        setUploading(true)\r\n        \r\n        API.postReviseInboundFile(inbFileId,fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    getOutboundUploadFileList()\r\n                    setIsReviseFile(false);\r\n                    // window.location.reload()\r\n                    message.success('upload successfully.');\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    setIsReviseFile(false);\r\n                    getOutboundUploadFileList()\r\n                    message.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n    const handleUploadFileNew = () => {\r\n        setUploading(true)\r\n        API.postOutboundFile(fileUpload).then(\r\n            result=>{\r\n                if(result.value.status==\"success\"){\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    getOutboundUploadFileList()\r\n                    setIsUploadFile(false);\r\n                    // window.location.reload()\r\n                    toast.success('upload successfully.');\r\n                }\r\n                else{\r\n                    setFileUpload(null);\r\n                    setUploading(false);\r\n                    props.onRemove();\r\n                    setIsUploadFile(false);\r\n                    getOutboundUploadFileList()\r\n                    toast.error(result.value.message);\r\n                }\r\n\r\n                console.log('i am PO upload xx',result)\r\n            }\r\n        );\r\n    }\r\n\r\n    const handleShowAdd = () =>{\r\n        setIsUploadFile(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOutboundUploadFileList();\r\n    },[])\r\n\r\n    return(\r\n        isLoading ?   \r\n            <Row justify=\"center\">\r\n                <Col span={1}>    \r\n                    <Spin />\r\n                </Col>\r\n            </Row>  \r\n            :\r\n            <>\r\n                <Row>\r\n                    <Col md={16} sm={24} >\r\n                        <Title level={5}>Outbound File List</Title>\r\n                    </Col>\r\n                    <Col md={8} sm={24} >\r\n                        <div className='float-right'>\r\n                            <Tooltip title=\"Upload File\">\r\n                                <IconButton size=\"small\" color=\"primary\" onClick={handleShowAdd}>\r\n                                    <PlusOutlined />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Table\r\n                    scroll={{ x: '100%' }}\r\n                    size=\"small\"\r\n                    // expandable={{ expandedRowRender }}\r\n                    columns={columns}\r\n                    dataSource={outboundUploadFile}\r\n                    pagination={{\r\n                        pageSizeOptions: ['5', '10', '20', '30', '40'],\r\n                        showSizeChanger: true,\r\n                        position: [\"bottomLeft\"],\r\n                    }}\r\n                    bordered />\r\n                <Modal title=\"Upload Revise File\"\r\n                    visible={isReviseFile}\r\n                    onOk={handleOkReviseFile}\r\n                    onCancel={handleCancelReviseFile}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <div>\r\n                        <p>Existing File Name : {fileName}</p>\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUpload}\r\n                            disabled={fileUpload == null}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n                <Modal title=\"Upload File\"\r\n                    visible={isUploadFile}\r\n                    onOk={handleOkFile}\r\n                    onCancel={handleCancelFile}\r\n                    footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <div>\r\n                        <Upload {...props}>\r\n                            <Button icon={<UploadOutlined />}>Select File</Button>\r\n                        </Upload>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={handleUploadFileNew}\r\n                            disabled={fileUpload == null}\r\n                            loading={uploading}\r\n                            style={{ marginTop: 16 }}\r\n                        >\r\n                            {uploading ? 'Uploading' : 'Start Upload'}\r\n                        </Button>\r\n                    </div>\r\n                </Modal>\r\n            </>\r\n            \r\n    )\r\n}\r\n\r\nexport default TableInboundUpload;","/* eslint-disable import/named */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React,{useEffect} from 'react';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport API  from '../../utils/apiServices';\r\nimport {useSelector} from 'react-redux';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TableInboundUpload from './Table'\r\n\r\nconst OutboundUpload = () => {\r\n    \r\n    const isLoading = useSelector((state) => state.ui.isLoading);\r\n    useEffect(() => {\r\n        //getDOP();\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"Inbound Upload\"/>\r\n            {/* {isEdit || isNew ? <DOPPanel/> : null} */}\r\n            {isLoading ? <Box sx={{ display: 'flex',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress />\r\n            </Box> : \r\n                <TableInboundUpload/>\r\n            }\r\n            \r\n            {/* <POScopeList /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OutboundUpload;","/* eslint-disable no-self-compare */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\n/* eslint-disable no-restricted-globals */\r\n/* eslint-disable react/jsx-no-bind */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable react/no-unstable-nested-components */\r\nimport React, {Component,useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Table, Row, Col,Card, Typography, Input, Space,\r\n    Form,\r\n    Button,\r\n    Radio,\r\n    Select,\r\n    Cascader,\r\n    DatePicker,\r\n    InputNumber,\r\n    TreeSelect,\r\n    Tooltip,\r\n    Checkbox ,\r\n    message } from 'antd';\r\nimport HeaderChanger from '@app/components/cardheader/HeaderChanger';\r\nimport Divider from '@mui/material/Divider';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport API  from '../../utils/apiServices';\r\nimport CreateDataDismantle from './DataGenerator';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SdrForm = (props) => {\r\n    const customURL = window.location.href;\r\n    const params = new URLSearchParams(customURL.split('?')[1])\r\n    const { Title } = Typography;\r\n    const wpid = params.get('wpid');\r\n    const ot = params.get('ot');\r\n    const subconid= 22\r\n    const orderTypeId = params.get('ot');\r\n    const [siteInfo, setSiteInfo] = useState([]);\r\n    const [cpoNo,setCpoNo] = useState(\"\");\r\n    const [generalScope,setGeneralScope] = useState(\"\");\r\n    const [siteID,setSiteID] = useState(\"\");\r\n    const [siteName,setSiteName] = useState(\"\");\r\n    const [packageName,setPackageName] = useState(\"\");\r\n    const [packageStatus,setPackageStatus] = useState(\"\");\r\n    const [sowIPM,setSOWIPM] = useState(\"\");\r\n    const [wBS,setWBS] = useState(\"\");\r\n    const [projectContract,setProjectContract] = useState(\"\");\r\n    const [region,setRegion] = useState(\"\");\r\n    const [express,setExpress] = useState(\"\");\r\n    const [ddlInventoryCode,setDDLInventoryCode] = useState([]);\r\n    const [ddlRequestBase,setDDLRequestBase] = useState([]);\r\n    const [ddlSiteLocation,setDDLSiteLocation] = useState([]);\r\n    const [ddlCTName,setDDLCTName] = useState([]);\r\n    const [ddlOrigin,setDDLOrigin] = useState([]);\r\n    const [ddlDestination,setDDLDestination] = useState([]);\r\n    const [ddlPacketType,setDDLPacketType] = useState([]);\r\n    const [ddlSubcon,setDDLSubcon] = useState([]);\r\n    const [ddlTeam,setDdlTeam] = useState([]);\r\n    const [ddlSiteCondition,setDDLSiteCondition] = useState([]);\r\n    const current = new Date();\r\n    const [checked,setChecked] = useState(true)\r\n    const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\r\n    \r\n    const history = useHistory();\r\n    const [selectedInvCode,setSelectedInvCode] = useState('');\r\n    const [selectedSiteLocation,setSelectedSiteLocation] = useState('');\r\n    const [selectedRequestBase,setSelectedRequestBase] = useState('');\r\n    const [selectedCTName,setSelectedCTName] = useState('');\r\n    const [selectedOrigin,setSelectedOrigin] = useState('');\r\n    const [selectedDestination,setSelectedDestination] = useState('');\r\n    const [selectedPacketType,setSelectedPacketType] = useState('');\r\n    const [selectedSubcon,setSelectedSubcon] = useState('');\r\n    const [selectedSiteCondition,setSelectedSiteCondition] = useState('');\r\n    const [deliveryDate,setDeliveryDate] = useState('');\r\n    const [siteAddress,setSiteAddress] = useState('');\r\n    const [selectedTeamCoordinator,setSelectedTeamCoordinator] = useState(\"\")\r\n\r\n    const navigateTo = (path) => {\r\n        history.push(path)\r\n    }\r\n    const user = useSelector((state) => state.auth.user);\r\n\r\n    const getSiteInfo = () => {\r\n        API.getSiteInfo(wpid).then(\r\n            result=>{\r\n                const data = [CreateDataDismantle.siteInfo(\r\n                    result.poDetail.cpoNo\r\n                    ,result.scopeDetail.scopeName\r\n                    ,result.siteNo\r\n                    ,result.siteName\r\n                    ,result.packageName\r\n                    ,result.packageName\r\n                    ,result.region)]\r\n                setSiteInfo(data);\r\n            }\r\n        )\r\n    }\r\n    const getTeamCoordinator = () => {\r\n        API.getTeamCoordinator(selectedSubcon,wpid).then(\r\n            result=>{\r\n                console.log(\"data team:\",result)\r\n                setDdlTeam(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getInventoryDDL = () => {\r\n        API.getInventoryActiveList().then(\r\n            result=>{\r\n                console.log(\"inventory\",result);\r\n                setDDLInventoryCode(result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getRequestBaseDDL = () => {\r\n        API.getRequestBase(orderTypeId).then(\r\n            result=>{\r\n                console.log(\"rb\",result);\r\n                setDDLRequestBase(result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getSiteLocationDDL = () => {\r\n        API.getSiteLocation().then(\r\n            result=>{\r\n                setDDLSiteLocation(result);\r\n                console.log(\"netype\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getCTNameDDL = (invcodeid) => {\r\n        API.getCTName(invcodeid).then(\r\n            result=>{\r\n                setDDLCTName(result);\r\n                console.log(\"CTNAMeDDL\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getOriginDDL = () => {\r\n        API.getOrigin(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLOrigin(result);\r\n                console.log(\"ORIGIN\",result);\r\n            }\r\n        )\r\n    }\r\n\r\n    const getDestination = () => {\r\n        API.getDestination(wpid,orderTypeId).then(\r\n            result=>{\r\n                setDDLDestination(result);\r\n                console.log(\"Destination\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getPacketType = () => {\r\n        API.getPacketType(orderTypeId).then(\r\n            result=>{\r\n                setDDLPacketType(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    const getSubcon = () => {\r\n        API.getSubcon(orderTypeId).then(\r\n            result=>{\r\n                setDDLSubcon(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const getSiteCondition = () => {\r\n        API.getSiteCondition(orderTypeId).then(\r\n            result=>{\r\n                setDDLSiteCondition(result);\r\n                console.log(\"PacketType\",result);\r\n            }\r\n        )\r\n    }\r\n    const getHasExpressDelivery = () => {\r\n        API.getHasExpressDelivery(orderTypeId).then(\r\n            result=>{\r\n                setExpress(result);\r\n                console.log(\"express\",result);\r\n            }\r\n        )\r\n    }\r\n    \r\n    const togleCheckbox = (value)=> {\r\n        setChecked(value)\r\n        console.log(\"v\",value)\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'PO NO/ RO No',\r\n            dataIndex: 'cpoNo',\r\n            key: 'cpoNo',\r\n        },\r\n        {\r\n            title: 'General Scope',\r\n            dataIndex: 'scopeName',\r\n            key: 'scopeName',\r\n        },\r\n        {\r\n            title: 'Site No',\r\n            dataIndex: 'siteNo',\r\n            key: 'siteNo',\r\n        },\r\n        {\r\n            title: 'Site Name',\r\n            dataIndex: 'siteName',\r\n            key: 'siteName',\r\n        },\r\n        {\r\n            title: 'Package Name',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Project Contract',\r\n            dataIndex: 'packageName',\r\n            key: 'packageName',\r\n        },\r\n        {\r\n            title: 'Region',\r\n            dataIndex: 'region',\r\n            key: 'region',\r\n        },\r\n    ];\r\n\r\n    function handleInvDDLChange(e){\r\n        console.log(\"handleInvDDLChange\",e); \r\n        setSelectedInvCode(e);\r\n        getCTNameDDL(e);\r\n    }\r\n\r\n    function range(start, end) {\r\n        const result = [];\r\n        for (let i = start; i < end; i++) {\r\n            result.push(i);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function disabledDateExpressTrue(current) {\r\n        // Can not select days before today and today\r\n        return (current && current < moment().endOf('day') && (current < moment().add(2,'d')))\r\n    }\r\n    function disabledDate(current) {\r\n        // Can not select days before today and today\r\n        return current < moment().add(2,'d');\r\n    }\r\n\r\n    function consoleTeam() {\r\n        console.log(\"dataTeam:\",selectedSubcon)\r\n    }\r\n\r\n    const postDismantleForm = () => {\r\n        const body = (\r\n            {\r\n                \"workpackageid\":wpid,            \r\n                \"InvCodeId\":selectedInvCode,\r\n                \"orderTypeId\":orderTypeId,\r\n                \"requestTypeId\":selectedRequestBase,\r\n                \"subconId\":selectedSubcon,\r\n                \"originId\":selectedOrigin,        \r\n                \"destinationId\":selectedDestination,        \r\n                \"siteConditionId\":selectedSiteCondition,\r\n                \"CTId\":selectedCTName,\r\n                \"packetTypeId\":selectedPacketType,\r\n                \"neTypeId\" : selectedSiteLocation,\r\n                \"siteAddress\": siteAddress,\r\n                \"isExpressDelivery\":express,\r\n                \"expectedDeliveryDate\":deliveryDate,\r\n                \"requestBy\": user.uid\r\n            }\r\n        )\r\n        console.log(\"dismantle body\",body);\r\n        API.postDismantleForm(body).then(\r\n            result=>{\r\n                if(result.status==\"success\")\r\n                {\r\n                    toast.success(result.message);\r\n                    navigateTo(`/sitelist/materialorder?odi=${result.returnVal}`)\r\n                }\r\n                else{\r\n                    toast.error(result.message)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    function btnConfirm(){\r\n        if(selectedRequestBase==''||selectedInvCode==''||\r\n            selectedSiteLocation==''||selectedCTName==''||\r\n            selectedOrigin==''||selectedDestination==''||\r\n            selectedPacketType==''||deliveryDate==''){\r\n                \r\n            message.error('Please Complete Form');\r\n        }\r\n        else{\r\n            postDismantleForm();\r\n        }\r\n    }\r\n\r\n    function btnCancel(){\r\n        navigateTo(\"/mm/sitelistdr\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('wpid:',wpid,\"ordertype:\",orderTypeId)\r\n        getSiteInfo();\r\n        getInventoryDDL();\r\n        getRequestBaseDDL();\r\n        getSiteLocationDDL();\r\n        getOriginDDL();\r\n        getDestination();\r\n        getPacketType();\r\n        getSubcon();\r\n        getSiteCondition();\r\n        getTeamCoordinator()\r\n        getHasExpressDelivery()\r\n    },[wpid,orderTypeId,selectedSubcon])\r\n\r\n    const CardTitle = (title) => (\r\n        <Title level={5}>\r\n            {title}\r\n        </Title>\r\n    )\r\n    const False = false\r\n\r\n    return (\r\n        <div>\r\n            <HeaderChanger title=\"SDR Form\"/>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"card card-primary\">\r\n                        <div className=\"card-header align-middle\">\r\n                            <h3 className=\"card-title\">Site Info</h3>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <Table columns={columns} scroll={{ x: '100%' }} pagination={false} dataSource={siteInfo} />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col span={24}>\r\n                    <Card hoverable title={CardTitle(\"Order Detail\")}>\r\n                        <Space direction=\"vertical\" style={{ width: '100%' }}>\r\n                            <Form\r\n                                labelCol={{ span: 5 }}\r\n                                wrapperCol={{ span: 18 }}\r\n                                layout=\"horizontal\"\r\n                                initialValues={{\r\n                                    'isExpressDelivery':true\r\n                                }}\r\n                            >\r\n                                <Form.Item label=\"Order Type\">\r\n                                    <Input disabled value=\"SDR\" />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Inventory Code\">\r\n                                    <Select \r\n                                        onChange={(e) => handleInvDDLChange(e)}\r\n                                        placeholder=\"Select an option\"\r\n                                    >\r\n                                        {/* <Select.Option value={0}>-- SELECT --</Select.Option> */}\r\n                                        {\r\n                                            ddlInventoryCode.map(inv =>  <Select.Option value={inv.invCodeId}> \r\n                                                {inv.invCode}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Request Base\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedRequestBase(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlRequestBase.map(rbs =>  <Select.Option value={rbs.requestTypeId}> \r\n                                                {rbs.requestTypeName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site A/NE - Site B/FE\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteLocation(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteLocation.map(slc =>  <Select.Option value={slc.neTypeId}> \r\n                                                {slc.neType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"CT Name\">\r\n                                    {\r\n                                        selectedInvCode == '' ?  <Select status=\"warning\" disabled placeholder=\"Please Select Inventory Code\">\r\n                                        </Select>\r\n                                            :\r\n                                            <Select \r\n                                                onChange={(e) => setSelectedCTName(e)} \r\n                                                placeholder=\"Select an option\">\r\n                                                {\r\n                                                    ddlCTName.map(slc =>  <Select.Option value={slc.ctId}> \r\n                                                        {slc.ctName}</Select.Option>)\r\n                                                }\r\n                                            </Select>\r\n                                    }\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Condition\">\r\n                                    <Select\r\n                                        onChange={(e) => setSelectedSiteCondition(e)}  \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSiteCondition.map(slc =>  <Select.Option value={slc.siteConditionId}> \r\n                                                {slc.condition}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Origin\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedOrigin(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlOrigin.map(org =>  <Select.Option value={org.dopId}> \r\n                                                {org.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Destination\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedDestination(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlDestination.map(dst =>  <Select.Option value={dst.dopId}> \r\n                                                {dst.dopName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"SubCon\">\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedSubcon(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlSubcon.map(dst =>  <Select.Option value={dst.subconId}> \r\n                                                {dst.subconName}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Team Coordinator at Site\r\n\">\r\n                                    {ddlTeam.length == null ? (<></>):(<Select \r\n                                        onChange={(e) => setSelectedTeamCoordinator(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                            \r\n                                        {\r\n                                            ddlTeam.map(dst =>  <Select.Option value={dst.userId}> \r\n                                                {dst.fullname}</Select.Option>)\r\n                                        }\r\n                                    </Select>)}\r\n                                    \r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item label=\"Express Delivery\" valuePropName=\"checked\" name=\"isExpressDelivery\">  \r\n                                    {express ? (<Checkbox onChange={(e)=>togleCheckbox(e.target.checked)}/>):(\r\n                                        <Tooltip color='#f50' title=\"Cannot request Express Delivery\"><Checkbox disabled  onChange={(e)=>togleCheckbox(e.target.checked)}/></Tooltip>\r\n                                    )}\r\n                                </Form.Item>\r\n                                \r\n                                <Form.Item label=\"Packet Type\" rules={[\r\n                                    {\r\n                                        required: true,\r\n                                    },\r\n                                ]}>\r\n                                    <Select \r\n                                        onChange={(e) => setSelectedPacketType(e)} \r\n                                        placeholder=\"Select an option\">\r\n                                        {\r\n                                            ddlPacketType.map(dst =>  <Select.Option value={dst.packetTypeId}> \r\n                                                {dst.packetType}</Select.Option>)\r\n                                        }\r\n                                    </Select>\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Site Address\">\r\n                                    <Input.TextArea \r\n                                        onChange={(e) => setSiteAddress(e.target.value)}  \r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Delivery Date\" rules={[{ required: true, message: 'Missing Inventory Code' }]}>\r\n                                    {checked ? (<DatePicker \r\n                                        format=\"YYYY-MM-DD\"\r\n                                        disabledDate={disabledDateExpressTrue}\r\n                                        onChange={(e) => setDeliveryDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                                        // disabledDate={current && current < moment().endOf('day')}\r\n                                        // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                                    />):(<DatePicker \r\n                                        format=\"YYYY-MM-DD\"\r\n                                        disabledDate={disabledDate}\r\n                                        onChange={(e) => setDeliveryDate(moment(e).format(\"YYYY-MM-DD\"))} \r\n                                        // disabledDate={current && current < moment().endOf('day')}\r\n                                        // showTime={{ defaultValue: moment('00:00:00', 'HH:mm:ss') }}\r\n                                    />)}\r\n                                   \r\n                                </Form.Item>\r\n                                {/* <Form.Item>\r\n                                    <Button type=\"primary\" htmlType=\"submit\">Confirm</Button>\r\n                                    <Button type=\"danger\">Cancel</Button>\r\n                                </Form.Item> */}\r\n                            </Form>\r\n                            <Divider orientation=\"center\" />\r\n                            <Row>\r\n                                <Col span={20}>\r\n                                    <Row>\r\n                                        <Col span={3}>Requester</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Request Date</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{date}</Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={3}>Phone No</Col>\r\n                                        <Col span={1}>:</Col>\r\n                                        <Col span={15}>{user.name}</Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col span={4}> \r\n                                    <Space direction=\"horizontal\">\r\n                                        <Button type=\"primary\" htmlType=\"submit\" onClick={btnConfirm}>Confirm</Button>\r\n                                       \r\n                                        <Button type=\"danger\" onClick={btnCancel}>Cancel</Button>\r\n                                    </Space>\r\n                                </Col>\r\n                            </Row>\r\n                        </Space>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SdrForm;","import React, {useState, useEffect, useCallback, createContext} from \"react\"\r\nimport {Route, Switch} from \"react-router-dom\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {Gatekeeper} from \"gatekeeper-client-sdk\"\r\nimport {loadUser, logoutUser} from \"@store/reducers/auth\"\r\nimport {toggleSidebarMenu} from \"@app/store/reducers/ui\"\r\n\r\nimport Dashboard from \"@pages/Dashboard\"\r\nimport Blank from \"@pages/Blank\"\r\nimport SubMenu from \"@pages/SubMenu\"\r\nimport Profile from \"@pages/profile/Profile\"\r\nimport mMaterialCategory from \"@pages/mMaterialCategory/mMaterialCategory\"\r\nimport mSubMaterialCategory from \"@pages/mSubMaterialCategory/mSubMaterialCategory\"\r\nimport mMaterial from \"@pages/mMaterial/mMaterial\"\r\nimport mDeliveryType from \"@pages/mDeliveryType/MDeliveryType\"\r\nimport mOrderType from \"@pages/mOrderType/MOrderType\"\r\nimport mDOP from \"@pages/mDOP/mDOP\"\r\nimport mScope from \"@pages/mScope/mScope\"\r\nimport mDOP2 from \"../../pages/dop2/index\"\r\nimport Scope2 from \"@app/pages/scope2/scope2\"\r\nimport POCreation from \"@pages/POCreation/POCreation\"\r\nimport POScope from \"@pages/POScope/POScope\"\r\nimport siteCondition from \"../../pages/mSiteCondition/mSiteCondition\"\r\nimport ScopeOrderType from \"@app/pages/mScopeOrderType/index\"\r\n// import mMaterialCategory from '@pages/mMaterialCategory/mordertype';\r\n// import mMaterialCategory from '@pages/mMaterialCategory/mMaterialCategory';\r\n\r\nimport Header from \"./header/Header\"\r\nimport Footer from \"./footer/Footer\"\r\nimport MenuSidebar from \"./menu-sidebar/MenuSidebar\"\r\nimport PageLoading from \"../../components/page-loading/PageLoading\"\r\nimport CardHeader from \"../../components/cardheader/cardheader\"\r\nimport WorkFlow from \"@app/pages/mWorkFlow/index\"\r\nimport SiteListDeliveryRequestType from \"@app/pages/siteListDeliveryRequestType/index\"\r\nimport DismantleForm from \"@app/pages/siteListDeliveryRequestType/DismantleForm\"\r\nimport DismantleFormEdit from \"@app/pages/siteListDeliveryRequestType/DismantleFormEdit\"\r\nimport MaterialOrder from \"@app/pages/siteListDeliveryRequestType/MaterialOrder\"\r\nimport LogisticForm from \"@app/pages/siteListDeliveryRequestType/LogistikForm\"\r\nimport Logistic from \"@app/pages/siteListDeliveryRequestType/Logistic\"\r\nimport TableAproval from \"@app/pages/approvel/tableAproval\"\r\nimport AprovalTaskPendingForm from \"../../pages/approvel/aprovalTaskPendingForm\"\r\nimport OrderRequestDraft from \"../../pages/orderRequestDraft/orderRequestDraft\"\r\nimport OrderRejectionPendingList from \"@app/pages/siteListDeliveryRequestType/OrderRejectionPending\"\r\nimport SconTaskSummary from \"@app/pages/SconTaskSummary/sconTaskSummary\"\r\nimport SconTaskPending from \"@app/pages/SconTaskPending/SconTaskPending\"\r\nimport InventoryReport from \"@app/pages/InventoryReport/InventoryReport\"\r\nimport InboundUpload from \"@app/pages/InboundUpload/InboundUpload\"\r\nimport OutboundUpload from \"@app/pages/OutboundUpload/OutboundUpload\"\r\n\r\nimport SdrForm from \"@app/pages/siteListDeliveryRequestType/SdrForm\"\r\n\r\nconst Main = () => {\r\n    const dispatch = useDispatch()\r\n    const isSidebarMenuCollapsed = useSelector(\r\n        (state) => state.ui.isSidebarMenuCollapsed\r\n    )\r\n\r\n    const screenSize = useSelector((state) => state.ui.screenSize)\r\n    const [isAppLoaded, setIsAppLoaded] = useState(false)\r\n\r\n    const handleToggleMenuSidebar = () => {\r\n        dispatch(toggleSidebarMenu())\r\n    }\r\n\r\n    const fetchProfile = async () => {\r\n        try {\r\n            //const response = await Gatekeeper.getProfile();\r\n            //dispatch(loadUser(response));\r\n            setIsAppLoaded(true)\r\n        } catch (error) {\r\n            dispatch(logoutUser())\r\n            setIsAppLoaded(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"root\").classList.remove(\"register-page\")\r\n        document.getElementById(\"root\").classList.remove(\"login-page\")\r\n        document.getElementById(\"root\").classList.remove(\"hold-transition\")\r\n\r\n        document.getElementById(\"root\").classList.add(\"sidebar-mini\")\r\n        document.getElementById(\"root\").classList.add(\"layout-fixed\")\r\n\r\n        fetchProfile()\r\n        return () => {\r\n            document.getElementById(\"root\").classList.remove(\"sidebar-mini\")\r\n            document.getElementById(\"root\").classList.remove(\"layout-fixed\")\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        document.getElementById(\"root\").classList.remove(\"sidebar-closed\")\r\n        document.getElementById(\"root\").classList.remove(\"sidebar-collapse\")\r\n        document.getElementById(\"root\").classList.remove(\"sidebar-open\")\r\n        if (isSidebarMenuCollapsed && screenSize === \"lg\") {\r\n            document.getElementById(\"root\").classList.add(\"sidebar-collapse\")\r\n        } else if (isSidebarMenuCollapsed && screenSize === \"xs\") {\r\n            document.getElementById(\"root\").classList.add(\"sidebar-open\")\r\n        } else if (!isSidebarMenuCollapsed && screenSize !== \"lg\") {\r\n            document.getElementById(\"root\").classList.add(\"sidebar-closed\")\r\n            document.getElementById(\"root\").classList.add(\"sidebar-collapse\")\r\n        }\r\n    }, [screenSize, isSidebarMenuCollapsed])\r\n\r\n    const getAppTemplate = useCallback(() => {\r\n        if (!isAppLoaded) {\r\n            return <PageLoading />\r\n        }\r\n        return (\r\n            <>\r\n                <Header toggleMenuSidebar={handleToggleMenuSidebar} />\r\n                <MenuSidebar />\r\n                <div className=\"content-wrapper\">\r\n                    <div className=\"pt-3\" />\r\n                    <section className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    {/* <h3 className=\"card-title\"> </h3> */}\r\n                                    <CardHeader />\r\n                                    <div className=\"card-tools\">\r\n                                        {/* <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-tool\"\r\n                                            data-widget=\"collapse\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            title=\"Collapse\"\r\n                                        >\r\n                                            <i className=\"fa fa-minus\" />\r\n                                        </button>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"btn btn-tool\"\r\n                                            data-widget=\"remove\"\r\n                                            data-toggle=\"tooltip\"\r\n                                            title=\"Remove\"\r\n                                        >\r\n                                            <i className=\"fa fa-times\" />\r\n                                        </button> */}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <Switch>\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sub-menu-2\"\r\n                                            component={Blank}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sub-menu-1\"\r\n                                            component={SubMenu}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/blank\"\r\n                                            component={Blank}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/profile\"\r\n                                            component={Profile}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/\"\r\n                                            component={Dashboard}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/materialcategory\"\r\n                                            component={mMaterialCategory}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/submaterialcategory\"\r\n                                            component={mSubMaterialCategory}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/material\"\r\n                                            component={mMaterial}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/deliverytype\"\r\n                                            component={mDeliveryType}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/ordertype\"\r\n                                            component={mOrderType}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/dop\"\r\n                                            component={mDOP}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/dop2\"\r\n                                            component={mDOP2}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/scope2\"\r\n                                            component={Scope2}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/scope\"\r\n                                            component={mScope}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/po/creation\"\r\n                                            component={POCreation}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/po/scope\"\r\n                                            component={POScope}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/sitecondition\"\r\n                                            component={siteCondition}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/scopeordertype\"\r\n                                            component={ScopeOrderType}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/master/workflow\"\r\n                                            component={WorkFlow}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/mm/sitelistdr\"\r\n                                            component={\r\n                                                SiteListDeliveryRequestType\r\n                                            }\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/dismantleedit/\"\r\n                                            component={DismantleFormEdit}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/sitedetail/\"\r\n                                            component={DismantleForm}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/sdrform/\"\r\n                                            component={SdrForm}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/materialorder/\"\r\n                                            component={MaterialOrder}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/logistikform/\"\r\n                                            component={LogisticForm}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/mm/taskasglogistic/\"\r\n                                            component={Logistic}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/aprovaltaskpending/\"\r\n                                            component={TableAproval}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/sitelist/aprovaltaskpendingform/\"\r\n                                            component={AprovalTaskPendingForm}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/mm/orderrequestdraft/\"\r\n                                            component={OrderRequestDraft}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/mm/orderrequestrejectionpending/\"\r\n                                            component={OrderRejectionPendingList}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/task/sconassignmentsummary\"\r\n                                            component={SconTaskSummary}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/task/assignment/\"\r\n                                            component={SconTaskPending}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/stock/inventory.js\"\r\n                                            component={InventoryReport}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/stock/inboundupload\"\r\n                                            component={InboundUpload}\r\n                                        />\r\n                                        <Route\r\n                                            exact\r\n                                            path=\"/stock/outboundupload\"\r\n                                            component={OutboundUpload}\r\n                                        />\r\n                                    </Switch>\r\n                                </div>\r\n                                <div className=\"card-footer\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n                <Footer />\r\n                <div\r\n                    id=\"sidebar-overlay\"\r\n                    role=\"presentation\"\r\n                    onClick={handleToggleMenuSidebar}\r\n                    onKeyDown={() => {}}\r\n                />\r\n            </>\r\n        )\r\n    }, [isAppLoaded])\r\n\r\n    return <div className=\"wrapper\">{getAppTemplate(\"test\")}</div>\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\r\nimport API  from '../utils/apiServices';\r\n\r\n\r\nexport const apiToken = async (username, password) => {\r\n    const userdata = {\r\n        username : username\r\n        ,password : password\r\n    }\r\n    const token = API.Login('auth')(userdata).then( \r\n        result=>{\r\n            console.log(\"i am auth :\",result.data.message);\r\n            return result.data.message;\r\n        })\r\n    return token;\r\n};\r\n\r\nexport const loginAPI = async (username, password) => {\r\n    const token = await apiToken(username, password);\r\n    console.log(\"i am loginbyauth :\",token);\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const loginByAuth = async (email, password) => {\r\n    const token = await Gatekeeper.loginByAuth(email, password);\r\n    console.log(\"i am loginbyauth :\",token);\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const registerByAuth = async (email, password) => {\r\n    const token = await Gatekeeper.registerByAuth(email, password);\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('register-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const loginByGoogle = async () => {\r\n    const token = await Gatekeeper.loginByGoogle();\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const registerByGoogle = async () => {\r\n    const token = await Gatekeeper.registerByGoogle();\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('register-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const loginByFacebook = async () => {\r\n    const token = await Gatekeeper.loginByFacebook();\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n\r\nexport const registerByFacebook = async () => {\r\n    const token = await Gatekeeper.registerByFacebook();\r\n    localStorage.setItem('token', token);\r\n    document.getElementById('root').classList.remove('register-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n    return token;\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport {useFormik} from 'formik';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {loadUser, loginUser} from '@store/reducers/auth';\r\nimport {Checkbox, Button, Input} from '@components';\r\nimport {faEnvelope, faLock, faUser} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport jwt from 'jwt-decode';\r\nimport * as Yup from 'yup';\r\n\r\nimport * as AuthService from '../../services/auth';\r\n\r\nconst Login = () => {\r\n    const [isAuthLoading, setAuthLoading] = useState(false);\r\n    const [isGoogleAuthLoading, setGoogleAuthLoading] = useState(false);\r\n    const [isFacebookAuthLoading, setFacebookAuthLoading] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n    const [t] = useTranslation();\r\n\r\n    \r\n    const User = (token) => {\r\n        const user =  jwt(token);\r\n        console.log(\"jwt user: \",user);\r\n    }\r\n\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            setAuthLoading(true);\r\n            const token = await AuthService.loginAPI(email, password); //await AuthService.loginByAuth(email, password);\r\n            dispatch(loginUser(token));\r\n            console.log('login : ',token);\r\n            const user =  jwt(token);\r\n            dispatch(loadUser(user));\r\n            toast.success('Login is succeed!');\r\n            setAuthLoading(false);\r\n \r\n            history.push('/');\r\n            \r\n        } catch (error) {\r\n            setAuthLoading(false);\r\n            toast.error(error.message || 'Failed');\r\n        }\r\n    };\r\n\r\n    const loginByGoogle = async () => {\r\n        try {\r\n            setGoogleAuthLoading(true);\r\n            const token = await AuthService.loginByGoogle();\r\n            toast.success('Login is succeeded!');\r\n            setGoogleAuthLoading(false);\r\n            dispatch(loginUser(token));\r\n            history.push('/');\r\n        } catch (error) {\r\n            setGoogleAuthLoading(false);\r\n            toast.error(error.message || 'Failed');\r\n        }\r\n    };\r\n\r\n    const loginByFacebook = async () => {\r\n        try {\r\n            setFacebookAuthLoading(true);\r\n            const token = await AuthService.loginByFacebook();\r\n            toast.success('Login is succeeded!');\r\n            setFacebookAuthLoading(false);\r\n            dispatch(loginUser(token));\r\n            history.push('/');\r\n        } catch (error) {\r\n            setFacebookAuthLoading(false);\r\n            toast.error(error.message || 'Failed');\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .required('Required'),\r\n            password: Yup.string()\r\n                .min(5, 'Must be 5 characters or more')\r\n                .max(30, 'Must be 30 characters or less')\r\n                .required('Required')\r\n        }),\r\n        onSubmit: (values) => {\r\n            login(values.email, values.password);\r\n        }\r\n    });\r\n\r\n    document.getElementById('root').classList = 'hold-transition login-page';\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <div className=\"card card-outline card-primary\">\r\n                <div className=\"card-header text-center\">\r\n                    <Link to=\"/\" className=\"h1\">\r\n                        <b>BORN</b>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"login-box-msg\">{t('login.label.signIn')}</p>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <Input\r\n                                icon={faUser}\r\n                                placeholder=\"User Name\"\r\n                                type=\"text\"\r\n                                formik={formik}\r\n                                formikFieldProps={formik.getFieldProps('email')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <Input\r\n                                icon={faLock}\r\n                                placeholder=\"Password\"\r\n                                type=\"password\"\r\n                                formik={formik}\r\n                                formikFieldProps={formik.getFieldProps(\r\n                                    'password'\r\n                                )}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-8\">\r\n                                <Checkbox\r\n                                    checked={false}\r\n                                    label={t('login.label.rememberMe')}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <Button\r\n                                    block\r\n                                    type=\"submit\"\r\n                                    isLoading={isAuthLoading}\r\n                                    disabled={\r\n                                        isFacebookAuthLoading ||\r\n                                        isGoogleAuthLoading\r\n                                    }\r\n                                >\r\n                                    {t('login.button.signIn.label')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    {/* <div className=\"social-auth-links text-center mt-2 mb-3\">\r\n                        <Button\r\n                            block\r\n                            icon=\"facebook\"\r\n                            onClick={loginByFacebook}\r\n                            isLoading={isFacebookAuthLoading}\r\n                            disabled={isAuthLoading || isGoogleAuthLoading}\r\n                        >\r\n                            {t('login.button.signIn.social', {\r\n                                what: 'Facebook'\r\n                            })}\r\n                        </Button>\r\n                        <Button\r\n                            block\r\n                            icon=\"google\"\r\n                            theme=\"danger\"\r\n                            onClick={loginByGoogle}\r\n                            isLoading={isGoogleAuthLoading}\r\n                            disabled={isAuthLoading || isFacebookAuthLoading}\r\n                        >\r\n                            {t('login.button.signIn.social', {what: 'Google'})}\r\n                        </Button>\r\n                    </div> */}\r\n                    <p className=\"mb-1\">\r\n                        <Link to=\"/forgot-password\">\r\n                            {t('login.label.forgotPass')}\r\n                        </Link>\r\n                    </p>\r\n                  \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React, {useState} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\nimport {toast} from 'react-toastify';\r\nimport {useFormik} from 'formik';\r\nimport {useTranslation} from 'react-i18next';\r\nimport * as Yup from 'yup';\r\nimport {loginUser} from '@store/reducers/auth';\r\nimport {Button, Checkbox, Input} from '@components';\r\nimport {faEnvelope, faLock} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport * as AuthService from '../../services/auth';\r\n\r\nconst Register = () => {\r\n    const [isAuthLoading, setAuthLoading] = useState(false);\r\n    const [isGoogleAuthLoading, setGoogleAuthLoading] = useState(false);\r\n    const [isFacebookAuthLoading, setFacebookAuthLoading] = useState(false);\r\n    const [t] = useTranslation();\r\n    const dispatch = useDispatch();\r\n\r\n    const history = useHistory();\r\n\r\n    const register = async (email, password) => {\r\n        try {\r\n            setAuthLoading(true);\r\n            const token = await AuthService.registerByAuth(email, password);\r\n            setAuthLoading(false);\r\n            dispatch(loginUser(token));\r\n            toast.success('Registration is success');\r\n            history.push('/');\r\n        } catch (error) {\r\n            toast.error(error.message || 'Failed');\r\n            setAuthLoading(false);\r\n        }\r\n    };\r\n\r\n    const registerByGoogle = async () => {\r\n        try {\r\n            setGoogleAuthLoading(true);\r\n            const token = await AuthService.registerByGoogle();\r\n            setGoogleAuthLoading(false);\r\n            dispatch(loginUser(token));\r\n            toast.success('Authentication is succeed!');\r\n            history.push('/');\r\n        } catch (error) {\r\n            toast.error(error.message || 'Failed');\r\n            setGoogleAuthLoading(false);\r\n        }\r\n    };\r\n\r\n    const registerByFacebook = async () => {\r\n        try {\r\n            setFacebookAuthLoading(true);\r\n\r\n            const token = await AuthService.registerByFacebook();\r\n            setFacebookAuthLoading(false);\r\n            dispatch(loginUser(token));\r\n            toast.success('Register is succeeded!');\r\n            history.push('/');\r\n        } catch (error) {\r\n            setFacebookAuthLoading(false);\r\n            toast.error(error.message || 'Failed');\r\n        }\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            passwordRetype: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            email: Yup.string()\r\n                .email('Invalid email address')\r\n                .required('Required'),\r\n            password: Yup.string()\r\n                .min(5, 'Must be 5 characters or more')\r\n                .max(30, 'Must be 30 characters or less')\r\n                .required('Required'),\r\n            passwordRetype: Yup.string()\r\n                .min(5, 'Must be 5 characters or more')\r\n                .max(30, 'Must be 30 characters or less')\r\n                .required('Required')\r\n                .when('password', {\r\n                    is: (val) => !!(val && val.length > 0),\r\n                    then: Yup.string().oneOf(\r\n                        [Yup.ref('password')],\r\n                        'Both password need to be the same'\r\n                    )\r\n                })\r\n        }),\r\n        onSubmit: (values) => {\r\n            register(values.email, values.password);\r\n        }\r\n    });\r\n\r\n    document.getElementById('root').classList = 'hold-transition register-page';\r\n\r\n    return (\r\n        <div className=\"register-box\">\r\n            <div className=\"card card-outline card-primary\">\r\n                <div className=\"card-header text-center\">\r\n                    <Link to=\"/\" className=\"h1\">\r\n                        <b>Admin</b>\r\n                        <span>LTE</span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"login-box-msg\">{t('register.registerNew')}</p>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                        <div className=\"mb-3\">\r\n                            <Input\r\n                                type=\"email\"\r\n                                placeholder=\"Email\"\r\n                                icon={faEnvelope}\r\n                                formik={formik}\r\n                                formikFieldProps={formik.getFieldProps('email')}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                icon={faLock}\r\n                                formik={formik}\r\n                                formikFieldProps={formik.getFieldProps(\r\n                                    'password'\r\n                                )}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                            <Input\r\n                                type=\"password\"\r\n                                placeholder=\"Retype password\"\r\n                                icon={faLock}\r\n                                formik={formik}\r\n                                formikFieldProps={formik.getFieldProps(\r\n                                    'passwordRetype'\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-7\">\r\n                                <Checkbox\r\n                                    checked={false}\r\n                                    label={\r\n                                        <>\r\n                                            <span>I agree to the </span>\r\n                                            <Link to=\"/\">terms</Link>\r\n                                        </>\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className=\"col-5\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    block\r\n                                    isLoading={isAuthLoading}\r\n                                    disabled={\r\n                                        isFacebookAuthLoading ||\r\n                                        isGoogleAuthLoading\r\n                                    }\r\n                                >\r\n                                    {t('register.label')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"social-auth-links text-center\">\r\n                        <Button\r\n                            block\r\n                            icon=\"facebook\"\r\n                            onClick={registerByFacebook}\r\n                            isLoading={isFacebookAuthLoading}\r\n                            disabled={isAuthLoading || isGoogleAuthLoading}\r\n                        >\r\n                            {t('login.button.signUp.social', {\r\n                                what: 'Facebook'\r\n                            })}\r\n                        </Button>\r\n                        <Button\r\n                            block\r\n                            icon=\"google\"\r\n                            theme=\"danger\"\r\n                            onClick={registerByGoogle}\r\n                            isLoading={isGoogleAuthLoading}\r\n                            disabled={isAuthLoading || isFacebookAuthLoading}\r\n                        >\r\n                            {t('login.button.signUp.social', {what: 'Google'})}\r\n                        </Button>\r\n                    </div>\r\n                    <Link to=\"/login\" className=\"text-center\">\r\n                        {t('register.alreadyHave')}\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Input, Button} from '@components';\r\nimport {faEnvelope} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ForgotPassword = () => {\r\n    const [t] = useTranslation();\r\n    let emailInput = null;\r\n\r\n    const setEmailInputRef = (element) => {\r\n        emailInput = element;\r\n    };\r\n\r\n    const requestNewPassword = (event) => {\r\n        toast.warn('Not yet functional');\r\n        // eslint-disable-next-line no-console\r\n        console.log(emailInput);\r\n        event.preventDefault();\r\n    };\r\n\r\n    document.getElementById('root').classList = 'hold-transition login-page';\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <div className=\"card card-outline card-primary\">\r\n                <div className=\"card-header text-center\">\r\n                    <Link to=\"/\" className=\"h1\">\r\n                        <b>Admin</b>\r\n                        <span>LTE</span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"login-box-msg\">\r\n                        {t('recover.forgotYourPassword')}\r\n                    </p>\r\n                    <form onSubmit={requestNewPassword}>\r\n                        <Input\r\n                            className=\"mb-3\"\r\n                            icon={faEnvelope}\r\n                            ref={setEmailInputRef}\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                        />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <Button type=\"submit\" block>\r\n                                    {t('recover.requestNewPassword')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <p className=\"mt-3 mb-1\">\r\n                        <Link to=\"/login\">\r\n                            {t('login.button.signIn.label')}\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, {useRef} from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport {Link} from 'react-router-dom';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Input, Button} from '@components';\r\nimport {faLock} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst RecoverPassword = () => {\r\n    const passwordInput = useRef(null);\r\n    const confirmPasswordInput = useRef(null);\r\n    const [t] = useTranslation();\r\n\r\n    const confirm = (event) => {\r\n        event.preventDefault();\r\n        toast.warn('Not yet functional');\r\n    };\r\n\r\n    document.getElementById('root').classList = 'hold-transition login-page';\r\n\r\n    return (\r\n        <div className=\"login-box\">\r\n            <div className=\"card card-outline card-primary\">\r\n                <div className=\"card-header text-center\">\r\n                    <Link to=\"/\" className=\"h1\">\r\n                        <b>Admin</b>\r\n                        <span>LTE</span>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <p className=\"login-box-msg\">{t('recover.oneStepAway')}</p>\r\n                    <form onSubmit={confirm}>\r\n                        <Input\r\n                            ref={passwordInput}\r\n                            className=\"mb-3\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            icon={faLock}\r\n                        />\r\n                        <Input\r\n                            ref={confirmPasswordInput}\r\n                            className=\"mb-3\"\r\n                            type=\"password\"\r\n                            placeholder=\"Confirm Password\"\r\n                            icon={faLock}\r\n                        />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <Button type=\"submit\" block>\r\n                                    {t('recover.changePassword')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <p className=\"mt-3 mb-1\">\r\n                        <Link to=\"/login\">\r\n                            {t('login.button.signIn.label')}\r\n                        </Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecoverPassword;\r\n","import React from 'react';\r\n\r\nconst PrivacyPolicy = () => {\r\n    return (\r\n        <>\r\n            <strong>Privacy Policy</strong>\r\n            <p>\r\n                Erdi Köse built the Admin LTE app as an Open Source app. This\r\n                SERVICE is provided by Erdi Köse at no cost and is intended for\r\n                use as is.\r\n            </p>\r\n            <p>\r\n                This page is used to inform visitors regarding my policies with\r\n                the collection, use, and disclosure of Personal Information if\r\n                anyone decided to use my Service.\r\n            </p>\r\n            <p>\r\n                If you choose to use my Service, then you agree to the\r\n                collection and use of information in relation to this policy.\r\n                The Personal Information that I collect is used for providing\r\n                and improving the Service. I will not use or share your\r\n                information with anyone except as described in this Privacy\r\n                Policy.\r\n            </p>\r\n            <p>\r\n                The terms used in this Privacy Policy have the same meanings as\r\n                in our Terms and Conditions, which is accessible at Admin LTE\r\n                unless otherwise defined in this Privacy Policy.\r\n            </p>\r\n            <p>\r\n                <strong>Information Collection and Use</strong>\r\n            </p>\r\n            <p>\r\n                For a better experience, while using our Service, I may require\r\n                you to provide us with certain personally identifiable\r\n                information. The information that I request will be retained on\r\n                your device and is not collected by me in any way.\r\n            </p>\r\n            <div>\r\n                <p>\r\n                    The app does use third party services that may collect\r\n                    information used to identify you.\r\n                </p>\r\n                <p>\r\n                    Link to privacy policy of third party service providers used\r\n                    by the app\r\n                </p>\r\n                <ul>\r\n                    <li>\r\n                        <a\r\n                            href=\"https://www.facebook.com/about/privacy/update/printable\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                        >\r\n                            Facebook\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <p>\r\n                <strong>Log Data</strong>\r\n            </p>\r\n            <p>\r\n                I want to inform you that whenever you use my Service, in a case\r\n                of an error in the app I collect data and information (through\r\n                third party products) on your phone called Log Data. This Log\r\n                Data may include information such as your device Internet\r\n                Protocol (“IP”) address, device name, operating system version,\r\n                the configuration of the app when utilizing my Service, the time\r\n                and date of your use of the Service, and other statistics.\r\n            </p>\r\n            <p>\r\n                <strong>Cookies</strong>\r\n            </p>\r\n            <p>\r\n                Cookies are files with a small amount of data that are commonly\r\n                used as anonymous unique identifiers. These are sent to your\r\n                browser from the websites that you visit and are stored on your\r\n                device`&apos;`s internal memory.\r\n            </p>\r\n            <p>\r\n                This Service does not use these “cookies” explicitly. However,\r\n                the app may use third party code and libraries that use\r\n                “cookies” to collect information and improve their services. You\r\n                have the option to either accept or refuse these cookies and\r\n                know when a cookie is being sent to your device. If you choose\r\n                to refuse our cookies, you may not be able to use some portions\r\n                of this Service.\r\n            </p>\r\n            <p>\r\n                <strong>Service Providers</strong>\r\n            </p>\r\n            <p>\r\n                I may employ third-party companies and individuals due to the\r\n                following reasons:\r\n            </p>\r\n            <ul>\r\n                <li>To facilitate our Service;</li>\r\n                <li>To provide the Service on our behalf;</li>\r\n                <li>To perform Service-related services; or</li>\r\n                <li>To assist us in analyzing how our Service is used.</li>\r\n            </ul>\r\n            <p>\r\n                I want to inform users of this Service that these third parties\r\n                have access to your Personal Information. The reason is to\r\n                perform the tasks assigned to them on our behalf. However, they\r\n                are obligated not to disclose or use the information for any\r\n                other purpose.\r\n            </p>\r\n            <p>\r\n                <strong>Security</strong>\r\n            </p>\r\n            <p>\r\n                I value your trust in providing us your Personal Information,\r\n                thus we are striving to use commercially acceptable means of\r\n                protecting it. But remember that no method of transmission over\r\n                the internet, or method of electronic storage is 100% secure and\r\n                reliable, and I cannot guarantee its absolute security.\r\n            </p>\r\n            <p>\r\n                <strong>Links to Other Sites</strong>\r\n            </p>\r\n            <p>\r\n                This Service may contain links to other sites. If you click on a\r\n                third-party link, you will be directed to that site. Note that\r\n                these external sites are not operated by me. Therefore, I\r\n                strongly advise you to review the Privacy Policy of these\r\n                websites. I have no control over and assume no responsibility\r\n                for the content, privacy policies, or practices of any\r\n                third-party sites or services.\r\n            </p>\r\n            <p>\r\n                <strong>Children’s Privacy</strong>\r\n            </p>\r\n            <p>\r\n                These Services do not address anyone under the age of 13. I do\r\n                not knowingly collect personally identifiable information from\r\n                children under 13. In the case I discover that a child under 13\r\n                has provided me with personal information, I immediately delete\r\n                this from our servers. If you are a parent or guardian and you\r\n                are aware that your child has provided us with personal\r\n                information, please contact me so that I will be able to do\r\n                necessary actions.\r\n            </p>\r\n            <p>\r\n                <strong>Changes to This Privacy Policy</strong>\r\n            </p>\r\n            <p>\r\n                I may update our Privacy Policy from time to time. Thus, you are\r\n                advised to review this page periodically for any changes. I will\r\n                notify you of any changes by posting the new Privacy Policy on\r\n                this page.\r\n            </p>\r\n            <p>This policy is effective as of 2020-04-19</p>\r\n            <p>\r\n                <strong>Contact Us</strong>\r\n            </p>\r\n            <p>\r\n                If you have any questions or suggestions about my Privacy\r\n                Policy, do not hesitate to contact me at erdikose8@gmail.com.\r\n            </p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PrivacyPolicy;\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst PublicRoute = ({children, ...rest}) => {\r\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n    const isAuthenticated = isLoggedIn || localStorage.getItem('token');\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) =>\r\n                isAuthenticated ? (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/',\r\n                            state: {from: location}\r\n                        }}\r\n                    />\r\n                ) : (\r\n                    children\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst PrivateRoute = ({children, ...rest}) => {\r\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({location}) =>\r\n                isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: {from: location}\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, {useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch} from 'react-router-dom';\r\nimport Main from '@modules/main/Main';\r\nimport Login from '@modules/login/Login';\r\nimport Register from '@modules/register/Register';\r\nimport ForgetPassword from '@modules/forgot-password/ForgotPassword';\r\nimport RecoverPassword from '@modules/recover-password/RecoverPassword';\r\nimport PrivacyPolicy from '@modules/privacy-policy/PrivacyPolicy';\r\nimport {useWindowSize} from '@app/hooks/useWindowSize';\r\nimport {calculateWindowSize} from '@app/utils/helpers';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {setWindowSize} from '@app/store/reducers/ui';\r\n\r\nimport PublicRoute from './routes/PublicRoute';\r\nimport PrivateRoute from './routes/PrivateRoute';\r\n\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n    const windowSize = useWindowSize();\r\n    const screenSize = useSelector((state) => state.ui.screenSize);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const size = calculateWindowSize(windowSize.width);\r\n        if (screenSize !== size) {\r\n            dispatch(setWindowSize(size));\r\n        }\r\n    }, [windowSize]);\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <PublicRoute exact path=\"/login\">\r\n                    <Login />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/register\">\r\n                    <Register />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/forgot-password\">\r\n                    <ForgetPassword />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/recover-password\">\r\n                    <RecoverPassword />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/privacy-policy\">\r\n                    <PrivacyPolicy />\r\n                </PublicRoute>\r\n                <PublicRoute exact path=\"/callback\">\r\n                    <h1>Callback</h1>\r\n                </PublicRoute>\r\n                <PrivateRoute path=\"/\">\r\n                    <Main />\r\n                </PrivateRoute>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/* eslint-disable import/prefer-default-export */\r\nimport {useState, useEffect} from 'react';\r\n\r\nexport const useWindowSize = () => {\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    });\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowSize({\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            });\r\n        }\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n    return windowSize;\r\n};\r\n","const initialState = {\r\n    dataDop: [],\r\n    isLoading: false,\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const dopReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_DOP\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_DOP\":\r\n        return {\r\n            ...state,\r\n            dataDop:action.payload,\r\n            isLoading: false,\r\n        };\r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};\r\n  ","const initialState = {\r\n    dataScope: [],\r\n    isLoading: false,\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const scopeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_SCOPE\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_SCOPE\":\r\n        return {\r\n            ...state,\r\n            dataScope:action.payload,\r\n            isLoading: false,\r\n        };\r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};","const initialState = {\r\n    dataPOScope: [],\r\n    isLoading: false,\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const poScopeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_POSCOPE\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_POSCOPE\":\r\n        return {\r\n            ...state,\r\n            dataPOScope:action.payload,\r\n            isLoading: false,\r\n        };\r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};\r\n  ","/* eslint-disable no-duplicate-case */\r\nconst initialState = {\r\n    dataSiteCondition: [],\r\n    isLoading: false,\r\n    siteName:'',\r\n    isActive : '',\r\n    siteConditionId:'',\r\n    activestatus: '',\r\n    id:''\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const siteConditionReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_SITE\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_SITE\":\r\n        return {\r\n            ...state,\r\n            dataSiteCondition:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_DATA_SITE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"POST_DATA_SITE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"GET_SITE_ID\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n            siteConditionId:action.payload\r\n        };\r\n    case \"EDIT_DATA_SITE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"EDIT_DATA_SITE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n    case \"EDIT_ACTIVATION_SITE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"EDIT_ACTIVATION_SITE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ACTIVE_STATUS\":\r\n        return {\r\n            ...state,\r\n            activestatus:!action.payload,\r\n                \r\n        };\r\n    case \"GET_ID\":\r\n        return {\r\n            ...state,\r\n            id:action.payload,\r\n                    \r\n        };\r\n                \r\n            \r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};","/* eslint-disable no-duplicate-case */\r\nconst initialState = {\r\n    dataScopeOrderType: [],\r\n    dataOrderType:[],\r\n    isLoading: false,\r\n    scopeOrderId:'',\r\n    activestatus:''\r\n    \r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const scopeOrderReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_SCOPE_ORDER\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_SCOPE_ORDER\":\r\n        return {\r\n            ...state,\r\n            dataScopeOrderType:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_DATA_SCOPE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"POST_DATA_SCOPE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"GET_SITE_ID\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n            siteConditionId:action.payload\r\n        };\r\n    case \"EDIT_DATA_SCOPE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"EDIT_DATA_SCOPE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_DATA_ORDER\":\r\n        return {\r\n            ...state,\r\n      \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_ORDER\":\r\n        return {\r\n            ...state,\r\n            dataOrderType:action.payload,\r\n            isLoading: true,\r\n        };\r\n    case \"GET_SCOPE_ID\":\r\n        return {\r\n            ...state,\r\n            scopeOrderId:action.payload,\r\n            \r\n        };\r\n\r\n    case \"GET_ACTIVE_STATUS\":\r\n        return {\r\n            ...state,\r\n            activestatus:action.payload,\r\n            \r\n        };\r\n    case \"EDIT_SCOPE\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"EDIT_SCOPE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_SCOPE_ORDER_ID\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n            scopeOrderId:action.payload\r\n        };\r\n            \r\n        \r\n            \r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};","/* eslint-disable default-param-last */\r\nconst initialState = {\r\n    dataWorkFlow: [],\r\n    isLoading: false,\r\n    \r\n};\r\n\r\nexport const workFlowReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_WORKFLOW\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_WORKFLOW\":\r\n        return {\r\n            ...state,\r\n            dataWorkFlow:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_DATA_WORKFLOW\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"POST_DATA_WORKFLOW_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"GET_WORKFLOW_ID\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n            siteConditionId:action.payload\r\n        };\r\n    case \"EDIT_DATA_WORKFLOW\":\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        };\r\n    case \"EDIT_DATA_WORKFLOW_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        };\r\n        \r\n            \r\n  \r\n    default:\r\n        return state;\r\n    }\r\n};","const initialState = {\r\n    data: [],\r\n    dataOrderRejection:[],\r\n    isLoading: false,\r\n    wpId:'',\r\n    odi:\"\",\r\n    orderList:[],\r\n    orderTypeId:''\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const siteListDeliveryRequestReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_SITE_LIST\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_SITE_LIST\":\r\n        return {\r\n            ...state,\r\n            data:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ORDER_REJECTION_PENDING\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_ORDER_REJECTION_PENDING\":\r\n        return {\r\n            ...state,\r\n            dataOrderRejection:action.payload,\r\n            isLoading: false,\r\n        };\r\n\r\n    case \"GET_WP_ID\":\r\n        return {\r\n            ...state,\r\n            wpId:action.payload,\r\n            isLoading: false,\r\n        };\r\n      \r\n    case \"GET_ODI\":\r\n        return {\r\n            ...state,\r\n            odi:action.payload,\r\n            isLoading: false,\r\n        };\r\n      \r\n    case \"GET_ORDER_TYPE\":\r\n        return {\r\n            ...state,\r\n            orderList:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ORDER_TYPE_ID\":\r\n        return {\r\n            ...state,\r\n            orderTypeId:action.payload,\r\n            isLoading: false,\r\n        };\r\n    default:\r\n        return state;\r\n    }\r\n};","/* eslint-disable no-duplicate-case */\r\nconst initialState = {\r\n    dataSiteInfo: [],\r\n    dataOrderDetail:[],\r\n    detaDeliveryList:[],\r\n    dataDeliveryMode:[],\r\n    dataLogisticPending:[],\r\n    dataDeliveryTransport:[],\r\n    dataLsp:[],\r\n    idDelivery:'',\r\n    idTaskPending:'',\r\n    odi:'',\r\n    stats:[],\r\n    statsDraft:[],\r\n    isLoading: false,\r\n\r\n    \r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const logistikFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_DATA_SITE_INFO\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_DATA_SITE_INFO\":\r\n        return {\r\n            ...state,\r\n            dataSiteInfo:action.payload,\r\n            isLoading: false,\r\n        };\r\n\r\n    case \"GET_MATERIAL_ORDER_DETAIL\":\r\n        return {\r\n            ...state,\r\n           \r\n            isLoading: false,\r\n        };\r\n      \r\n    case \"SET_MATERIAL_ORDER_DETAIL\":\r\n        return {\r\n            ...state,\r\n            dataOrderDetail:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_LSP\":\r\n        return {\r\n            ...state,\r\n               \r\n            isLoading: false,\r\n        };\r\n          \r\n    case \"SET_LSP\":\r\n        return {\r\n            ...state,\r\n            dataLsp:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_DELIVERY_LIST\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: false,\r\n        };\r\n              \r\n    case \"SET_DELIVERY_LIST\":\r\n        return {\r\n            ...state,\r\n            detaDeliveryList:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_DELIVERY_TRANSPORT\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: false,\r\n        };\r\n              \r\n    case \"SET_DELIVERY_TRANSPORT\":\r\n        return {\r\n            ...state,\r\n            detaDeliveryTransport:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_DELIVERY_MODE\":\r\n        return {\r\n            ...state,\r\n                       \r\n            isLoading: false,\r\n        };\r\n                  \r\n    case \"SET_DELIVERY_MODE\":\r\n        return {\r\n            ...state,\r\n            detaDeliveryMode:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_LOGISTIK_FORM\":\r\n        return {\r\n            ...state,\r\n            \r\n            isLoading: true,\r\n        };\r\n        \r\n    case \"POST_LOGISTIK_FORM_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            stats:action.payload,\r\n            \r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"POST_AS_DRAFT\":\r\n        return {\r\n            ...state,\r\n            \r\n            isLoading: true,\r\n        };\r\n        \r\n    case \"POST_AS_DRAFT_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            statsDraft:action.payload,\r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"GET_ID_DELIVERY\":\r\n        return {\r\n            ...state,\r\n            idDelivery:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ODI\":\r\n        return {\r\n            ...state,\r\n            odi:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_LOGISTIK_PENDING\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: false,\r\n        };\r\n              \r\n    case \"SET_LOGISTIK_PENDING\":\r\n        return {\r\n            ...state,\r\n            dataLogisticPending:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ID_TASK_PENDING\":\r\n        return {\r\n            ...state,\r\n            idTaskPending:action.payload,\r\n            isLoading: false,\r\n        };\r\n            \r\n    \r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","/* eslint-disable default-param-last */\r\nconst initialState = {\r\n    dataAprovalPending: [],\r\n    dataOrderRequestDetail:[],\r\n    dataMaterial:[],\r\n    dataLog:[],\r\n    stats:[],\r\n    statsReject:[],\r\n    odi:\"\",\r\n    sno:\"\",\r\n    isLoading: false,\r\n    \r\n};\r\n\r\nexport const aprovalTaskPendingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case \"GET_APROVAL_PENDING\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"SET_APROVAL_PENDING\":\r\n        return {\r\n            ...state,\r\n            dataAprovalPending:action.payload,\r\n            isLoading: false,\r\n        };\r\n    \r\n    case \"GET_ORDER_REQUEST_DETAIL\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"SET_ORDER_REQUEST_DETAIL\":\r\n        return {\r\n            ...state,\r\n            dataOrderRequestDetail:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_MATERIAL\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"SET_MATERIAL\":\r\n        return {\r\n            ...state,\r\n            dataMaterial:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_LOG\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"SET_LOG\":\r\n        return {\r\n            ...state,\r\n            dataLog:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_APROVE\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"POST_APROVE_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            stats:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"POST_REJECT\":\r\n        return {\r\n            ...state,\r\n                   \r\n            isLoading: true,\r\n        };\r\n              \r\n    case \"POST_REJECT_SUCCESS\":\r\n        return {\r\n            ...state,\r\n            statsReject:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_ODI\":\r\n        return {\r\n            ...state,\r\n            odi:action.payload,\r\n            isLoading: false,\r\n        };\r\n    \r\n    case \"GET_SNO\":\r\n        return {\r\n            ...state,\r\n            sno:action.payload,\r\n            isLoading: false,\r\n        };\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    default:\r\n        return state;\r\n    }\r\n};","const initialState = {\r\n    dataPending: [],\r\n    dataOnProgress:[],\r\n    dataDone:[],\r\n    odi:'',\r\n    lsp:'',\r\n    pud:'',\r\n    dataSubcon:[],\r\n \r\n    orderTypeId:''\r\n};\r\n  \r\n// eslint-disable-next-line default-param-last\r\nexport const taskAssignmentSummaryReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n    case \"GET_TASK_PENDING\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_TASK_PENDING\":\r\n        return {\r\n            ...state,\r\n            dataPending:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_TASK_ON_PROGRESS\":\r\n        return {\r\n            ...state,\r\n  \r\n            isLoading: true,\r\n        };\r\n    case \"SET_TASK_ON_PROGRESS\":\r\n        return {\r\n            ...state,\r\n            dataOnProgress:action.payload,\r\n            isLoading: false,\r\n        };\r\n\r\n    case \"GET_TASK_DONE\":\r\n        return {\r\n            ...state,\r\n         \r\n            isLoading: false,\r\n        };\r\n      \r\n    case \"SET_TASK_DONE\":\r\n        return {\r\n            ...state,\r\n            dataDone:action.payload,\r\n            isLoading: false,\r\n        };\r\n        \r\n    case \"GET_ODI\":\r\n        return {\r\n            ...state,\r\n            odi:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_LSP\":\r\n        return {\r\n            ...state,\r\n            lsp:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_PUD\":\r\n        return {\r\n            ...state,\r\n            pud:action.payload,\r\n            isLoading: false,\r\n        };\r\n    case \"GET_SUBCON\":\r\n        return {\r\n            ...state,\r\n           \r\n            isLoading: true,\r\n        };\r\n    case \"SET_SUBCON\":\r\n        return {\r\n            ...state,\r\n            dataSubcon:action.payload,\r\n            isLoading: false,\r\n        };\r\n\r\n      \r\n   \r\n    default:\r\n        return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { authSlice } from \"@app/store/reducers/auth\";\r\nimport { uiSlice } from \"@app/store/reducers/ui\";\r\nimport { pagetextSlice } from \"@app/store/reducers/pagetext\";\r\nimport { dopSlice } from \"@app/store/reducers/dop\";\r\nimport { scopeSlice } from \"@app/store/reducers/scope\";\r\nimport { dopReducer } from \"@app/store/reducers/dopReducer\";\r\nimport { scopeReducer } from \"@app/store/reducers/scopeReducer\";\r\nimport { poScopeReducer } from \"@app/store/reducers/poScopeReducer\";\r\nimport { siteConditionReducer } from \"@app/store/reducers/siteConditionReducer\";\r\nimport { scopeOrderReducer } from \"@app/store/reducers/scopeOrderReducer\";\r\nimport { workFlowReducer } from \"@app/store/reducers/workFlowReducer\";\r\nimport { siteListDeliveryRequestReducer } from \"@app/store/reducers/siteListDeliveryRequestReducer\";\r\nimport { logistikFormReducer } from \"@app/store/reducers/logistikFormReducer\";\r\nimport { aprovalTaskPendingReducer } from \"@app/store/reducers/aprovalTaskPendingReducer\";\r\nimport { taskAssignmentSummaryReducer } from \"@app/store/reducers/taskAssignmentSummaryReducer\";\r\n\r\nexport const allReducer = combineReducers({\r\n    auth: authSlice.reducer,ui: uiSlice.reducer,\r\n    pagetext: pagetextSlice.reducer,\r\n    dop: dopSlice.reducer,\r\n    scope: scopeSlice.reducer,\r\n    dopReducer,\r\n    scopeReducer,\r\n    poScopeReducer,\r\n    siteConditionReducer,\r\n    scopeOrderReducer,\r\n    workFlowReducer,\r\n    siteListDeliveryRequestReducer,\r\n    logistikFormReducer,\r\n    aprovalTaskPendingReducer,\r\n    taskAssignmentSummaryReducer\r\n});\r\n","import axios from \"axios\";\r\n\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\n//action\r\n\r\n\r\nfunction* sagaGetData(action) {\r\n    try {\r\n        const res = yield axios.get(\"https://jsonplaceholder.typicode.com/posts/1/comments\");\r\n        console.log(res, \"result get data\");\r\n\r\n    } catch (error) {\r\n        console.log(error, \"eroor get data\");\r\n    }\r\n}\r\n\r\nexport function* SagaAuthWorker() {\r\n    yield takeLatest(\"GET_DATA\", sagaGetData);\r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\n\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport { setDataDop } from \"@app/store/action/dopAction\";\r\n//action\r\n\r\n\r\nfunction* sagaGetDataDop(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/masterdop`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res.data, \"result get data\");\r\n        yield put (setDataDop(res.data))\r\n    } catch (error) {\r\n        console.log(error, \"eroor get data dop\");\r\n    }\r\n}\r\n\r\nexport function* SagaDopWorker() {\r\n    yield takeLatest(\"GET_DATA_DOP\", sagaGetDataDop);\r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\n\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport {setDataScope} from '../action/scopeAction'\r\n//action\r\n\r\n\r\nfunction* sagaGetDataScope(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/poscope`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get scope\")\r\n        yield put (setDataScope(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data scope')\r\n    }\r\n}\r\n\r\nexport function* SagaScopeWorker() {\r\n    yield takeLatest(\"GET_DATA_SCOPE\", sagaGetDataScope);\r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport {setDataSite,getDataSite,postDataSite,postDataSiteSuccess,editDataSiteSuccess,editActivationSiteSuccess} from '../action/siteConditionAction'\r\n//action\r\n\r\n\r\nfunction* sagaGetDataSite(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/sitecondition`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataSite(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nfunction* sagaPostDataSite(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/sitecondition`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result psot site condition\")\r\n        yield put (postDataSiteSuccess())\r\n        yield put(getDataSite())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\nfunction* sagaPutDataSite(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.put(`https://bornxldemo-api.nsnebast.com/sitecondition`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result edit site condition\")\r\n        yield put (editDataSiteSuccess())\r\n        yield put(getDataSite())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\nfunction* sagaPutActivationSite(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.put(`https://bornxldemo-api.nsnebast.com/sitecondition/setactivationstatus`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result edit site condition\")\r\n        yield put (editActivationSiteSuccess())\r\n        yield put(getDataSite())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* SagaSiteConditionWorker() {\r\n    yield takeLatest(\"GET_DATA_SITE\", sagaGetDataSite);\r\n    yield takeLatest(\"POST_DATA_SITE\",sagaPostDataSite)\r\n    yield takeLatest(\"EDIT_DATA_SITE\",sagaPutDataSite)\r\n    yield takeLatest(\"EDIT_ACTIVATION_SITE\",sagaPutActivationSite)\r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport {setDataSite,getDataSite,postDataSite,postDataSiteSuccess,editDataSiteSuccess} from '../action/siteConditionAction'\r\n\r\nimport { editDataScopeSuccess, getDataScopeOrder, postDataScope, postDataScopeSuccess, setDataScopeOrder,setOrderType } from \"@app/store/action/scopeOrderAction\";\r\n//action\r\n\r\n\r\nfunction* sagaGetScopeOrder(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/masterscopeordertype`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataScopeOrder(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nfunction* sagaPostScopeOrderType(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/masterscopeordertype`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` ,\r\n                'Content-Type': 'application/json'\r\n            }});\r\n        console.log(res,\"result psot site condition\")\r\n        yield put (postDataScopeSuccess())\r\n        yield put(getDataScopeOrder())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\nfunction* sagaPutScopetype(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.put(`https://bornxldemo-api.nsnebast.com/masterscopeordertype/SetActivationStatus`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result edit site condition\")\r\n        yield put (editDataScopeSuccess())\r\n        yield put(getDataScopeOrder())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\n\r\nfunction* sagaGetOrder(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/masterordertype`,{headers: {\r\n            Authorization: `Bearer ${token}` ,\r\n            \r\n        }});\r\n        console.log(res,\"result get order\")\r\n        yield put (setOrderType(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get order')\r\n    }\r\n}\r\n\r\nfunction* sagaPutDataScopetype(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.put(`https://bornxldemo-api.nsnebast.com/masterscopeordertype`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result edit site condition\")\r\n        yield put (editDataScopeSuccess())\r\n        yield put(getDataScopeOrder())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\n\r\nexport function* SagaScopeOrderWorker() {\r\n    yield takeLatest(\"GET_DATA_SCOPE_ORDER\", sagaGetScopeOrder);\r\n    yield takeLatest(\"GET_DATA_ORDER\", sagaGetOrder);\r\n    yield takeLatest(\"POST_DATA_SCOPE\",sagaPostScopeOrderType)   \r\n    yield takeLatest(\"EDIT_DATA_SCOPE\",sagaPutScopetype) \r\n    yield takeLatest(\"EDIT_SCOPE\",sagaPutDataScopetype) \r\n    \r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport {setDataSite,getDataSite,postDataSite,postDataSiteSuccess,editDataSiteSuccess} from '../action/siteConditionAction'\r\nimport { setDataWorkFlow,postDataWorkFlow, getDataWorkFlow,postDataWorkFlowSuccess, editDataWorkFlowSuccess } from \"@app/store/action/workFlowAction\";\r\n//action\r\n\r\n\r\nfunction* sagaGetDataWorkFlow(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/workflow`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataWorkFlow(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nfunction* sagaPostDataWorkFLow(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/workflow`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result psot workflow\")\r\n        yield put (postDataWorkFlowSuccess())\r\n        yield put(getDataWorkFlow())\r\n    } catch (error) {\r\n        console.log(error,'error post data workflow')\r\n    }\r\n}\r\nfunction* sagaPutDataWorkFlow(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.put(`https://bornxldemo-api.nsnebast.com/workflow`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result edit site condition\")\r\n        yield put (editDataWorkFlowSuccess())\r\n        yield put(getDataWorkFlow())\r\n    } catch (error) {\r\n        console.log(error,'error post data site condition')\r\n    }\r\n}\r\n\r\nexport function* SagaWorFlowWorker() {\r\n    yield takeLatest(\"GET_DATA_WORKFLOW\", sagaGetDataWorkFlow);\r\n    yield takeLatest(\"POST_DATA_WORKFLOW\",sagaPostDataWorkFLow)\r\n    yield takeLatest(\"EDIT_DATA_WORKFLOW\",sagaPutDataWorkFlow)\r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\n\r\nimport { setDataSiteList,setOrderRejectionPending } from \"@app/store/action/siteListDeliveryRequestAction\";\r\n//action\r\n\r\n\r\nfunction* sagaGetSiteList(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/sitelist/SitelistRequireDeliveryReq`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataSiteList(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetOrderRejectionPending(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/wftransaction/orderRequestGetRejectionPendingList`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setOrderRejectionPending(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nexport function* SagaSiteListDeliveryWorker() {\r\n    yield takeLatest(\"GET_DATA_SITE_LIST\", sagaGetSiteList);\r\n    yield takeLatest(\"GET_ORDER_REJECTION_PENDING\", sagaGetOrderRejectionPending);\r\n\r\n    \r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select,call } from \"redux-saga/effects\";\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {getLogisticPending,postAsDraftSuccess,setDeliveryTransport,setDataSiteInfo,setMaterialOrderDetail,setLsp,setDeliveryList,setDeliveryMode,postLogistikFormSuccess,setLogistikPending} from \"../action/logistikFormAction\"\r\n\r\nimport { browserHistory } from 'react-router-dom'\r\n\r\n\r\nfunction* sagaGetSiteInfo(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.logistikFormReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/materialmanagement/OrderDetailRequestGetDetail/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataSiteInfo(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetMaterialOrder(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.logistikFormReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/materialmanagement/orderRequestMaterialGetDetailBasedOnOrderRequest/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setMaterialOrderDetail(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetLsp(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/subcon/GetLSP`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setLsp(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetDeliveryList(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    \r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/cdmr/getListIncludeTransportMode`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDeliveryList(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetDeliveryTransport(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const deliveryId = yield select(state=>state.logistikFormReducer.idDelivery)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/cdmr/getTransportModeBasedOnCDMR/${deliveryId}`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get transport\")\r\n        yield put (setDeliveryTransport(res.data))\r\n       \r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetDeliveryMode(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.logistikFormReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/deliveryMode/getListBasedonOrderRequest/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDeliveryMode(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaPostLogistikForm(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n   \r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/materialmanagement/orderRequestDetailFormLogisticSubmit`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (postLogistikFormSuccess(res))\r\n        yield toast.success(\"success\");\r\n        yield put (getLogisticPending())\r\n        return res\r\n        \r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n        yield toast.error(\"error\");\r\n        return \"error\"\r\n       \r\n    }\r\n}\r\nfunction* sagaPostAsDraft(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/materialmanagement/orderRequestDetailFormLogisticSubmit`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer ${token}` \r\n            }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (postAsDraftSuccess(res))\r\n        yield put (getLogisticPending())\r\n        yield toast.success(\"Saved As Draft\");\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetLogistikPending(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/materialmanagement/orderRequestLogisticAssignmentPending`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setLogistikPending(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* SagaLogistikFormWorker() {\r\n    yield takeLatest(\"GET_DATA_SITE_INFO\", sagaGetSiteInfo);\r\n    yield takeLatest(\"GET_MATERIAL_ORDER_DETAIL\", sagaGetMaterialOrder);\r\n    yield takeLatest(\"GET_LSP\", sagaGetLsp);\r\n    yield takeLatest(\"GET_DELIVERY_LIST\", sagaGetDeliveryList);\r\n    yield takeLatest(\"GET_DELIVERY_MODE\", sagaGetDeliveryMode);\r\n    yield takeLatest(\"POST_LOGISTIK_FORM\", sagaPostLogistikForm);\r\n    yield takeLatest(\"POST_AS_DRAFT\", sagaPostAsDraft);\r\n    yield takeLatest(\"GET_LOGISTIK_PENDING\", sagaGetLogistikPending);\r\n    yield takeLatest(\"GET_DELIVERY_TRANSPORT\", sagaGetDeliveryTransport);\r\n    \r\n    \r\n    \r\n}\r\n","import axios from \"axios\";\r\nimport { API } from \"@app/Variables\";\r\nimport {Alert} from 'antd'\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n//action\r\nimport {setAprovalPending,setOrderDetail,setMaterial,setLog,postAproveSuccess,getOrderDetail,postRejectSuccess} from '../action/aprovalTaskPendingAction'\r\n\r\nfunction* sagaGetAprovalTaskPending(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/wftransaction/orderRequestGetApprovalPendingList`,{headers: {\r\n            Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setAprovalPending(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetOrderRequesDetail(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.aprovalTaskPendingReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/materialmanagement/OrderDetailRequestGetDetail/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setOrderDetail(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetMaterial(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.aprovalTaskPendingReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/materialmanagement/orderRequestMaterialGetDetailBasedOnOrderRequest/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setMaterial(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetLog(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.aprovalTaskPendingReducer.odi)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/audittrail/auditTrailOrderRequestGetList/${dataOdi}`,{headers: {\r\n            Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setLog(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nfunction* sagaPostAproval(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.aprovalTaskPendingReducer.odi)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/wftransaction/orderRequestApprove`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n            }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (postAproveSuccess(res.data))\r\n        yield put (getOrderDetail())\r\n        yield toast.success(\"success\");\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n        yield toast.error(\"error\");\r\n    }\r\n}\r\nfunction* sagaPostReject(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    const dataOdi = yield select(state=>state.aprovalTaskPendingReducer.odi)\r\n    try {\r\n        const res = yield axios.post(`https://bornxldemo-api.nsnebast.com/wftransaction/orderRequestReject`,action.payload\r\n            ,{headers: {\r\n                Authorization: `Bearer eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV2lkeWFrYSBQYW1iYWplbmciLCJlbWFpbCI6IndpZHlha2EucGFtYmFqZW5nQG5va2lhLmNvbSIsInByb3ZpZGVyIjoiQm9ybiB3ZWIiLCJpZCI6IjUwNmQ4NTU2LWVmM2MtNDY4Ny04MTI4LWEwZWNlYzE2ZjRhZiIsInVpZCI6MzgxNiwiZXhwIjoxNjQ5NzU1OTU2LCJpc01vYmlsZSI6ZmFsc2UsImluc3RhbGxhdGlvbklkIjoiIiwicm9sZUNvZGUiOiJBRiIsInJvbGVJZCI6MTg2LCJ1c2VyVHlwZSI6Ik4ifQ.A_db8HHaNikh9p9dakmN8_W4RZ1JIGYoZ7Bt1LzAaeb0aSMH89fbPCG7NRuIMZF8QjgGIe_L2539ZWt_kFAN6g` \r\n            }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (postRejectSuccess(res.data))\r\n        yield put (getOrderDetail())\r\n        yield toast.success(\"success\");\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n        yield toast.error(\"error\");\r\n    }\r\n}\r\n\r\nexport function* SagaAprovalTaskPendingWorker() {\r\n    yield takeLatest(\"GET_APROVAL_PENDING\", sagaGetAprovalTaskPending);\r\n    yield takeLatest(\"GET_ORDER_REQUEST_DETAIL\", sagaGetOrderRequesDetail);\r\n    yield takeLatest(\"GET_MATERIAL\", sagaGetMaterial);\r\n    yield takeLatest(\"GET_LOG\", sagaGetLog);\r\n    yield takeLatest(\"POST_APROVE\", sagaPostAproval);\r\n    yield takeLatest(\"POST_REJECT\", sagaPostReject);\r\n\r\n    \r\n    \r\n    \r\n}","import axios from \"axios\";\r\n\r\nimport { put, takeLatest, select } from \"redux-saga/effects\";\r\n\r\n\r\nimport { setDataDone, setDataOnProgress, setDataPending,setSubcon } from \"@app/store/action/taskAssignmentPendingAction\";\r\n//action\r\n\r\n\r\nfunction* sagaGetTaskPending(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/taskassignment/taskAssignmentSubconPending`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result\")\r\n        yield put (setDataPending(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetTaskOnProgress(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/taskassignment/taskAssignmentSubconOnProgress`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result\")\r\n        yield put (setDataOnProgress(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaGetTaskDone(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`https://bornxldemo-api.nsnebast.com/taskassignment/taskAssignmentSubconDone`,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setDataDone(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\nfunction* sagaSubcon(action) {\r\n    const token = yield select(state=>state.auth.token)\r\n    try {\r\n        const res = yield axios.get(`/subcon/getFieldSubcontractorEngineer/{subconid}/{workpackageid}\r\n        `,{headers: {\r\n            Authorization: `Bearer ${token}` \r\n        }});\r\n        console.log(res,\"result get site condition\")\r\n        yield put (setSubcon(res.data))\r\n    } catch (error) {\r\n        console.log(error,'error get data site condition')\r\n    }\r\n}\r\n\r\nexport function* SagaTaskAssignmentSummaryWorker() {\r\n    yield takeLatest(\"GET_TASK_PENDING\", sagaGetTaskPending);\r\n    yield takeLatest(\"GET_TASK_ON_PROGRESS\", sagaGetTaskOnProgress);\r\n    yield takeLatest(\"GET_TASK_DONE\", sagaGetTaskDone);\r\n    yield takeLatest(\"GET_SUBCON\", sagaSubcon);\r\n\r\n    \r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { SagaAuthWorker } from \"@app/store/saga/auth\";\r\nimport { SagaDopWorker } from \"@app/store/saga/dopSaga\";\r\nimport { SagaScopeWorker } from \"@app/store/saga/scopeSaga\";\r\nimport { SagaSiteConditionWorker } from \"@app/store/saga/siteConditionSaga\";\r\nimport { SagaScopeOrderWorker } from \"@app/store/saga/scopeOrderSaga\";\r\nimport { SagaWorFlowWorker } from \"@app/store/saga/workFLowSaga\";\r\nimport { SagaSiteListDeliveryWorker } from \"@app/store/saga/siteListDeliveryRequestSaga\";\r\nimport { SagaLogistikFormWorker } from \"@app/store/saga/logistikFormSaga\";\r\nimport { SagaAprovalTaskPendingWorker } from \"@app/store/saga/aprovalTaskPendingSaga\";\r\nimport { SagaTaskAssignmentSummaryWorker } from \"@app/store/saga/taskAssignmentSummarySaga\";\r\n\r\nexport function* allSaga() {\r\n    yield all([SagaAuthWorker(),SagaDopWorker(),SagaScopeWorker(),SagaSiteConditionWorker(),SagaScopeOrderWorker(),SagaWorFlowWorker(),SagaSiteListDeliveryWorker(),SagaLogistikFormWorker()\r\n        ,SagaAprovalTaskPendingWorker(),\r\n        SagaTaskAssignmentSummaryWorker()]);\r\n}\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport ReduxSaga from \"redux-saga\";\r\nimport logger from \"redux-logger\";\r\n\r\n\r\nimport {authSlice} from '@app/store/reducers/auth';\r\nimport {uiSlice} from '@app/store/reducers/ui';\r\nimport {pagetextSlice} from '@app/store/reducers/pagetext';\r\nimport {dopSlice} from '@app/store/reducers/dop';\r\nimport {scopeSlice} from '@app/store/reducers/scope';\r\nimport { allReducer } from '@app/store/reducers/allReducer';\r\nimport { allSaga } from '@app/store/saga/allSaga';\r\n\r\nconst persistConfig = {\r\n    key: 'bornxl',\r\n    storage: AsyncStorage,\r\n    timeout: null,\r\n};\r\n  \r\nconst sagaMiddleWare = ReduxSaga();\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducer);\r\n\r\nexport const store = createStore(persistedReducer, {}, applyMiddleware(logger, sagaMiddleWare))\r\n\r\nexport const Persistor = persistStore(store);\r\n\r\nsagaMiddleWare.run(allSaga);\r\n\r\n\r\n\r\n\r\n// const persistConfig = {\r\n//     key: \"bornxl\",\r\n//     storage: AsyncStorage,\r\n//     timeout: null,\r\n// };\r\n// const allReducer ={ }\r\n// const persistedReducer = persistReducer(persistConfig, allReducer);\r\n// const sagaMiddleWare = ReduxSaga();\r\n\r\n// export const Store = createStore(persistedReducer, {}, applyMiddleware(logger, sagaMiddleWare));\r\n\r\n// export const Persistor = persistStore(Store);\r\n\r\n// sagaMiddleWare.run(allSaga);\r\n","import i18n from 'i18next';\r\nimport {initReactI18next} from 'react-i18next';\r\n\r\nimport translationEN from './locales/en/translation.json';\r\nimport translationTR from './locales/tr/translation.json';\r\nimport translationDE from './locales/de/translation.json';\r\nimport translationES from './locales/es/translation.json';\r\nimport translationFR from './locales/fr/translation.json';\r\n\r\n// the translations\r\nconst resources = {\r\n    en: {\r\n        translation: translationEN\r\n    },\r\n    tr: {\r\n        translation: translationTR\r\n    },\r\n    es: {\r\n        translation: translationES\r\n    },\r\n    fr: {\r\n        translation: translationFR\r\n    },\r\n    de: {\r\n        translation: translationDE\r\n    }\r\n};\r\n\r\ni18n.use(initReactI18next) // passes i18n down to react-i18next\r\n    .init({\r\n        resources,\r\n        lng: 'en',\r\n        interpolation: {\r\n            escapeValue: false // react already safes from xss\r\n        },\r\n        react: {\r\n            wait: true\r\n        }\r\n    });\r\n\r\nexport default i18n;\r\n","/* eslint-disable no-console */\r\n/* eslint-disable no-param-reassign */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n        )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {toast} from 'react-toastify';\r\nimport {Gatekeeper} from 'gatekeeper-client-sdk';\r\nimport App from '@app/App';\r\nimport { store,Persistor } from '@app/store/store';\r\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\r\n\r\nimport './index.scss';\r\nimport './i18n';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\ntoast.configure({\r\n    autoClose: 3000,\r\n    draggable: false,\r\n    position: 'top-right',\r\n    hideProgressBar: false,\r\n    newestOnTop: true,\r\n    closeOnClick: true,\r\n    rtl: false,\r\n    pauseOnVisibilityChange: true,\r\n    pauseOnHover: true\r\n});\r\n\r\n//Gatekeeper.initialize('08401b7e-da7e-4bf3-a9bf-6f594ae5fb02');\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate persistor={Persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}